// CodeGear C++Builder
// Copyright (c) 1995, 2021 by Embarcadero Technologies, Inc.
// All rights reserved

// (DO NOT EDIT: machine generated header) 'Winapi.OpenGLext.pas' rev: 34.00 (Windows)

#ifndef Winapi_OpenglextHPP
#define Winapi_OpenglextHPP

#pragma delphiheader begin
#pragma option push
#pragma option -w-      // All warnings off
#pragma option -Vx      // Zero-length empty class member 
#pragma pack(push,8)
#include <System.hpp>
#include <SysInit.hpp>
#include <Winapi.OpenGL.hpp>

//-- user supplied -----------------------------------------------------------
#include <gl/glext.h>

namespace Winapi
{
namespace Openglext
{
//-- forward type declarations -----------------------------------------------
//-- type declarations -------------------------------------------------------
typedef NativeInt *PGLsizeiptr;

typedef NativeInt *PGLintptr;

typedef char * PGLchar;

typedef char * *PPGLchar;

typedef System::Word *PGLhalf;

typedef void * *PGLsync;

typedef __int64 *PGLint64;

typedef unsigned __int64 *PGLuint64;

typedef int *PGLfixed;

typedef _cl_context *p_cl_context;

typedef _cl_event *p_cl_event;

typedef __int64 *PGLint64EXT;

typedef unsigned __int64 *PGLuint64EXT;

typedef System::Word *PGLhalfARB;

typedef void * *PGLhandleARB;

typedef char * *PGLcharARB;

typedef PGLcharARB *PPGLcharARB;

typedef NativeInt *PGLsizeiptrARB;

typedef NativeInt *PGLintptrARB;

typedef System::Word *PGLhalfNV;

typedef NativeInt *PGLvdpauSurfaceNV;

typedef void __stdcall (*GLDEBUGPROCAMD)(unsigned id, unsigned category, unsigned severity, int length, const char * message_, void * userParam);

//-- var, const, procedure ---------------------------------------------------
extern DELPHI_PACKAGE void __stdcall (*glDrawRangeElements)(unsigned mode, unsigned start, unsigned end_, int count, unsigned type_, const void * indices);
extern DELPHI_PACKAGE void __stdcall (*glTexImage3D)(unsigned target, int level, int internalformat, int width, int height, int depth, int border, unsigned format, unsigned type_, const void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glTexSubImage3D)(unsigned target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, unsigned format, unsigned type_, const void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glCopyTexSubImage3D)(unsigned target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
extern DELPHI_PACKAGE void __stdcall (*glActiveTexture)(unsigned texture);
extern DELPHI_PACKAGE void __stdcall (*glSampleCoverage)(float value, System::Byte invert);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexImage3D)(unsigned target, int level, unsigned internalformat, int width, int height, int depth, int border, int imageSize, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexImage2D)(unsigned target, int level, unsigned internalformat, int width, int height, int border, int imageSize, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexImage1D)(unsigned target, int level, unsigned internalformat, int width, int border, int imageSize, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexSubImage3D)(unsigned target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, unsigned format, int imageSize, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexSubImage2D)(unsigned target, int level, int xoffset, int yoffset, int width, int height, unsigned format, int imageSize, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexSubImage1D)(unsigned target, int level, int xoffset, int width, unsigned format, int imageSize, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glGetCompressedTexImage)(unsigned target, int level, void * img);
extern DELPHI_PACKAGE void __stdcall (*glClientActiveTexture)(unsigned texture);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1d)(unsigned target, double s);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1dv)(unsigned target, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1f)(unsigned target, float s);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1fv)(unsigned target, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1i)(unsigned target, int s);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1iv)(unsigned target, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1s)(unsigned target, short s);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1sv)(unsigned target, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2d)(unsigned target, double s, double t);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2dv)(unsigned target, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2f)(unsigned target, float s, float t);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2fv)(unsigned target, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2i)(unsigned target, int s, int t);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2iv)(unsigned target, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2s)(unsigned target, short s, short t);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2sv)(unsigned target, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3d)(unsigned target, double s, double t, double r);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3dv)(unsigned target, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3f)(unsigned target, float s, float t, float r);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3fv)(unsigned target, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3i)(unsigned target, int s, int t, int r);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3iv)(unsigned target, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3s)(unsigned target, short s, short t, short r);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3sv)(unsigned target, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4d)(unsigned target, double s, double t, double r, double q);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4dv)(unsigned target, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4f)(unsigned target, float s, float t, float r, float q);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4fv)(unsigned target, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4i)(unsigned target, int s, int t, int r, int q);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4iv)(unsigned target, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4s)(unsigned target, short s, short t, short r, short q);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4sv)(unsigned target, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glLoadTransposeMatrixf)(const Winapi::Opengl::PGLfloat m);
extern DELPHI_PACKAGE void __stdcall (*glLoadTransposeMatrixd)(const Winapi::Opengl::PGLdouble m);
extern DELPHI_PACKAGE void __stdcall (*glMultTransposeMatrixf)(const Winapi::Opengl::PGLfloat m);
extern DELPHI_PACKAGE void __stdcall (*glMultTransposeMatrixd)(const Winapi::Opengl::PGLdouble m);
extern DELPHI_PACKAGE void __stdcall (*glBlendFuncSeparate)(unsigned sfactorRGB, unsigned dfactorRGB, unsigned sfactorAlpha, unsigned dfactorAlpha);
extern DELPHI_PACKAGE void __stdcall (*glMultiDrawArrays)(unsigned mode, const Winapi::Opengl::PGLInt first, const Winapi::Opengl::PGLSizei count, int drawcount);
extern DELPHI_PACKAGE void __stdcall (*glMultiDrawElements)(unsigned mode, const Winapi::Opengl::PGLSizei count, unsigned type_, const System::PPointer indices, int drawcount);
extern DELPHI_PACKAGE void __stdcall (*glPointParameterf)(unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glPointParameterfv)(unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glPointParameteri)(unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glPointParameteriv)(unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glFogCoordf)(float coord);
extern DELPHI_PACKAGE void __stdcall (*glFogCoordfv)(const Winapi::Opengl::PGLfloat coord);
extern DELPHI_PACKAGE void __stdcall (*glFogCoordd)(double coord);
extern DELPHI_PACKAGE void __stdcall (*glFogCoorddv)(const Winapi::Opengl::PGLdouble coord);
extern DELPHI_PACKAGE void __stdcall (*glFogCoordPointer)(unsigned type_, int stride, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3b)(System::Int8 red, System::Int8 green, System::Int8 blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3bv)(const Winapi::Opengl::PGLByte v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3d)(double red, double green, double blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3dv)(const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3f)(float red, float green, float blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3fv)(const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3i)(int red, int green, int blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3iv)(const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3s)(short red, short green, short blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3sv)(const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3ub)(System::Byte red, System::Byte green, System::Byte blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3ubv)(const Winapi::Opengl::PGLubyte v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3ui)(unsigned red, unsigned green, unsigned blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3uiv)(const Winapi::Opengl::PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3us)(System::Word red, System::Word green, System::Word blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3usv)(const Winapi::Opengl::PGLushort v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColorPointer)(int size, unsigned type_, int stride, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2d)(double x, double y);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2dv)(const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2f)(float x, float y);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2fv)(const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2i)(int x, int y);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2iv)(const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2s)(short x, short y);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2sv)(const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3d)(double x, double y, double z);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3dv)(const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3f)(float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3fv)(const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3i)(int x, int y, int z);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3iv)(const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3s)(short x, short y, short z);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3sv)(const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glBlendColor)(float red, float green, float blue, float alpha);
extern DELPHI_PACKAGE void __stdcall (*glBlendEquation)(unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glGenQueries)(int n, Winapi::Opengl::PGLuint ids);
extern DELPHI_PACKAGE void __stdcall (*glDeleteQueries)(int n, const Winapi::Opengl::PGLuint ids);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsQuery)(unsigned id);
extern DELPHI_PACKAGE void __stdcall (*glBeginQuery)(unsigned target, unsigned id);
extern DELPHI_PACKAGE void __stdcall (*glEndQuery)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryiv)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryObjectiv)(unsigned id, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryObjectuiv)(unsigned id, unsigned pname, Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glBindBuffer)(unsigned target, unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glDeleteBuffers)(int n, const Winapi::Opengl::PGLuint buffers);
extern DELPHI_PACKAGE void __stdcall (*glGenBuffers)(int n, Winapi::Opengl::PGLuint buffers);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsBuffer)(unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glBufferData)(unsigned target, NativeInt size, const void * data, unsigned usage);
extern DELPHI_PACKAGE void __stdcall (*glBufferSubData)(unsigned target, NativeInt offset, NativeInt size, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glGetBufferSubData)(unsigned target, NativeInt offset, NativeInt size, void * data);
extern DELPHI_PACKAGE void * __stdcall (*glMapBuffer)(unsigned target, unsigned access);
extern DELPHI_PACKAGE System::Byte __stdcall (*glUnmapBuffer)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glGetBufferParameteriv)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetBufferPointerv)(unsigned target, unsigned pname, System::PPointer params);
extern DELPHI_PACKAGE void __stdcall (*glBlendEquationSeparate)(unsigned modeRGB, unsigned modeAlpha);
extern DELPHI_PACKAGE void __stdcall (*glDrawBuffers)(int n, const Winapi::Opengl::PGLEnum bufs);
extern DELPHI_PACKAGE void __stdcall (*glStencilOpSeparate)(unsigned face, unsigned sfail, unsigned dpfail, unsigned dppass);
extern DELPHI_PACKAGE void __stdcall (*glStencilFuncSeparate)(unsigned face, unsigned func, int ref, unsigned mask);
extern DELPHI_PACKAGE void __stdcall (*glStencilMaskSeparate)(unsigned face, unsigned mask);
extern DELPHI_PACKAGE void __stdcall (*glAttachShader)(unsigned program_, unsigned shader);
extern DELPHI_PACKAGE void __stdcall (*glBindAttribLocation)(unsigned program_, unsigned index, const char * name);
extern DELPHI_PACKAGE void __stdcall (*glCompileShader)(unsigned shader);
extern DELPHI_PACKAGE unsigned __stdcall (*glCreateProgram)(void);
extern DELPHI_PACKAGE unsigned __stdcall (*glCreateShader)(unsigned type_);
extern DELPHI_PACKAGE void __stdcall (*glDeleteProgram)(unsigned program_);
extern DELPHI_PACKAGE void __stdcall (*glDeleteShader)(unsigned shader);
extern DELPHI_PACKAGE void __stdcall (*glDetachShader)(unsigned program_, unsigned shader);
extern DELPHI_PACKAGE void __stdcall (*glDisableVertexAttribArray)(unsigned index);
extern DELPHI_PACKAGE void __stdcall (*glEnableVertexAttribArray)(unsigned index);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveAttrib)(unsigned program_, unsigned index, int bufSize, Winapi::Opengl::PGLSizei length, Winapi::Opengl::PGLInt size, Winapi::Opengl::PGLEnum type_, char * name);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveUniform)(unsigned program_, unsigned index, int bufSize, Winapi::Opengl::PGLSizei length, Winapi::Opengl::PGLInt size, Winapi::Opengl::PGLEnum type_, char * name);
extern DELPHI_PACKAGE void __stdcall (*glGetAttachedShaders)(unsigned program_, int maxCount, Winapi::Opengl::PGLSizei count, Winapi::Opengl::PGLuint shaders);
extern DELPHI_PACKAGE int __stdcall (*glGetAttribLocation)(unsigned program_, const char * name);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramiv)(unsigned program_, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramInfoLog)(unsigned program_, int bufSize, Winapi::Opengl::PGLSizei length, char * infoLog);
extern DELPHI_PACKAGE void __stdcall (*glGetShaderiv)(unsigned shader, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetShaderInfoLog)(unsigned shader, int bufSize, Winapi::Opengl::PGLSizei length, char * infoLog);
extern DELPHI_PACKAGE void __stdcall (*glGetShaderSource)(unsigned shader, int bufSize, Winapi::Opengl::PGLSizei length, char * source);
extern DELPHI_PACKAGE int __stdcall (*glGetUniformLocation)(unsigned program_, const char * name);
extern DELPHI_PACKAGE void __stdcall (*glGetUniformfv)(unsigned program_, int location, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetUniformiv)(unsigned program_, int location, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribdv)(unsigned index, unsigned pname, Winapi::Opengl::PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribfv)(unsigned index, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribiv)(unsigned index, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribPointerv)(unsigned index, unsigned pname, System::PPointer pointer);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsProgram)(unsigned program_);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsShader)(unsigned shader);
extern DELPHI_PACKAGE void __stdcall (*glLinkProgram)(unsigned program_);
extern DELPHI_PACKAGE void __stdcall (*glShaderSource)(unsigned shader, int count, const PPGLchar string_, const Winapi::Opengl::PGLInt length);
extern DELPHI_PACKAGE void __stdcall (*glUseProgram)(unsigned program_);
extern DELPHI_PACKAGE void __stdcall (*glUniform1f)(int location, float v0);
extern DELPHI_PACKAGE void __stdcall (*glUniform2f)(int location, float v0, float v1);
extern DELPHI_PACKAGE void __stdcall (*glUniform3f)(int location, float v0, float v1, float v2);
extern DELPHI_PACKAGE void __stdcall (*glUniform4f)(int location, float v0, float v1, float v2, float v3);
extern DELPHI_PACKAGE void __stdcall (*glUniform1i)(int location, int v0);
extern DELPHI_PACKAGE void __stdcall (*glUniform2i)(int location, int v0, int v1);
extern DELPHI_PACKAGE void __stdcall (*glUniform3i)(int location, int v0, int v1, int v2);
extern DELPHI_PACKAGE void __stdcall (*glUniform4i)(int location, int v0, int v1, int v2, int v3);
extern DELPHI_PACKAGE void __stdcall (*glUniform1fv)(int location, int count, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniform2fv)(int location, int count, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniform3fv)(int location, int count, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniform4fv)(int location, int count, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniform1iv)(int location, int count, const Winapi::Opengl::PGLInt value);
extern DELPHI_PACKAGE void __stdcall (*glUniform2iv)(int location, int count, const Winapi::Opengl::PGLInt value);
extern DELPHI_PACKAGE void __stdcall (*glUniform3iv)(int location, int count, const Winapi::Opengl::PGLInt value);
extern DELPHI_PACKAGE void __stdcall (*glUniform4iv)(int location, int count, const Winapi::Opengl::PGLInt value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix2fv)(int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix3fv)(int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix4fv)(int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glValidateProgram)(unsigned program_);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1d)(unsigned index, double x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1dv)(unsigned index, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1f)(unsigned index, float x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1fv)(unsigned index, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1s)(unsigned index, short x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1sv)(unsigned index, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2d)(unsigned index, double x, double y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2dv)(unsigned index, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2f)(unsigned index, float x, float y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2fv)(unsigned index, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2s)(unsigned index, short x, short y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2sv)(unsigned index, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3d)(unsigned index, double x, double y, double z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3dv)(unsigned index, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3f)(unsigned index, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3fv)(unsigned index, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3s)(unsigned index, short x, short y, short z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3sv)(unsigned index, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4Nbv)(unsigned index, const Winapi::Opengl::PGLByte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4Niv)(unsigned index, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4Nsv)(unsigned index, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4Nub)(unsigned index, System::Byte x, System::Byte y, System::Byte z, System::Byte w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4Nubv)(unsigned index, const Winapi::Opengl::PGLubyte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4Nuiv)(unsigned index, const Winapi::Opengl::PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4Nusv)(unsigned index, const Winapi::Opengl::PGLushort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4bv)(unsigned index, const Winapi::Opengl::PGLByte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4d)(unsigned index, double x, double y, double z, double w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4dv)(unsigned index, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4f)(unsigned index, float x, float y, float z, float w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4fv)(unsigned index, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4iv)(unsigned index, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4s)(unsigned index, short x, short y, short z, short w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4sv)(unsigned index, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4ubv)(unsigned index, const Winapi::Opengl::PGLubyte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4uiv)(unsigned index, const Winapi::Opengl::PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4usv)(unsigned index, const Winapi::Opengl::PGLushort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribPointer)(unsigned index, int size, unsigned type_, System::Byte normalized, int stride, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix2x3fv)(int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix3x2fv)(int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix2x4fv)(int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix4x2fv)(int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix3x4fv)(int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix4x3fv)(int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glColorMaski)(unsigned index, System::Byte r, System::Byte g, System::Byte b, System::Byte a);
extern DELPHI_PACKAGE void __stdcall (*glGetBooleani_v)(unsigned target, unsigned index, Winapi::Opengl::PGLBoolean data);
extern DELPHI_PACKAGE void __stdcall (*glGetIntegeri_v)(unsigned target, unsigned index, Winapi::Opengl::PGLInt data);
extern DELPHI_PACKAGE void __stdcall (*glEnablei)(unsigned target, unsigned index);
extern DELPHI_PACKAGE void __stdcall (*glDisablei)(unsigned target, unsigned index);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsEnabledi)(unsigned target, unsigned index);
extern DELPHI_PACKAGE void __stdcall (*glBeginTransformFeedback)(unsigned primitiveMode);
extern DELPHI_PACKAGE void __stdcall (*glEndTransformFeedback)(void);
extern DELPHI_PACKAGE void __stdcall (*glBindBufferRange)(unsigned target, unsigned index, unsigned buffer, NativeInt offset, NativeInt size);
extern DELPHI_PACKAGE void __stdcall (*glBindBufferBase)(unsigned target, unsigned index, unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glTransformFeedbackVaryings)(unsigned program_, int count, const PPGLchar varyings, unsigned bufferMode);
extern DELPHI_PACKAGE void __stdcall (*glGetTransformFeedbackVarying)(unsigned program_, unsigned index, int bufSize, Winapi::Opengl::PGLSizei length, Winapi::Opengl::PGLSizei size, Winapi::Opengl::PGLEnum type_, char * name);
extern DELPHI_PACKAGE void __stdcall (*glClampColor)(unsigned target, unsigned clamp);
extern DELPHI_PACKAGE void __stdcall (*glBeginConditionalRender)(unsigned id, unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glEndConditionalRender)(void);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribIPointer)(unsigned index, int size, unsigned type_, int stride, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribIiv)(unsigned index, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribIuiv)(unsigned index, unsigned pname, Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI1i)(unsigned index, int x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI2i)(unsigned index, int x, int y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI3i)(unsigned index, int x, int y, int z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4i)(unsigned index, int x, int y, int z, int w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI1ui)(unsigned index, unsigned x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI2ui)(unsigned index, unsigned x, unsigned y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI3ui)(unsigned index, unsigned x, unsigned y, unsigned z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4ui)(unsigned index, unsigned x, unsigned y, unsigned z, unsigned w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI1iv)(unsigned index, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI2iv)(unsigned index, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI3iv)(unsigned index, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4iv)(unsigned index, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI1uiv)(unsigned index, const Winapi::Opengl::PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI2uiv)(unsigned index, const Winapi::Opengl::PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI3uiv)(unsigned index, const Winapi::Opengl::PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4uiv)(unsigned index, const Winapi::Opengl::PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4bv)(unsigned index, const Winapi::Opengl::PGLByte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4sv)(unsigned index, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4ubv)(unsigned index, const Winapi::Opengl::PGLubyte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4usv)(unsigned index, const Winapi::Opengl::PGLushort v);
extern DELPHI_PACKAGE void __stdcall (*glGetUniformuiv)(unsigned program_, int location, Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glBindFragDataLocation)(unsigned program_, unsigned color, const char * name);
extern DELPHI_PACKAGE int __stdcall (*glGetFragDataLocation)(unsigned program_, const char * name);
extern DELPHI_PACKAGE void __stdcall (*glUniform1ui)(int location, unsigned v0);
extern DELPHI_PACKAGE void __stdcall (*glUniform2ui)(int location, unsigned v0, unsigned v1);
extern DELPHI_PACKAGE void __stdcall (*glUniform3ui)(int location, unsigned v0, unsigned v1, unsigned v2);
extern DELPHI_PACKAGE void __stdcall (*glUniform4ui)(int location, unsigned v0, unsigned v1, unsigned v2, unsigned v3);
extern DELPHI_PACKAGE void __stdcall (*glUniform1uiv)(int location, int count, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glUniform2uiv)(int location, int count, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glUniform3uiv)(int location, int count, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glUniform4uiv)(int location, int count, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glTexParameterIiv)(unsigned target, unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glTexParameterIuiv)(unsigned target, unsigned pname, const Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glGetTexParameterIiv)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetTexParameterIuiv)(unsigned target, unsigned pname, Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glClearBufferiv)(unsigned buffer, int drawbuffer, const Winapi::Opengl::PGLInt value);
extern DELPHI_PACKAGE void __stdcall (*glClearBufferuiv)(unsigned buffer, int drawbuffer, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glClearBufferfv)(unsigned buffer, int drawbuffer, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glClearBufferfi)(unsigned buffer, int drawbuffer, float depth, int stencil);
extern DELPHI_PACKAGE Winapi::Opengl::PGLubyte __stdcall (*glGetStringi)(unsigned name, unsigned index);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsRenderbuffer)(unsigned renderbuffer);
extern DELPHI_PACKAGE void __stdcall (*glBindRenderbuffer)(unsigned target, unsigned renderbuffer);
extern DELPHI_PACKAGE void __stdcall (*glDeleteRenderbuffers)(int n, const Winapi::Opengl::PGLuint renderbuffers);
extern DELPHI_PACKAGE void __stdcall (*glGenRenderbuffers)(int n, Winapi::Opengl::PGLuint renderbuffers);
extern DELPHI_PACKAGE void __stdcall (*glRenderbufferStorage)(unsigned target, unsigned internalformat, int width, int height);
extern DELPHI_PACKAGE void __stdcall (*glGetRenderbufferParameteriv)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsFramebuffer)(unsigned framebuffer);
extern DELPHI_PACKAGE void __stdcall (*glBindFramebuffer)(unsigned target, unsigned framebuffer);
extern DELPHI_PACKAGE void __stdcall (*glDeleteFramebuffers)(int n, const Winapi::Opengl::PGLuint framebuffers);
extern DELPHI_PACKAGE void __stdcall (*glGenFramebuffers)(int n, Winapi::Opengl::PGLuint framebuffers);
extern DELPHI_PACKAGE unsigned __stdcall (*glCheckFramebufferStatus)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTexture1D)(unsigned target, unsigned attachment, unsigned textarget, unsigned texture, int level);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTexture2D)(unsigned target, unsigned attachment, unsigned textarget, unsigned texture, int level);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTexture3D)(unsigned target, unsigned attachment, unsigned textarget, unsigned texture, int level, int zoffset);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferRenderbuffer)(unsigned target, unsigned attachment, unsigned renderbuffertarget, unsigned renderbuffer);
extern DELPHI_PACKAGE void __stdcall (*glGetFramebufferAttachmentParameteriv)(unsigned target, unsigned attachment, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGenerateMipmap)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glBlitFramebuffer)(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, unsigned mask, unsigned filter);
extern DELPHI_PACKAGE void __stdcall (*glRenderbufferStorageMultisample)(unsigned target, int samples, unsigned internalformat, int width, int height);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTextureLayer)(unsigned target, unsigned attachment, unsigned texture, int level, int layer);
extern DELPHI_PACKAGE void * __stdcall (*glMapBufferRange)(unsigned target, NativeInt offset, NativeInt length, unsigned access);
extern DELPHI_PACKAGE void __stdcall (*glFlushMappedBufferRange)(unsigned target, NativeInt offset, NativeInt length);
extern DELPHI_PACKAGE void __stdcall (*glBindVertexArray)(unsigned array_);
extern DELPHI_PACKAGE void __stdcall (*glDeleteVertexArrays)(int n, const Winapi::Opengl::PGLuint arrays);
extern DELPHI_PACKAGE void __stdcall (*glGenVertexArrays)(int n, Winapi::Opengl::PGLuint arrays);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsVertexArray)(unsigned array_);
extern DELPHI_PACKAGE void __stdcall (*glDrawArraysInstanced)(unsigned mode, int first, int count, int instancecount);
extern DELPHI_PACKAGE void __stdcall (*glDrawElementsInstanced)(unsigned mode, int count, unsigned type_, const void * indices, int instancecount);
extern DELPHI_PACKAGE void __stdcall (*glTexBuffer)(unsigned target, unsigned internalformat, unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glPrimitiveRestartIndex)(unsigned index);
extern DELPHI_PACKAGE void __stdcall (*glCopyBufferSubData)(unsigned readTarget, unsigned writeTarget, NativeInt readOffset, NativeInt writeOffset, NativeInt size);
extern DELPHI_PACKAGE void __stdcall (*glGetUniformIndices)(unsigned program_, int uniformCount, const PPGLchar uniformNames, Winapi::Opengl::PGLuint uniformIndices);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveUniformsiv)(unsigned program_, int uniformCount, const Winapi::Opengl::PGLuint uniformIndices, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveUniformName)(unsigned program_, unsigned uniformIndex, int bufSize, Winapi::Opengl::PGLSizei length, char * uniformName);
extern DELPHI_PACKAGE unsigned __stdcall (*glGetUniformBlockIndex)(unsigned program_, const char * uniformBlockName);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveUniformBlockiv)(unsigned program_, unsigned uniformBlockIndex, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveUniformBlockName)(unsigned program_, unsigned uniformBlockIndex, int bufSize, Winapi::Opengl::PGLSizei length, char * uniformBlockName);
extern DELPHI_PACKAGE void __stdcall (*glUniformBlockBinding)(unsigned program_, unsigned uniformBlockIndex, unsigned uniformBlockBinding);
extern DELPHI_PACKAGE void __stdcall (*glDrawElementsBaseVertex)(unsigned mode, int count, unsigned type_, const void * indices, int basevertex);
extern DELPHI_PACKAGE void __stdcall (*glDrawRangeElementsBaseVertex)(unsigned mode, unsigned start, unsigned end_, int count, unsigned type_, const void * indices, int basevertex);
extern DELPHI_PACKAGE void __stdcall (*glDrawElementsInstancedBaseVertex)(unsigned mode, int count, unsigned type_, const void * indices, int instancecount, int basevertex);
extern DELPHI_PACKAGE void __stdcall (*glMultiDrawElementsBaseVertex)(unsigned mode, const Winapi::Opengl::PGLSizei count, unsigned type_, const System::PPointer indices, int drawcount, const Winapi::Opengl::PGLInt basevertex);
extern DELPHI_PACKAGE void __stdcall (*glProvokingVertex)(unsigned mode);
extern DELPHI_PACKAGE void * __stdcall (*glFenceSync)(unsigned condition, unsigned flags);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsSync)(void * sync);
extern DELPHI_PACKAGE void __stdcall (*glDeleteSync)(void * sync);
extern DELPHI_PACKAGE unsigned __stdcall (*glClientWaitSync)(void * sync, unsigned flags, unsigned __int64 timeout);
extern DELPHI_PACKAGE void __stdcall (*glWaitSync)(void * sync, unsigned flags, unsigned __int64 timeout);
extern DELPHI_PACKAGE void __stdcall (*glGetInteger64v)(unsigned pname, PGLint64 data);
extern DELPHI_PACKAGE void __stdcall (*glGetSynciv)(void * sync, unsigned pname, int bufSize, Winapi::Opengl::PGLSizei length, Winapi::Opengl::PGLInt values);
extern DELPHI_PACKAGE void __stdcall (*glGetInteger64i_v)(unsigned target, unsigned index, PGLint64 data);
extern DELPHI_PACKAGE void __stdcall (*glGetBufferParameteri64v)(unsigned target, unsigned pname, PGLint64 params);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTexture)(unsigned target, unsigned attachment, unsigned texture, int level);
extern DELPHI_PACKAGE void __stdcall (*glTexImage2DMultisample)(unsigned target, int samples, unsigned internalformat, int width, int height, System::Byte fixedsamplelocations);
extern DELPHI_PACKAGE void __stdcall (*glTexImage3DMultisample)(unsigned target, int samples, unsigned internalformat, int width, int height, int depth, System::Byte fixedsamplelocations);
extern DELPHI_PACKAGE void __stdcall (*glGetMultisamplefv)(unsigned pname, unsigned index, Winapi::Opengl::PGLfloat val);
extern DELPHI_PACKAGE void __stdcall (*glSampleMaski)(unsigned index, unsigned mask);
extern DELPHI_PACKAGE void __stdcall (*glBindFragDataLocationIndexed)(unsigned program_, unsigned colorNumber, unsigned index, const char * name);
extern DELPHI_PACKAGE int __stdcall (*glGetFragDataIndex)(unsigned program_, const char * name);
extern DELPHI_PACKAGE void __stdcall (*glGenSamplers)(int count, Winapi::Opengl::PGLuint samplers);
extern DELPHI_PACKAGE void __stdcall (*glDeleteSamplers)(int count, const Winapi::Opengl::PGLuint samplers);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsSampler)(unsigned sampler);
extern DELPHI_PACKAGE void __stdcall (*glBindSampler)(unsigned unit_, unsigned sampler);
extern DELPHI_PACKAGE void __stdcall (*glSamplerParameteri)(unsigned sampler, unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glSamplerParameteriv)(unsigned sampler, unsigned pname, const Winapi::Opengl::PGLInt param);
extern DELPHI_PACKAGE void __stdcall (*glSamplerParameterf)(unsigned sampler, unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glSamplerParameterfv)(unsigned sampler, unsigned pname, const Winapi::Opengl::PGLfloat param);
extern DELPHI_PACKAGE void __stdcall (*glSamplerParameterIiv)(unsigned sampler, unsigned pname, const Winapi::Opengl::PGLInt param);
extern DELPHI_PACKAGE void __stdcall (*glSamplerParameterIuiv)(unsigned sampler, unsigned pname, const Winapi::Opengl::PGLuint param);
extern DELPHI_PACKAGE void __stdcall (*glGetSamplerParameteriv)(unsigned sampler, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetSamplerParameterIiv)(unsigned sampler, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetSamplerParameterfv)(unsigned sampler, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetSamplerParameterIuiv)(unsigned sampler, unsigned pname, Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glQueryCounter)(unsigned id, unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryObjecti64v)(unsigned id, unsigned pname, PGLint64 params);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryObjectui64v)(unsigned id, unsigned pname, PGLuint64 params);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribDivisor)(unsigned index, unsigned divisor);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribP1ui)(unsigned index, unsigned type_, System::Byte normalized, unsigned value);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribP1uiv)(unsigned index, unsigned type_, System::Byte normalized, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribP2ui)(unsigned index, unsigned type_, System::Byte normalized, unsigned value);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribP2uiv)(unsigned index, unsigned type_, System::Byte normalized, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribP3ui)(unsigned index, unsigned type_, System::Byte normalized, unsigned value);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribP3uiv)(unsigned index, unsigned type_, System::Byte normalized, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribP4ui)(unsigned index, unsigned type_, System::Byte normalized, unsigned value);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribP4uiv)(unsigned index, unsigned type_, System::Byte normalized, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glVertexP2ui)(unsigned type_, unsigned value);
extern DELPHI_PACKAGE void __stdcall (*glVertexP2uiv)(unsigned type_, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glVertexP3ui)(unsigned type_, unsigned value);
extern DELPHI_PACKAGE void __stdcall (*glVertexP3uiv)(unsigned type_, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glVertexP4ui)(unsigned type_, unsigned value);
extern DELPHI_PACKAGE void __stdcall (*glVertexP4uiv)(unsigned type_, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glTexCoordP1ui)(unsigned type_, unsigned coords);
extern DELPHI_PACKAGE void __stdcall (*glTexCoordP1uiv)(unsigned type_, const Winapi::Opengl::PGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glTexCoordP2ui)(unsigned type_, unsigned coords);
extern DELPHI_PACKAGE void __stdcall (*glTexCoordP2uiv)(unsigned type_, const Winapi::Opengl::PGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glTexCoordP3ui)(unsigned type_, unsigned coords);
extern DELPHI_PACKAGE void __stdcall (*glTexCoordP3uiv)(unsigned type_, const Winapi::Opengl::PGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glTexCoordP4ui)(unsigned type_, unsigned coords);
extern DELPHI_PACKAGE void __stdcall (*glTexCoordP4uiv)(unsigned type_, const Winapi::Opengl::PGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoordP1ui)(unsigned texture, unsigned type_, unsigned coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoordP1uiv)(unsigned texture, unsigned type_, const Winapi::Opengl::PGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoordP2ui)(unsigned texture, unsigned type_, unsigned coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoordP2uiv)(unsigned texture, unsigned type_, const Winapi::Opengl::PGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoordP3ui)(unsigned texture, unsigned type_, unsigned coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoordP3uiv)(unsigned texture, unsigned type_, const Winapi::Opengl::PGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoordP4ui)(unsigned texture, unsigned type_, unsigned coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoordP4uiv)(unsigned texture, unsigned type_, const Winapi::Opengl::PGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glNormalP3ui)(unsigned type_, unsigned coords);
extern DELPHI_PACKAGE void __stdcall (*glNormalP3uiv)(unsigned type_, const Winapi::Opengl::PGLuint coords);
extern DELPHI_PACKAGE void __stdcall (*glColorP3ui)(unsigned type_, unsigned color);
extern DELPHI_PACKAGE void __stdcall (*glColorP3uiv)(unsigned type_, const Winapi::Opengl::PGLuint color);
extern DELPHI_PACKAGE void __stdcall (*glColorP4ui)(unsigned type_, unsigned color);
extern DELPHI_PACKAGE void __stdcall (*glColorP4uiv)(unsigned type_, const Winapi::Opengl::PGLuint color);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColorP3ui)(unsigned type_, unsigned color);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColorP3uiv)(unsigned type_, const Winapi::Opengl::PGLuint color);
extern DELPHI_PACKAGE void __stdcall (*glMinSampleShading)(float value);
extern DELPHI_PACKAGE void __stdcall (*glBlendEquationi)(unsigned buf, unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glBlendEquationSeparatei)(unsigned buf, unsigned modeRGB, unsigned modeAlpha);
extern DELPHI_PACKAGE void __stdcall (*glBlendFunci)(unsigned buf, unsigned src, unsigned dst);
extern DELPHI_PACKAGE void __stdcall (*glBlendFuncSeparatei)(unsigned buf, unsigned srcRGB, unsigned dstRGB, unsigned srcAlpha, unsigned dstAlpha);
extern DELPHI_PACKAGE void __stdcall (*glDrawArraysIndirect)(unsigned mode, const void * indirect);
extern DELPHI_PACKAGE void __stdcall (*glDrawElementsIndirect)(unsigned mode, unsigned type_, const void * indirect);
extern DELPHI_PACKAGE void __stdcall (*glUniform1d)(int location, double x);
extern DELPHI_PACKAGE void __stdcall (*glUniform2d)(int location, double x, double y);
extern DELPHI_PACKAGE void __stdcall (*glUniform3d)(int location, double x, double y, double z);
extern DELPHI_PACKAGE void __stdcall (*glUniform4d)(int location, double x, double y, double z, double w);
extern DELPHI_PACKAGE void __stdcall (*glUniform1dv)(int location, int count, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniform2dv)(int location, int count, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniform3dv)(int location, int count, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniform4dv)(int location, int count, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix2dv)(int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix3dv)(int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix4dv)(int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix2x3dv)(int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix2x4dv)(int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix3x2dv)(int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix3x4dv)(int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix4x2dv)(int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix4x3dv)(int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glGetUniformdv)(unsigned program_, int location, Winapi::Opengl::PGLdouble params);
extern DELPHI_PACKAGE int __stdcall (*glGetSubroutineUniformLocation)(unsigned program_, unsigned shadertype, const char * name);
extern DELPHI_PACKAGE unsigned __stdcall (*glGetSubroutineIndex)(unsigned program_, unsigned shadertype, const char * name);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveSubroutineUniformiv)(unsigned program_, unsigned shadertype, unsigned index, unsigned pname, Winapi::Opengl::PGLInt values);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveSubroutineUniformName)(unsigned program_, unsigned shadertype, unsigned index, int bufsize, Winapi::Opengl::PGLSizei length, char * name);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveSubroutineName)(unsigned program_, unsigned shadertype, unsigned index, int bufsize, Winapi::Opengl::PGLSizei length, char * name);
extern DELPHI_PACKAGE void __stdcall (*glUniformSubroutinesuiv)(unsigned shadertype, int count, const Winapi::Opengl::PGLuint indices);
extern DELPHI_PACKAGE void __stdcall (*glGetUniformSubroutineuiv)(unsigned shadertype, int location, Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramStageiv)(unsigned program_, unsigned shadertype, unsigned pname, Winapi::Opengl::PGLInt values);
extern DELPHI_PACKAGE void __stdcall (*glPatchParameteri)(unsigned pname, int value);
extern DELPHI_PACKAGE void __stdcall (*glPatchParameterfv)(unsigned pname, const Winapi::Opengl::PGLfloat values);
extern DELPHI_PACKAGE void __stdcall (*glBindTransformFeedback)(unsigned target, unsigned id);
extern DELPHI_PACKAGE void __stdcall (*glDeleteTransformFeedbacks)(int n, const Winapi::Opengl::PGLuint ids);
extern DELPHI_PACKAGE void __stdcall (*glGenTransformFeedbacks)(int n, Winapi::Opengl::PGLuint ids);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsTransformFeedback)(unsigned id);
extern DELPHI_PACKAGE void __stdcall (*glPauseTransformFeedback)(void);
extern DELPHI_PACKAGE void __stdcall (*glResumeTransformFeedback)(void);
extern DELPHI_PACKAGE void __stdcall (*glDrawTransformFeedback)(unsigned mode, unsigned id);
extern DELPHI_PACKAGE void __stdcall (*glDrawTransformFeedbackStream)(unsigned mode, unsigned id, unsigned stream);
extern DELPHI_PACKAGE void __stdcall (*glBeginQueryIndexed)(unsigned target, unsigned index, unsigned id);
extern DELPHI_PACKAGE void __stdcall (*glEndQueryIndexed)(unsigned target, unsigned index);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryIndexediv)(unsigned target, unsigned index, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glReleaseShaderCompiler)(void);
extern DELPHI_PACKAGE void __stdcall (*glShaderBinary)(int count, const Winapi::Opengl::PGLuint shaders, unsigned binaryformat, const void * binary, int length);
extern DELPHI_PACKAGE void __stdcall (*glGetShaderPrecisionFormat)(unsigned shadertype, unsigned precisiontype, Winapi::Opengl::PGLInt range, Winapi::Opengl::PGLInt precision);
extern DELPHI_PACKAGE void __stdcall (*glDepthRangef)(float n, float f);
extern DELPHI_PACKAGE void __stdcall (*glClearDepthf)(float d);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramBinary)(unsigned program_, int bufSize, Winapi::Opengl::PGLSizei length, Winapi::Opengl::PGLEnum binaryFormat, void * binary);
extern DELPHI_PACKAGE void __stdcall (*glProgramBinary)(unsigned program_, unsigned binaryFormat, const void * binary, int length);
extern DELPHI_PACKAGE void __stdcall (*glProgramParameteri)(unsigned program_, unsigned pname, int value);
extern DELPHI_PACKAGE void __stdcall (*glUseProgramStages)(unsigned pipeline, unsigned stages, unsigned program_);
extern DELPHI_PACKAGE void __stdcall (*glActiveShaderProgram)(unsigned pipeline, unsigned program_);
extern DELPHI_PACKAGE unsigned __stdcall (*glCreateShaderProgramv)(unsigned type_, int count, const PPGLchar strings);
extern DELPHI_PACKAGE void __stdcall (*glBindProgramPipeline)(unsigned pipeline);
extern DELPHI_PACKAGE void __stdcall (*glDeleteProgramPipelines)(int n, const Winapi::Opengl::PGLuint pipelines);
extern DELPHI_PACKAGE void __stdcall (*glGenProgramPipelines)(int n, Winapi::Opengl::PGLuint pipelines);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsProgramPipeline)(unsigned pipeline);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramPipelineiv)(unsigned pipeline, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1i)(unsigned program_, int location, int v0);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1iv)(unsigned program_, int location, int count, const Winapi::Opengl::PGLInt value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1f)(unsigned program_, int location, float v0);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1fv)(unsigned program_, int location, int count, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1d)(unsigned program_, int location, double v0);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1dv)(unsigned program_, int location, int count, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1ui)(unsigned program_, int location, unsigned v0);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1uiv)(unsigned program_, int location, int count, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2i)(unsigned program_, int location, int v0, int v1);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2iv)(unsigned program_, int location, int count, const Winapi::Opengl::PGLInt value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2f)(unsigned program_, int location, float v0, float v1);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2fv)(unsigned program_, int location, int count, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2d)(unsigned program_, int location, double v0, double v1);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2dv)(unsigned program_, int location, int count, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2ui)(unsigned program_, int location, unsigned v0, unsigned v1);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2uiv)(unsigned program_, int location, int count, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3i)(unsigned program_, int location, int v0, int v1, int v2);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3iv)(unsigned program_, int location, int count, const Winapi::Opengl::PGLInt value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3f)(unsigned program_, int location, float v0, float v1, float v2);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3fv)(unsigned program_, int location, int count, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3d)(unsigned program_, int location, double v0, double v1, double v2);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3dv)(unsigned program_, int location, int count, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3ui)(unsigned program_, int location, unsigned v0, unsigned v1, unsigned v2);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3uiv)(unsigned program_, int location, int count, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4i)(unsigned program_, int location, int v0, int v1, int v2, int v3);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4iv)(unsigned program_, int location, int count, const Winapi::Opengl::PGLInt value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4f)(unsigned program_, int location, float v0, float v1, float v2, float v3);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4fv)(unsigned program_, int location, int count, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4d)(unsigned program_, int location, double v0, double v1, double v2, double v3);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4dv)(unsigned program_, int location, int count, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4ui)(unsigned program_, int location, unsigned v0, unsigned v1, unsigned v2, unsigned v3);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4uiv)(unsigned program_, int location, int count, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix2fv)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix3fv)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix4fv)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix2dv)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix3dv)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix4dv)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix2x3fv)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix3x2fv)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix2x4fv)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix4x2fv)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix3x4fv)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix4x3fv)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix2x3dv)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix3x2dv)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix2x4dv)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix4x2dv)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix3x4dv)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix4x3dv)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glValidateProgramPipeline)(unsigned pipeline);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramPipelineInfoLog)(unsigned pipeline, int bufSize, Winapi::Opengl::PGLSizei length, char * infoLog);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL1d)(unsigned index, double x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL2d)(unsigned index, double x, double y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL3d)(unsigned index, double x, double y, double z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL4d)(unsigned index, double x, double y, double z, double w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL1dv)(unsigned index, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL2dv)(unsigned index, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL3dv)(unsigned index, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL4dv)(unsigned index, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribLPointer)(unsigned index, int size, unsigned type_, int stride, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribLdv)(unsigned index, unsigned pname, Winapi::Opengl::PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glViewportArrayv)(unsigned first, int count, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glViewportIndexedf)(unsigned index, float x, float y, float w, float h);
extern DELPHI_PACKAGE void __stdcall (*glViewportIndexedfv)(unsigned index, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glScissorArrayv)(unsigned first, int count, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glScissorIndexed)(unsigned index, int left, int bottom, int width, int height);
extern DELPHI_PACKAGE void __stdcall (*glScissorIndexedv)(unsigned index, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glDepthRangeArrayv)(unsigned first, int count, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glDepthRangeIndexed)(unsigned index, double n, double f);
extern DELPHI_PACKAGE void __stdcall (*glGetFloati_v)(unsigned target, unsigned index, Winapi::Opengl::PGLfloat data);
extern DELPHI_PACKAGE void __stdcall (*glGetDoublei_v)(unsigned target, unsigned index, Winapi::Opengl::PGLdouble data);
extern DELPHI_PACKAGE void __stdcall (*glDrawArraysInstancedBaseInstance)(unsigned mode, int first, int count, int instancecount, unsigned baseinstance);
extern DELPHI_PACKAGE void __stdcall (*glDrawElementsInstancedBaseInstance)(unsigned mode, int count, unsigned type_, const void * indices, int instancecount, unsigned baseinstance);
extern DELPHI_PACKAGE void __stdcall (*glDrawElementsInstancedBaseVertexBaseInstance)(unsigned mode, int count, unsigned type_, const void * indices, int instancecount, int basevertex, unsigned baseinstance);
extern DELPHI_PACKAGE void __stdcall (*glGetInternalformativ)(unsigned target, unsigned internalformat, unsigned pname, int bufSize, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveAtomicCounterBufferiv)(unsigned program_, unsigned bufferIndex, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glBindImageTexture)(unsigned unit_, unsigned texture, int level, System::Byte layered, int layer, unsigned access, unsigned format);
extern DELPHI_PACKAGE void __stdcall (*glMemoryBarrier)(unsigned barriers);
extern DELPHI_PACKAGE void __stdcall (*glTexStorage1D)(unsigned target, int levels, unsigned internalformat, int width);
extern DELPHI_PACKAGE void __stdcall (*glTexStorage2D)(unsigned target, int levels, unsigned internalformat, int width, int height);
extern DELPHI_PACKAGE void __stdcall (*glTexStorage3D)(unsigned target, int levels, unsigned internalformat, int width, int height, int depth);
extern DELPHI_PACKAGE void __stdcall (*glDrawTransformFeedbackInstanced)(unsigned mode, unsigned id, int instancecount);
extern DELPHI_PACKAGE void __stdcall (*glDrawTransformFeedbackStreamInstanced)(unsigned mode, unsigned id, unsigned stream, int instancecount);
extern DELPHI_PACKAGE void __stdcall (*glClearBufferData)(unsigned target, unsigned internalformat, unsigned format, unsigned type_, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glClearBufferSubData)(unsigned target, unsigned internalformat, NativeInt offset, NativeInt size, unsigned format, unsigned type_, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glDispatchCompute)(unsigned num_groups_x, unsigned num_groups_y, unsigned num_groups_z);
extern DELPHI_PACKAGE void __stdcall (*glDispatchComputeIndirect)(NativeInt indirect);
extern DELPHI_PACKAGE void __stdcall (*glCopyImageSubData)(unsigned srcName, unsigned srcTarget, int srcLevel, int srcX, int srcY, int srcZ, unsigned dstName, unsigned dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int srcWidth, int srcHeight, int srcDepth);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferParameteri)(unsigned target, unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glGetFramebufferParameteriv)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetInternalformati64v)(unsigned target, unsigned internalformat, unsigned pname, int bufSize, PGLint64 params);
extern DELPHI_PACKAGE void __stdcall (*glInvalidateTexSubImage)(unsigned texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth);
extern DELPHI_PACKAGE void __stdcall (*glInvalidateTexImage)(unsigned texture, int level);
extern DELPHI_PACKAGE void __stdcall (*glInvalidateBufferSubData)(unsigned buffer, NativeInt offset, NativeInt length);
extern DELPHI_PACKAGE void __stdcall (*glInvalidateBufferData)(unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glInvalidateFramebuffer)(unsigned target, int numAttachments, const Winapi::Opengl::PGLEnum attachments);
extern DELPHI_PACKAGE void __stdcall (*glInvalidateSubFramebuffer)(unsigned target, int numAttachments, const Winapi::Opengl::PGLEnum attachments, int x, int y, int width, int height);
extern DELPHI_PACKAGE void __stdcall (*glMultiDrawArraysIndirect)(unsigned mode, const void * indirect, int drawcount, int stride);
extern DELPHI_PACKAGE void __stdcall (*glMultiDrawElementsIndirect)(unsigned mode, unsigned type_, const void * indirect, int drawcount, int stride);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramInterfaceiv)(unsigned program_, unsigned programInterface, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE unsigned __stdcall (*glGetProgramResourceIndex)(unsigned program_, unsigned programInterface, const char * name);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramResourceName)(unsigned program_, unsigned programInterface, unsigned index, int bufSize, Winapi::Opengl::PGLSizei length, char * name);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramResourceiv)(unsigned program_, unsigned programInterface, unsigned index, int propCount, const Winapi::Opengl::PGLEnum props, int bufSize, Winapi::Opengl::PGLSizei length, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE int __stdcall (*glGetProgramResourceLocation)(unsigned program_, unsigned programInterface, const char * name);
extern DELPHI_PACKAGE int __stdcall (*glGetProgramResourceLocationIndex)(unsigned program_, unsigned programInterface, const char * name);
extern DELPHI_PACKAGE void __stdcall (*glShaderStorageBlockBinding)(unsigned program_, unsigned storageBlockIndex, unsigned storageBlockBinding);
extern DELPHI_PACKAGE void __stdcall (*glTexBufferRange)(unsigned target, unsigned internalformat, unsigned buffer, NativeInt offset, NativeInt size);
extern DELPHI_PACKAGE void __stdcall (*glTexStorage2DMultisample)(unsigned target, int samples, unsigned internalformat, int width, int height, System::Byte fixedsamplelocations);
extern DELPHI_PACKAGE void __stdcall (*glTexStorage3DMultisample)(unsigned target, int samples, unsigned internalformat, int width, int height, int depth, System::Byte fixedsamplelocations);
extern DELPHI_PACKAGE void __stdcall (*glTextureView)(unsigned texture, unsigned target, unsigned origtexture, unsigned internalformat, unsigned minlevel, unsigned numlevels, unsigned minlayer, unsigned numlayers);
extern DELPHI_PACKAGE void __stdcall (*glBindVertexBuffer)(unsigned bindingindex, unsigned buffer, NativeInt offset, int stride);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribFormat)(unsigned attribindex, int size, unsigned type_, System::Byte normalized, unsigned relativeoffset);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribIFormat)(unsigned attribindex, int size, unsigned type_, unsigned relativeoffset);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribLFormat)(unsigned attribindex, int size, unsigned type_, unsigned relativeoffset);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribBinding)(unsigned attribindex, unsigned bindingindex);
extern DELPHI_PACKAGE void __stdcall (*glVertexBindingDivisor)(unsigned bindingindex, unsigned divisor);
extern DELPHI_PACKAGE void __stdcall (*glDebugMessageControl)(unsigned source, unsigned type_, unsigned severity, int count, const Winapi::Opengl::PGLuint ids, System::Byte enabled);
extern DELPHI_PACKAGE void __stdcall (*glDebugMessageInsert)(unsigned source, unsigned type_, unsigned id, unsigned severity, int length, const char * buf);
extern DELPHI_PACKAGE void __stdcall (*glDebugMessageCallback)(GLDEBUGPROC callback, const void * userParam);
extern DELPHI_PACKAGE unsigned __stdcall (*glGetDebugMessageLog)(unsigned count, int bufSize, Winapi::Opengl::PGLEnum sources, Winapi::Opengl::PGLEnum types, Winapi::Opengl::PGLuint ids, Winapi::Opengl::PGLEnum severities, Winapi::Opengl::PGLSizei lengths, char * messageLog);
extern DELPHI_PACKAGE void __stdcall (*glPushDebugGroup)(unsigned source, unsigned id, int length, const char * message);
extern DELPHI_PACKAGE void __stdcall (*glPopDebugGroup)(void);
extern DELPHI_PACKAGE void __stdcall (*glObjectLabel)(unsigned identifier, unsigned name, int length, const char * label_);
extern DELPHI_PACKAGE void __stdcall (*glGetObjectLabel)(unsigned identifier, unsigned name, int bufSize, Winapi::Opengl::PGLSizei length, char * label_);
extern DELPHI_PACKAGE void __stdcall (*glObjectPtrLabel)(const void * ptr, int length, const char * label_);
extern DELPHI_PACKAGE void __stdcall (*glGetObjectPtrLabel)(const void * ptr, int bufSize, Winapi::Opengl::PGLSizei length, char * label_);
extern DELPHI_PACKAGE void __stdcall (*glBufferStorage)(unsigned target, NativeInt size, const void * data, unsigned flags);
extern DELPHI_PACKAGE void __stdcall (*glClearTexImage)(unsigned texture, int level, unsigned format, unsigned type_, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glClearTexSubImage)(unsigned texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, unsigned format, unsigned type_, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glBindBuffersBase)(unsigned target, unsigned first, int count, const Winapi::Opengl::PGLuint buffers);
extern DELPHI_PACKAGE void __stdcall (*glBindBuffersRange)(unsigned target, unsigned first, int count, const Winapi::Opengl::PGLuint buffers, const PGLintptr offsets, const PGLsizeiptr sizes);
extern DELPHI_PACKAGE void __stdcall (*glBindTextures)(unsigned first, int count, const Winapi::Opengl::PGLuint textures);
extern DELPHI_PACKAGE void __stdcall (*glBindSamplers)(unsigned first, int count, const Winapi::Opengl::PGLuint samplers);
extern DELPHI_PACKAGE void __stdcall (*glBindImageTextures)(unsigned first, int count, const Winapi::Opengl::PGLuint textures);
extern DELPHI_PACKAGE void __stdcall (*glBindVertexBuffers)(unsigned first, int count, const Winapi::Opengl::PGLuint buffers, const PGLintptr offsets, const Winapi::Opengl::PGLSizei strides);
extern DELPHI_PACKAGE unsigned __int64 __stdcall (*glGetTextureHandleARB)(unsigned texture);
extern DELPHI_PACKAGE unsigned __int64 __stdcall (*glGetTextureSamplerHandleARB)(unsigned texture, unsigned sampler);
extern DELPHI_PACKAGE void __stdcall (*glMakeTextureHandleResidentARB)(unsigned __int64 handle);
extern DELPHI_PACKAGE void __stdcall (*glMakeTextureHandleNonResidentARB)(unsigned __int64 handle);
extern DELPHI_PACKAGE unsigned __int64 __stdcall (*glGetImageHandleARB)(unsigned texture, int level, System::Byte layered, int layer, unsigned format);
extern DELPHI_PACKAGE void __stdcall (*glMakeImageHandleResidentARB)(unsigned __int64 handle, unsigned access);
extern DELPHI_PACKAGE void __stdcall (*glMakeImageHandleNonResidentARB)(unsigned __int64 handle);
extern DELPHI_PACKAGE void __stdcall (*glUniformHandleui64ARB)(int location, unsigned __int64 value);
extern DELPHI_PACKAGE void __stdcall (*glUniformHandleui64vARB)(int location, int count, const PGLuint64 value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformHandleui64ARB)(unsigned program_, int location, unsigned __int64 value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformHandleui64vARB)(unsigned program_, int location, int count, const PGLuint64 values);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsTextureHandleResidentARB)(unsigned __int64 handle);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsImageHandleResidentARB)(unsigned __int64 handle);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL1ui64ARB)(unsigned index, unsigned __int64 x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL1ui64vARB)(unsigned index, const PGLuint64EXT v);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribLui64vARB)(unsigned index, unsigned pname, PGLuint64EXT params);
extern DELPHI_PACKAGE void * __stdcall (*glCreateSyncFromCLeventARB)(p_cl_context context, p_cl_event event, unsigned flags);
extern DELPHI_PACKAGE void __stdcall (*glClampColorARB)(unsigned target, unsigned clamp);
extern DELPHI_PACKAGE void __stdcall (*glDispatchComputeGroupSizeARB)(unsigned num_groups_x, unsigned num_groups_y, unsigned num_groups_z, unsigned group_size_x, unsigned group_size_y, unsigned group_size_z);
extern DELPHI_PACKAGE void __stdcall (*glDebugMessageControlARB)(unsigned source, unsigned type_, unsigned severity, int count, const Winapi::Opengl::PGLuint ids, System::Byte enabled);
extern DELPHI_PACKAGE void __stdcall (*glDebugMessageInsertARB)(unsigned source, unsigned type_, unsigned id, unsigned severity, int length, const char * buf);
extern DELPHI_PACKAGE void __stdcall (*glDebugMessageCallbackARB)(GLDEBUGPROCARB callback, const void * userParam);
extern DELPHI_PACKAGE unsigned __stdcall (*glGetDebugMessageLogARB)(unsigned count, int bufSize, Winapi::Opengl::PGLEnum sources, Winapi::Opengl::PGLEnum types, Winapi::Opengl::PGLuint ids, Winapi::Opengl::PGLEnum severities, Winapi::Opengl::PGLSizei lengths, char * messageLog);
extern DELPHI_PACKAGE void __stdcall (*glDrawBuffersARB)(int n, const Winapi::Opengl::PGLEnum bufs);
extern DELPHI_PACKAGE void __stdcall (*glBlendEquationiARB)(unsigned buf, unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glBlendEquationSeparateiARB)(unsigned buf, unsigned modeRGB, unsigned modeAlpha);
extern DELPHI_PACKAGE void __stdcall (*glBlendFunciARB)(unsigned buf, unsigned src, unsigned dst);
extern DELPHI_PACKAGE void __stdcall (*glBlendFuncSeparateiARB)(unsigned buf, unsigned srcRGB, unsigned dstRGB, unsigned srcAlpha, unsigned dstAlpha);
extern DELPHI_PACKAGE void __stdcall (*glDrawArraysInstancedARB)(unsigned mode, int first, int count, int primcount);
extern DELPHI_PACKAGE void __stdcall (*glDrawElementsInstancedARB)(unsigned mode, int count, unsigned type_, const void * indices, int primcount);
extern DELPHI_PACKAGE void __stdcall (*glProgramStringARB)(unsigned target, unsigned format, int len, const void * string_);
extern DELPHI_PACKAGE void __stdcall (*glBindProgramARB)(unsigned target, unsigned program_);
extern DELPHI_PACKAGE void __stdcall (*glDeleteProgramsARB)(int n, const Winapi::Opengl::PGLuint programs);
extern DELPHI_PACKAGE void __stdcall (*glGenProgramsARB)(int n, Winapi::Opengl::PGLuint programs);
extern DELPHI_PACKAGE void __stdcall (*glProgramEnvParameter4dARB)(unsigned target, unsigned index, double x, double y, double z, double w);
extern DELPHI_PACKAGE void __stdcall (*glProgramEnvParameter4dvARB)(unsigned target, unsigned index, const Winapi::Opengl::PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glProgramEnvParameter4fARB)(unsigned target, unsigned index, float x, float y, float z, float w);
extern DELPHI_PACKAGE void __stdcall (*glProgramEnvParameter4fvARB)(unsigned target, unsigned index, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glProgramLocalParameter4dARB)(unsigned target, unsigned index, double x, double y, double z, double w);
extern DELPHI_PACKAGE void __stdcall (*glProgramLocalParameter4dvARB)(unsigned target, unsigned index, const Winapi::Opengl::PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glProgramLocalParameter4fARB)(unsigned target, unsigned index, float x, float y, float z, float w);
extern DELPHI_PACKAGE void __stdcall (*glProgramLocalParameter4fvARB)(unsigned target, unsigned index, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramEnvParameterdvARB)(unsigned target, unsigned index, Winapi::Opengl::PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramEnvParameterfvARB)(unsigned target, unsigned index, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramLocalParameterdvARB)(unsigned target, unsigned index, Winapi::Opengl::PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramLocalParameterfvARB)(unsigned target, unsigned index, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramivARB)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramStringARB)(unsigned target, unsigned pname, void * string_);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsProgramARB)(unsigned program_);
extern DELPHI_PACKAGE void __stdcall (*glProgramParameteriARB)(unsigned program_, unsigned pname, int value);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTextureARB)(unsigned target, unsigned attachment, unsigned texture, int level);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTextureLayerARB)(unsigned target, unsigned attachment, unsigned texture, int level, int layer);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTextureFaceARB)(unsigned target, unsigned attachment, unsigned texture, int level, unsigned face);
extern DELPHI_PACKAGE void __stdcall (*glColorTable)(unsigned target, unsigned internalformat, int width, unsigned format, unsigned type_, const void * table);
extern DELPHI_PACKAGE void __stdcall (*glColorTableParameterfv)(unsigned target, unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glColorTableParameteriv)(unsigned target, unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glCopyColorTable)(unsigned target, unsigned internalformat, int x, int y, int width);
extern DELPHI_PACKAGE void __stdcall (*glGetColorTable)(unsigned target, unsigned format, unsigned type_, void * table);
extern DELPHI_PACKAGE void __stdcall (*glGetColorTableParameterfv)(unsigned target, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetColorTableParameteriv)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glColorSubTable)(unsigned target, int start, int count, unsigned format, unsigned type_, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glCopyColorSubTable)(unsigned target, int start, int x, int y, int width);
extern DELPHI_PACKAGE void __stdcall (*glConvolutionFilter1D)(unsigned target, unsigned internalformat, int width, unsigned format, unsigned type_, const void * image);
extern DELPHI_PACKAGE void __stdcall (*glConvolutionFilter2D)(unsigned target, unsigned internalformat, int width, int height, unsigned format, unsigned type_, const void * image);
extern DELPHI_PACKAGE void __stdcall (*glConvolutionParameterf)(unsigned target, unsigned pname, float params);
extern DELPHI_PACKAGE void __stdcall (*glConvolutionParameterfv)(unsigned target, unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glConvolutionParameteri)(unsigned target, unsigned pname, int params);
extern DELPHI_PACKAGE void __stdcall (*glConvolutionParameteriv)(unsigned target, unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glCopyConvolutionFilter1D)(unsigned target, unsigned internalformat, int x, int y, int width);
extern DELPHI_PACKAGE void __stdcall (*glCopyConvolutionFilter2D)(unsigned target, unsigned internalformat, int x, int y, int width, int height);
extern DELPHI_PACKAGE void __stdcall (*glGetConvolutionFilter)(unsigned target, unsigned format, unsigned type_, void * image);
extern DELPHI_PACKAGE void __stdcall (*glGetConvolutionParameterfv)(unsigned target, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetConvolutionParameteriv)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetSeparableFilter)(unsigned target, unsigned format, unsigned type_, void * row, void * column, void * span);
extern DELPHI_PACKAGE void __stdcall (*glSeparableFilter2D)(unsigned target, unsigned internalformat, int width, int height, unsigned format, unsigned type_, const void * row, const void * column);
extern DELPHI_PACKAGE void __stdcall (*glGetHistogram)(unsigned target, System::Byte reset, unsigned format, unsigned type_, void * values);
extern DELPHI_PACKAGE void __stdcall (*glGetHistogramParameterfv)(unsigned target, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetHistogramParameteriv)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetMinmax)(unsigned target, System::Byte reset, unsigned format, unsigned type_, void * values);
extern DELPHI_PACKAGE void __stdcall (*glGetMinmaxParameterfv)(unsigned target, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetMinmaxParameteriv)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glHistogram)(unsigned target, int width, unsigned internalformat, System::Byte sink);
extern DELPHI_PACKAGE void __stdcall (*glMinmax)(unsigned target, unsigned internalformat, System::Byte sink);
extern DELPHI_PACKAGE void __stdcall (*glResetHistogram)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glResetMinmax)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glMultiDrawArraysIndirectCountARB)(unsigned mode, NativeInt indirect, NativeInt drawcount, int maxdrawcount, int stride);
extern DELPHI_PACKAGE void __stdcall (*glMultiDrawElementsIndirectCountARB)(unsigned mode, unsigned type_, NativeInt indirect, NativeInt drawcount, int maxdrawcount, int stride);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribDivisorARB)(unsigned index, unsigned divisor);
extern DELPHI_PACKAGE void __stdcall (*glCurrentPaletteMatrixARB)(int index);
extern DELPHI_PACKAGE void __stdcall (*glMatrixIndexubvARB)(int size, const Winapi::Opengl::PGLubyte indices);
extern DELPHI_PACKAGE void __stdcall (*glMatrixIndexusvARB)(int size, const Winapi::Opengl::PGLushort indices);
extern DELPHI_PACKAGE void __stdcall (*glMatrixIndexuivARB)(int size, const Winapi::Opengl::PGLuint indices);
extern DELPHI_PACKAGE void __stdcall (*glMatrixIndexPointerARB)(int size, unsigned type_, int stride, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glSampleCoverageARB)(float value, System::Byte invert);
extern DELPHI_PACKAGE void __stdcall (*glActiveTextureARB)(unsigned texture);
extern DELPHI_PACKAGE void __stdcall (*glClientActiveTextureARB)(unsigned texture);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1dARB)(unsigned target, double s);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1dvARB)(unsigned target, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1fARB)(unsigned target, float s);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1fvARB)(unsigned target, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1iARB)(unsigned target, int s);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1ivARB)(unsigned target, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1sARB)(unsigned target, short s);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1svARB)(unsigned target, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2dARB)(unsigned target, double s, double t);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2dvARB)(unsigned target, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2fARB)(unsigned target, float s, float t);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2fvARB)(unsigned target, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2iARB)(unsigned target, int s, int t);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2ivARB)(unsigned target, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2sARB)(unsigned target, short s, short t);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2svARB)(unsigned target, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3dARB)(unsigned target, double s, double t, double r);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3dvARB)(unsigned target, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3fARB)(unsigned target, float s, float t, float r);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3fvARB)(unsigned target, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3iARB)(unsigned target, int s, int t, int r);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3ivARB)(unsigned target, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3sARB)(unsigned target, short s, short t, short r);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3svARB)(unsigned target, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4dARB)(unsigned target, double s, double t, double r, double q);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4dvARB)(unsigned target, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4fARB)(unsigned target, float s, float t, float r, float q);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4fvARB)(unsigned target, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4iARB)(unsigned target, int s, int t, int r, int q);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4ivARB)(unsigned target, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4sARB)(unsigned target, short s, short t, short r, short q);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4svARB)(unsigned target, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glGenQueriesARB)(int n, Winapi::Opengl::PGLuint ids);
extern DELPHI_PACKAGE void __stdcall (*glDeleteQueriesARB)(int n, const Winapi::Opengl::PGLuint ids);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsQueryARB)(unsigned id);
extern DELPHI_PACKAGE void __stdcall (*glBeginQueryARB)(unsigned target, unsigned id);
extern DELPHI_PACKAGE void __stdcall (*glEndQueryARB)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryivARB)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryObjectivARB)(unsigned id, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryObjectuivARB)(unsigned id, unsigned pname, Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glPointParameterfARB)(unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glPointParameterfvARB)(unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE unsigned __stdcall (*glGetGraphicsResetStatusARB)(void);
extern DELPHI_PACKAGE void __stdcall (*glGetnTexImageARB)(unsigned target, int level, unsigned format, unsigned type_, int bufSize, void * img);
extern DELPHI_PACKAGE void __stdcall (*glReadnPixelsARB)(int x, int y, int width, int height, unsigned format, unsigned type_, int bufSize, void * data);
extern DELPHI_PACKAGE void __stdcall (*glGetnCompressedTexImageARB)(unsigned target, int lod, int bufSize, void * img);
extern DELPHI_PACKAGE void __stdcall (*glGetnUniformfvARB)(unsigned program_, int location, int bufSize, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetnUniformivARB)(unsigned program_, int location, int bufSize, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetnUniformuivARB)(unsigned program_, int location, int bufSize, Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glGetnUniformdvARB)(unsigned program_, int location, int bufSize, Winapi::Opengl::PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glGetnMapdvARB)(unsigned target, unsigned query, int bufSize, Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glGetnMapfvARB)(unsigned target, unsigned query, int bufSize, Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glGetnMapivARB)(unsigned target, unsigned query, int bufSize, Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glGetnPixelMapfvARB)(unsigned map, int bufSize, Winapi::Opengl::PGLfloat values);
extern DELPHI_PACKAGE void __stdcall (*glGetnPixelMapuivARB)(unsigned map, int bufSize, Winapi::Opengl::PGLuint values);
extern DELPHI_PACKAGE void __stdcall (*glGetnPixelMapusvARB)(unsigned map, int bufSize, Winapi::Opengl::PGLushort values);
extern DELPHI_PACKAGE void __stdcall (*glGetnPolygonStippleARB)(int bufSize, Winapi::Opengl::PGLubyte pattern);
extern DELPHI_PACKAGE void __stdcall (*glGetnColorTableARB)(unsigned target, unsigned format, unsigned type_, int bufSize, void * table);
extern DELPHI_PACKAGE void __stdcall (*glGetnConvolutionFilterARB)(unsigned target, unsigned format, unsigned type_, int bufSize, void * image);
extern DELPHI_PACKAGE void __stdcall (*glGetnSeparableFilterARB)(unsigned target, unsigned format, unsigned type_, int rowBufSize, void * row, int columnBufSize, void * column, void * span);
extern DELPHI_PACKAGE void __stdcall (*glGetnHistogramARB)(unsigned target, System::Byte reset, unsigned format, unsigned type_, int bufSize, void * values);
extern DELPHI_PACKAGE void __stdcall (*glGetnMinmaxARB)(unsigned target, System::Byte reset, unsigned format, unsigned type_, int bufSize, void * values);
extern DELPHI_PACKAGE void __stdcall (*glMinSampleShadingARB)(float value);
extern DELPHI_PACKAGE void __stdcall (*glDeleteObjectARB)(void * obj);
extern DELPHI_PACKAGE void * __stdcall (*glGetHandleARB)(unsigned pname);
extern DELPHI_PACKAGE void __stdcall (*glDetachObjectARB)(void * containerObj, void * attachedObj);
extern DELPHI_PACKAGE void * __stdcall (*glCreateShaderObjectARB)(unsigned shaderType);
extern DELPHI_PACKAGE void __stdcall (*glShaderSourceARB)(void * shaderObj, int count, const PPGLcharARB string_, const Winapi::Opengl::PGLInt length);
extern DELPHI_PACKAGE void __stdcall (*glCompileShaderARB)(void * shaderObj);
extern DELPHI_PACKAGE void * __stdcall (*glCreateProgramObjectARB)(void);
extern DELPHI_PACKAGE void __stdcall (*glAttachObjectARB)(void * containerObj, void * obj);
extern DELPHI_PACKAGE void __stdcall (*glLinkProgramARB)(void * programObj);
extern DELPHI_PACKAGE void __stdcall (*glUseProgramObjectARB)(void * programObj);
extern DELPHI_PACKAGE void __stdcall (*glValidateProgramARB)(void * programObj);
extern DELPHI_PACKAGE void __stdcall (*glUniform1fARB)(int location, float v0);
extern DELPHI_PACKAGE void __stdcall (*glUniform2fARB)(int location, float v0, float v1);
extern DELPHI_PACKAGE void __stdcall (*glUniform3fARB)(int location, float v0, float v1, float v2);
extern DELPHI_PACKAGE void __stdcall (*glUniform4fARB)(int location, float v0, float v1, float v2, float v3);
extern DELPHI_PACKAGE void __stdcall (*glUniform1iARB)(int location, int v0);
extern DELPHI_PACKAGE void __stdcall (*glUniform2iARB)(int location, int v0, int v1);
extern DELPHI_PACKAGE void __stdcall (*glUniform3iARB)(int location, int v0, int v1, int v2);
extern DELPHI_PACKAGE void __stdcall (*glUniform4iARB)(int location, int v0, int v1, int v2, int v3);
extern DELPHI_PACKAGE void __stdcall (*glUniform1fvARB)(int location, int count, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniform2fvARB)(int location, int count, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniform3fvARB)(int location, int count, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniform4fvARB)(int location, int count, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniform1ivARB)(int location, int count, const Winapi::Opengl::PGLInt value);
extern DELPHI_PACKAGE void __stdcall (*glUniform2ivARB)(int location, int count, const Winapi::Opengl::PGLInt value);
extern DELPHI_PACKAGE void __stdcall (*glUniform3ivARB)(int location, int count, const Winapi::Opengl::PGLInt value);
extern DELPHI_PACKAGE void __stdcall (*glUniform4ivARB)(int location, int count, const Winapi::Opengl::PGLInt value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix2fvARB)(int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix3fvARB)(int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glUniformMatrix4fvARB)(int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glGetObjectParameterfvARB)(void * obj, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetObjectParameterivARB)(void * obj, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetInfoLogARB)(void * obj, int maxLength, Winapi::Opengl::PGLSizei length, PGLcharARB infoLog);
extern DELPHI_PACKAGE void __stdcall (*glGetAttachedObjectsARB)(void * containerObj, int maxCount, Winapi::Opengl::PGLSizei count, PGLhandleARB obj);
extern DELPHI_PACKAGE int __stdcall (*glGetUniformLocationARB)(void * programObj, const PGLcharARB name);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveUniformARB)(void * programObj, unsigned index, int maxLength, Winapi::Opengl::PGLSizei length, Winapi::Opengl::PGLInt size, Winapi::Opengl::PGLEnum type_, PGLcharARB name);
extern DELPHI_PACKAGE void __stdcall (*glGetUniformfvARB)(void * programObj, int location, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetUniformivARB)(void * programObj, int location, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetShaderSourceARB)(void * obj, int maxLength, Winapi::Opengl::PGLSizei length, PGLcharARB source);
extern DELPHI_PACKAGE void __stdcall (*glNamedStringARB)(unsigned type_, int namelen, const char * name, int stringlen, const char * string_);
extern DELPHI_PACKAGE void __stdcall (*glDeleteNamedStringARB)(int namelen, const char * name);
extern DELPHI_PACKAGE void __stdcall (*glCompileShaderIncludeARB)(unsigned shader, int count, const PPGLchar path, const Winapi::Opengl::PGLInt length);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsNamedStringARB)(int namelen, const char * name);
extern DELPHI_PACKAGE void __stdcall (*glGetNamedStringARB)(int namelen, const char * name, int bufSize, Winapi::Opengl::PGLInt stringlen, char * string_);
extern DELPHI_PACKAGE void __stdcall (*glGetNamedStringivARB)(int namelen, const char * name, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glTexPageCommitmentARB)(unsigned target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, System::Byte resident);
extern DELPHI_PACKAGE void __stdcall (*glTexBufferARB)(unsigned target, unsigned internalformat, unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexImage3DARB)(unsigned target, int level, unsigned internalformat, int width, int height, int depth, int border, int imageSize, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexImage2DARB)(unsigned target, int level, unsigned internalformat, int width, int height, int border, int imageSize, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexImage1DARB)(unsigned target, int level, unsigned internalformat, int width, int border, int imageSize, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexSubImage3DARB)(unsigned target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, unsigned format, int imageSize, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexSubImage2DARB)(unsigned target, int level, int xoffset, int yoffset, int width, int height, unsigned format, int imageSize, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTexSubImage1DARB)(unsigned target, int level, int xoffset, int width, unsigned format, int imageSize, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glGetCompressedTexImageARB)(unsigned target, int level, void * img);
extern DELPHI_PACKAGE void __stdcall (*glLoadTransposeMatrixfARB)(const Winapi::Opengl::PGLfloat m);
extern DELPHI_PACKAGE void __stdcall (*glLoadTransposeMatrixdARB)(const Winapi::Opengl::PGLdouble m);
extern DELPHI_PACKAGE void __stdcall (*glMultTransposeMatrixfARB)(const Winapi::Opengl::PGLfloat m);
extern DELPHI_PACKAGE void __stdcall (*glMultTransposeMatrixdARB)(const Winapi::Opengl::PGLdouble m);
extern DELPHI_PACKAGE void __stdcall (*glWeightbvARB)(int size, const Winapi::Opengl::PGLByte weights);
extern DELPHI_PACKAGE void __stdcall (*glWeightsvARB)(int size, const Winapi::Opengl::PGLShort weights);
extern DELPHI_PACKAGE void __stdcall (*glWeightivARB)(int size, const Winapi::Opengl::PGLInt weights);
extern DELPHI_PACKAGE void __stdcall (*glWeightfvARB)(int size, const Winapi::Opengl::PGLfloat weights);
extern DELPHI_PACKAGE void __stdcall (*glWeightdvARB)(int size, const Winapi::Opengl::PGLdouble weights);
extern DELPHI_PACKAGE void __stdcall (*glWeightubvARB)(int size, const Winapi::Opengl::PGLubyte weights);
extern DELPHI_PACKAGE void __stdcall (*glWeightusvARB)(int size, const Winapi::Opengl::PGLushort weights);
extern DELPHI_PACKAGE void __stdcall (*glWeightuivARB)(int size, const Winapi::Opengl::PGLuint weights);
extern DELPHI_PACKAGE void __stdcall (*glWeightPointerARB)(int size, unsigned type_, int stride, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glVertexBlendARB)(int count);
extern DELPHI_PACKAGE void __stdcall (*glBindBufferARB)(unsigned target, unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glDeleteBuffersARB)(int n, const Winapi::Opengl::PGLuint buffers);
extern DELPHI_PACKAGE void __stdcall (*glGenBuffersARB)(int n, Winapi::Opengl::PGLuint buffers);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsBufferARB)(unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glBufferDataARB)(unsigned target, NativeInt size, const void * data, unsigned usage);
extern DELPHI_PACKAGE void __stdcall (*glBufferSubDataARB)(unsigned target, NativeInt offset, NativeInt size, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glGetBufferSubDataARB)(unsigned target, NativeInt offset, NativeInt size, void * data);
extern DELPHI_PACKAGE void * __stdcall (*glMapBufferARB)(unsigned target, unsigned access);
extern DELPHI_PACKAGE System::Byte __stdcall (*glUnmapBufferARB)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glGetBufferParameterivARB)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetBufferPointervARB)(unsigned target, unsigned pname, System::PPointer params);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1dARB)(unsigned index, double x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1dvARB)(unsigned index, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1fARB)(unsigned index, float x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1fvARB)(unsigned index, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1sARB)(unsigned index, short x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1svARB)(unsigned index, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2dARB)(unsigned index, double x, double y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2dvARB)(unsigned index, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2fARB)(unsigned index, float x, float y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2fvARB)(unsigned index, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2sARB)(unsigned index, short x, short y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2svARB)(unsigned index, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3dARB)(unsigned index, double x, double y, double z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3dvARB)(unsigned index, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3fARB)(unsigned index, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3fvARB)(unsigned index, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3sARB)(unsigned index, short x, short y, short z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3svARB)(unsigned index, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4NbvARB)(unsigned index, const Winapi::Opengl::PGLByte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4NivARB)(unsigned index, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4NsvARB)(unsigned index, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4NubARB)(unsigned index, System::Byte x, System::Byte y, System::Byte z, System::Byte w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4NubvARB)(unsigned index, const Winapi::Opengl::PGLubyte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4NuivARB)(unsigned index, const Winapi::Opengl::PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4NusvARB)(unsigned index, const Winapi::Opengl::PGLushort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4bvARB)(unsigned index, const Winapi::Opengl::PGLByte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4dARB)(unsigned index, double x, double y, double z, double w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4dvARB)(unsigned index, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4fARB)(unsigned index, float x, float y, float z, float w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4fvARB)(unsigned index, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4ivARB)(unsigned index, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4sARB)(unsigned index, short x, short y, short z, short w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4svARB)(unsigned index, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4ubvARB)(unsigned index, const Winapi::Opengl::PGLubyte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4uivARB)(unsigned index, const Winapi::Opengl::PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4usvARB)(unsigned index, const Winapi::Opengl::PGLushort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribPointerARB)(unsigned index, int size, unsigned type_, System::Byte normalized, int stride, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glEnableVertexAttribArrayARB)(unsigned index);
extern DELPHI_PACKAGE void __stdcall (*glDisableVertexAttribArrayARB)(unsigned index);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribdvARB)(unsigned index, unsigned pname, Winapi::Opengl::PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribfvARB)(unsigned index, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribivARB)(unsigned index, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribPointervARB)(unsigned index, unsigned pname, System::PPointer pointer);
extern DELPHI_PACKAGE void __stdcall (*glBindAttribLocationARB)(void * programObj, unsigned index, const PGLcharARB name);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveAttribARB)(void * programObj, unsigned index, int maxLength, Winapi::Opengl::PGLSizei length, Winapi::Opengl::PGLInt size, Winapi::Opengl::PGLEnum type_, PGLcharARB name);
extern DELPHI_PACKAGE int __stdcall (*glGetAttribLocationARB)(void * programObj, const PGLcharARB name);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2dARB)(double x, double y);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2dvARB)(const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2fARB)(float x, float y);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2fvARB)(const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2iARB)(int x, int y);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2ivARB)(const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2sARB)(short x, short y);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2svARB)(const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3dARB)(double x, double y, double z);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3dvARB)(const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3fARB)(float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3fvARB)(const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3iARB)(int x, int y, int z);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3ivARB)(const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3sARB)(short x, short y, short z);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3svARB)(const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1bOES)(unsigned texture, System::Int8 s);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1bvOES)(unsigned texture, const Winapi::Opengl::PGLByte coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2bOES)(unsigned texture, System::Int8 s, System::Int8 t);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2bvOES)(unsigned texture, const Winapi::Opengl::PGLByte coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3bOES)(unsigned texture, System::Int8 s, System::Int8 t, System::Int8 r);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3bvOES)(unsigned texture, const Winapi::Opengl::PGLByte coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4bOES)(unsigned texture, System::Int8 s, System::Int8 t, System::Int8 r, System::Int8 q);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4bvOES)(unsigned texture, const Winapi::Opengl::PGLByte coords);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord1bOES)(System::Int8 s);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord1bvOES)(const Winapi::Opengl::PGLByte coords);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord2bOES)(System::Int8 s, System::Int8 t);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord2bvOES)(const Winapi::Opengl::PGLByte coords);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord3bOES)(System::Int8 s, System::Int8 t, System::Int8 r);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord3bvOES)(const Winapi::Opengl::PGLByte coords);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord4bOES)(System::Int8 s, System::Int8 t, System::Int8 r, System::Int8 q);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord4bvOES)(const Winapi::Opengl::PGLByte coords);
extern DELPHI_PACKAGE void __stdcall (*glVertex2bOES)(System::Int8 x);
extern DELPHI_PACKAGE void __stdcall (*glVertex2bvOES)(const Winapi::Opengl::PGLByte coords);
extern DELPHI_PACKAGE void __stdcall (*glVertex3bOES)(System::Int8 x, System::Int8 y);
extern DELPHI_PACKAGE void __stdcall (*glVertex3bvOES)(const Winapi::Opengl::PGLByte coords);
extern DELPHI_PACKAGE void __stdcall (*glVertex4bOES)(System::Int8 x, System::Int8 y, System::Int8 z);
extern DELPHI_PACKAGE void __stdcall (*glVertex4bvOES)(const Winapi::Opengl::PGLByte coords);
extern DELPHI_PACKAGE void __stdcall (*glAlphaFuncxOES)(unsigned func, int ref);
extern DELPHI_PACKAGE void __stdcall (*glClearColorxOES)(int red, int green, int blue, int alpha);
extern DELPHI_PACKAGE void __stdcall (*glClearDepthxOES)(int depth);
extern DELPHI_PACKAGE void __stdcall (*glClipPlanexOES)(unsigned plane, const PGLfixed equation);
extern DELPHI_PACKAGE void __stdcall (*glColor4xOES)(int red, int green, int blue, int alpha);
extern DELPHI_PACKAGE void __stdcall (*glDepthRangexOES)(int n, int f);
extern DELPHI_PACKAGE void __stdcall (*glFogxOES)(unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glFogxvOES)(unsigned pname, const PGLfixed param);
extern DELPHI_PACKAGE void __stdcall (*glFrustumxOES)(int l, int r, int b, int t, int n, int f);
extern DELPHI_PACKAGE void __stdcall (*glGetClipPlanexOES)(unsigned plane, PGLfixed equation);
extern DELPHI_PACKAGE void __stdcall (*glGetFixedvOES)(unsigned pname, PGLfixed params);
extern DELPHI_PACKAGE void __stdcall (*glGetTexEnvxvOES)(unsigned target, unsigned pname, PGLfixed params);
extern DELPHI_PACKAGE void __stdcall (*glGetTexParameterxvOES)(unsigned target, unsigned pname, PGLfixed params);
extern DELPHI_PACKAGE void __stdcall (*glLightModelxOES)(unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glLightModelxvOES)(unsigned pname, const PGLfixed param);
extern DELPHI_PACKAGE void __stdcall (*glLightxOES)(unsigned light, unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glLightxvOES)(unsigned light, unsigned pname, const PGLfixed params);
extern DELPHI_PACKAGE void __stdcall (*glLineWidthxOES)(int width);
extern DELPHI_PACKAGE void __stdcall (*glLoadMatrixxOES)(const PGLfixed m);
extern DELPHI_PACKAGE void __stdcall (*glMaterialxOES)(unsigned face, unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glMaterialxvOES)(unsigned face, unsigned pname, const PGLfixed param);
extern DELPHI_PACKAGE void __stdcall (*glMultMatrixxOES)(const PGLfixed m);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4xOES)(unsigned texture, int s, int t, int r, int q);
extern DELPHI_PACKAGE void __stdcall (*glNormal3xOES)(int nx, int ny, int nz);
extern DELPHI_PACKAGE void __stdcall (*glOrthoxOES)(int l, int r, int b, int t, int n, int f);
extern DELPHI_PACKAGE void __stdcall (*glPointParameterxvOES)(unsigned pname, const PGLfixed params);
extern DELPHI_PACKAGE void __stdcall (*glPointSizexOES)(int size);
extern DELPHI_PACKAGE void __stdcall (*glPolygonOffsetxOES)(int factor, int units);
extern DELPHI_PACKAGE void __stdcall (*glRotatexOES)(int angle, int x, int y, int z);
extern DELPHI_PACKAGE void __stdcall (*glSampleCoverageOES)(int value, System::Byte invert);
extern DELPHI_PACKAGE void __stdcall (*glScalexOES)(int x, int y, int z);
extern DELPHI_PACKAGE void __stdcall (*glTexEnvxOES)(unsigned target, unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glTexEnvxvOES)(unsigned target, unsigned pname, const PGLfixed params);
extern DELPHI_PACKAGE void __stdcall (*glTexParameterxOES)(unsigned target, unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glTexParameterxvOES)(unsigned target, unsigned pname, const PGLfixed params);
extern DELPHI_PACKAGE void __stdcall (*glTranslatexOES)(int x, int y, int z);
extern DELPHI_PACKAGE void __stdcall (*glAccumxOES)(unsigned op, int value);
extern DELPHI_PACKAGE void __stdcall (*glBitmapxOES)(int width, int height, int xorig, int yorig, int xmove, int ymove, const Winapi::Opengl::PGLubyte bitmap);
extern DELPHI_PACKAGE void __stdcall (*glBlendColorxOES)(int red, int green, int blue, int alpha);
extern DELPHI_PACKAGE void __stdcall (*glClearAccumxOES)(int red, int green, int blue, int alpha);
extern DELPHI_PACKAGE void __stdcall (*glColor3xOES)(int red, int green, int blue);
extern DELPHI_PACKAGE void __stdcall (*glColor3xvOES)(const PGLfixed components);
extern DELPHI_PACKAGE void __stdcall (*glColor4xvOES)(const PGLfixed components);
extern DELPHI_PACKAGE void __stdcall (*glConvolutionParameterxOES)(unsigned target, unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glConvolutionParameterxvOES)(unsigned target, unsigned pname, const PGLfixed params);
extern DELPHI_PACKAGE void __stdcall (*glEvalCoord1xOES)(int u);
extern DELPHI_PACKAGE void __stdcall (*glEvalCoord1xvOES)(const PGLfixed coords);
extern DELPHI_PACKAGE void __stdcall (*glEvalCoord2xOES)(int u, int v);
extern DELPHI_PACKAGE void __stdcall (*glEvalCoord2xvOES)(const PGLfixed coords);
extern DELPHI_PACKAGE void __stdcall (*glFeedbackBufferxOES)(int n, unsigned type_, const PGLfixed buffer);
extern DELPHI_PACKAGE void __stdcall (*glGetConvolutionParameterxvOES)(unsigned target, unsigned pname, PGLfixed params);
extern DELPHI_PACKAGE void __stdcall (*glGetHistogramParameterxvOES)(unsigned target, unsigned pname, PGLfixed params);
extern DELPHI_PACKAGE void __stdcall (*glGetLightxOES)(unsigned light, unsigned pname, PGLfixed params);
extern DELPHI_PACKAGE void __stdcall (*glGetMapxvOES)(unsigned target, unsigned query, PGLfixed v);
extern DELPHI_PACKAGE void __stdcall (*glGetMaterialxOES)(unsigned face, unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glGetPixelMapxv)(unsigned map, int size, PGLfixed values);
extern DELPHI_PACKAGE void __stdcall (*glGetTexGenxvOES)(unsigned coord, unsigned pname, PGLfixed params);
extern DELPHI_PACKAGE void __stdcall (*glGetTexLevelParameterxvOES)(unsigned target, int level, unsigned pname, PGLfixed params);
extern DELPHI_PACKAGE void __stdcall (*glIndexxOES)(int component);
extern DELPHI_PACKAGE void __stdcall (*glIndexxvOES)(const PGLfixed component);
extern DELPHI_PACKAGE void __stdcall (*glLoadTransposeMatrixxOES)(const PGLfixed m);
extern DELPHI_PACKAGE void __stdcall (*glMap1xOES)(unsigned target, int u1, int u2, int stride, int order, int points);
extern DELPHI_PACKAGE void __stdcall (*glMap2xOES)(unsigned target, int u1, int u2, int ustride, int uorder, int v1, int v2, int vstride, int vorder, int points);
extern DELPHI_PACKAGE void __stdcall (*glMapGrid1xOES)(int n, int u1, int u2);
extern DELPHI_PACKAGE void __stdcall (*glMapGrid2xOES)(int n, int u1, int u2, int v1, int v2);
extern DELPHI_PACKAGE void __stdcall (*glMultTransposeMatrixxOES)(const PGLfixed m);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1xOES)(unsigned texture, int s);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1xvOES)(unsigned texture, const PGLfixed coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2xOES)(unsigned texture, int s, int t);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2xvOES)(unsigned texture, const PGLfixed coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3xOES)(unsigned texture, int s, int t, int r);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3xvOES)(unsigned texture, const PGLfixed coords);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4xvOES)(unsigned texture, const PGLfixed coords);
extern DELPHI_PACKAGE void __stdcall (*glNormal3xvOES)(const PGLfixed coords);
extern DELPHI_PACKAGE void __stdcall (*glPassThroughxOES)(int token);
extern DELPHI_PACKAGE void __stdcall (*glPixelMapx)(unsigned map, int size, const PGLfixed values);
extern DELPHI_PACKAGE void __stdcall (*glPixelStorex)(unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glPixelTransferxOES)(unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glPixelZoomxOES)(int xfactor, int yfactor);
extern DELPHI_PACKAGE void __stdcall (*glPrioritizeTexturesxOES)(int n, const Winapi::Opengl::PGLuint textures, const PGLfixed priorities);
extern DELPHI_PACKAGE void __stdcall (*glRasterPos2xOES)(int x, int y);
extern DELPHI_PACKAGE void __stdcall (*glRasterPos2xvOES)(const PGLfixed coords);
extern DELPHI_PACKAGE void __stdcall (*glRasterPos3xOES)(int x, int y, int z);
extern DELPHI_PACKAGE void __stdcall (*glRasterPos3xvOES)(const PGLfixed coords);
extern DELPHI_PACKAGE void __stdcall (*glRasterPos4xOES)(int x, int y, int z, int w);
extern DELPHI_PACKAGE void __stdcall (*glRasterPos4xvOES)(const PGLfixed coords);
extern DELPHI_PACKAGE void __stdcall (*glRectxOES)(int x1, int y1, int x2, int y2);
extern DELPHI_PACKAGE void __stdcall (*glRectxvOES)(const PGLfixed v1, const PGLfixed v2);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord1xOES)(int s);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord1xvOES)(const PGLfixed coords);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord2xOES)(int s, int t);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord2xvOES)(const PGLfixed coords);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord3xOES)(int s, int t, int r);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord3xvOES)(const PGLfixed coords);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord4xOES)(int s, int t, int r, int q);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord4xvOES)(const PGLfixed coords);
extern DELPHI_PACKAGE void __stdcall (*glTexGenxOES)(unsigned coord, unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glTexGenxvOES)(unsigned coord, unsigned pname, const PGLfixed params);
extern DELPHI_PACKAGE void __stdcall (*glVertex2xOES)(int x);
extern DELPHI_PACKAGE void __stdcall (*glVertex2xvOES)(const PGLfixed coords);
extern DELPHI_PACKAGE void __stdcall (*glVertex3xOES)(int x, int y);
extern DELPHI_PACKAGE void __stdcall (*glVertex3xvOES)(const PGLfixed coords);
extern DELPHI_PACKAGE void __stdcall (*glVertex4xOES)(int x, int y, int z);
extern DELPHI_PACKAGE void __stdcall (*glVertex4xvOES)(const PGLfixed coords);
extern DELPHI_PACKAGE unsigned __stdcall (*glQueryMatrixxOES)(PGLfixed mantissa, Winapi::Opengl::PGLInt exponent);
extern DELPHI_PACKAGE void __stdcall (*glClearDepthfOES)(float depth);
extern DELPHI_PACKAGE void __stdcall (*glClipPlanefOES)(unsigned plane, const Winapi::Opengl::PGLfloat equation);
extern DELPHI_PACKAGE void __stdcall (*glDepthRangefOES)(float n, float f);
extern DELPHI_PACKAGE void __stdcall (*glFrustumfOES)(float l, float r, float b, float t, float n, float f);
extern DELPHI_PACKAGE void __stdcall (*glGetClipPlanefOES)(unsigned plane, Winapi::Opengl::PGLfloat equation);
extern DELPHI_PACKAGE void __stdcall (*glOrthofOES)(float l, float r, float b, float t, float n, float f);
extern DELPHI_PACKAGE void __stdcall (*glTbufferMask3DFX)(unsigned mask);
extern DELPHI_PACKAGE void __stdcall (*glDebugMessageEnableAMD)(unsigned category, unsigned severity, int count, const Winapi::Opengl::PGLuint ids, System::Byte enabled);
extern DELPHI_PACKAGE void __stdcall (*glDebugMessageInsertAMD)(unsigned category, unsigned severity, unsigned id, int length, const char * buf);
extern DELPHI_PACKAGE void __stdcall (*glDebugMessageCallbackAMD)(GLDEBUGPROCAMD callback, void * userParam);
extern DELPHI_PACKAGE unsigned __stdcall (*glGetDebugMessageLogAMD)(unsigned count, int bufsize, Winapi::Opengl::PGLEnum categories, Winapi::Opengl::PGLuint severities, Winapi::Opengl::PGLuint ids, Winapi::Opengl::PGLSizei lengths, char * message);
extern DELPHI_PACKAGE void __stdcall (*glBlendFuncIndexedAMD)(unsigned buf, unsigned src, unsigned dst);
extern DELPHI_PACKAGE void __stdcall (*glBlendFuncSeparateIndexedAMD)(unsigned buf, unsigned srcRGB, unsigned dstRGB, unsigned srcAlpha, unsigned dstAlpha);
extern DELPHI_PACKAGE void __stdcall (*glBlendEquationIndexedAMD)(unsigned buf, unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glBlendEquationSeparateIndexedAMD)(unsigned buf, unsigned modeRGB, unsigned modeAlpha);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribParameteriAMD)(unsigned index, unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glMultiDrawArraysIndirectAMD)(unsigned mode, const void * indirect, int primcount, int stride);
extern DELPHI_PACKAGE void __stdcall (*glMultiDrawElementsIndirectAMD)(unsigned mode, unsigned type_, const void * indirect, int primcount, int stride);
extern DELPHI_PACKAGE void __stdcall (*glGenNamesAMD)(unsigned identifier, unsigned num, Winapi::Opengl::PGLuint names);
extern DELPHI_PACKAGE void __stdcall (*glDeleteNamesAMD)(unsigned identifier, unsigned num, const Winapi::Opengl::PGLuint names);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsNameAMD)(unsigned identifier, unsigned name);
extern DELPHI_PACKAGE void __stdcall (*glQueryObjectParameteruiAMD)(unsigned target, unsigned id, unsigned pname, unsigned param);
extern DELPHI_PACKAGE void __stdcall (*glGetPerfMonitorGroupsAMD)(Winapi::Opengl::PGLInt numGroups, int groupsSize, Winapi::Opengl::PGLuint groups);
extern DELPHI_PACKAGE void __stdcall (*glGetPerfMonitorCountersAMD)(unsigned group, Winapi::Opengl::PGLInt numCounters, Winapi::Opengl::PGLInt maxActiveCounters, int counterSize, Winapi::Opengl::PGLuint counters);
extern DELPHI_PACKAGE void __stdcall (*glGetPerfMonitorGroupStringAMD)(unsigned group, int bufSize, Winapi::Opengl::PGLSizei length, char * groupString);
extern DELPHI_PACKAGE void __stdcall (*glGetPerfMonitorCounterStringAMD)(unsigned group, unsigned counter, int bufSize, Winapi::Opengl::PGLSizei length, char * counterString);
extern DELPHI_PACKAGE void __stdcall (*glGetPerfMonitorCounterInfoAMD)(unsigned group, unsigned counter, unsigned pname, void * data);
extern DELPHI_PACKAGE void __stdcall (*glGenPerfMonitorsAMD)(int n, Winapi::Opengl::PGLuint monitors);
extern DELPHI_PACKAGE void __stdcall (*glDeletePerfMonitorsAMD)(int n, Winapi::Opengl::PGLuint monitors);
extern DELPHI_PACKAGE void __stdcall (*glSelectPerfMonitorCountersAMD)(unsigned monitor, System::Byte enable, unsigned group, int numCounters, Winapi::Opengl::PGLuint counterList);
extern DELPHI_PACKAGE void __stdcall (*glBeginPerfMonitorAMD)(unsigned monitor);
extern DELPHI_PACKAGE void __stdcall (*glEndPerfMonitorAMD)(unsigned monitor);
extern DELPHI_PACKAGE void __stdcall (*glGetPerfMonitorCounterDataAMD)(unsigned monitor, unsigned pname, int dataSize, Winapi::Opengl::PGLuint data, Winapi::Opengl::PGLInt bytesWritten);
extern DELPHI_PACKAGE void __stdcall (*glSetMultisamplefvAMD)(unsigned pname, unsigned index, const Winapi::Opengl::PGLfloat val);
extern DELPHI_PACKAGE void __stdcall (*glTexStorageSparseAMD)(unsigned target, unsigned internalFormat, int width, int height, int depth, int layers, unsigned flags);
extern DELPHI_PACKAGE void __stdcall (*glTextureStorageSparseAMD)(unsigned texture, unsigned target, unsigned internalFormat, int width, int height, int depth, int layers, unsigned flags);
extern DELPHI_PACKAGE void __stdcall (*glStencilOpValueAMD)(unsigned face, unsigned value);
extern DELPHI_PACKAGE void __stdcall (*glTessellationFactorAMD)(float factor);
extern DELPHI_PACKAGE void __stdcall (*glTessellationModeAMD)(unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glElementPointerAPPLE)(unsigned type_, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glDrawElementArrayAPPLE)(unsigned mode, int first, int count);
extern DELPHI_PACKAGE void __stdcall (*glDrawRangeElementArrayAPPLE)(unsigned mode, unsigned start, unsigned end_, int first, int count);
extern DELPHI_PACKAGE void __stdcall (*glMultiDrawElementArrayAPPLE)(unsigned mode, const Winapi::Opengl::PGLInt first, const Winapi::Opengl::PGLSizei count, int primcount);
extern DELPHI_PACKAGE void __stdcall (*glMultiDrawRangeElementArrayAPPLE)(unsigned mode, unsigned start, unsigned end_, const Winapi::Opengl::PGLInt first, const Winapi::Opengl::PGLSizei count, int primcount);
extern DELPHI_PACKAGE void __stdcall (*glGenFencesAPPLE)(int n, Winapi::Opengl::PGLuint fences);
extern DELPHI_PACKAGE void __stdcall (*glDeleteFencesAPPLE)(int n, const Winapi::Opengl::PGLuint fences);
extern DELPHI_PACKAGE void __stdcall (*glSetFenceAPPLE)(unsigned fence);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsFenceAPPLE)(unsigned fence);
extern DELPHI_PACKAGE System::Byte __stdcall (*glTestFenceAPPLE)(unsigned fence);
extern DELPHI_PACKAGE void __stdcall (*glFinishFenceAPPLE)(unsigned fence);
extern DELPHI_PACKAGE System::Byte __stdcall (*glTestObjectAPPLE)(unsigned object_, unsigned name);
extern DELPHI_PACKAGE void __stdcall (*glFinishObjectAPPLE)(unsigned object_, int name);
extern DELPHI_PACKAGE void __stdcall (*glBufferParameteriAPPLE)(unsigned target, unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glFlushMappedBufferRangeAPPLE)(unsigned target, NativeInt offset, NativeInt size);
extern DELPHI_PACKAGE unsigned __stdcall (*glObjectPurgeableAPPLE)(unsigned objectType, unsigned name, unsigned option);
extern DELPHI_PACKAGE unsigned __stdcall (*glObjectUnpurgeableAPPLE)(unsigned objectType, unsigned name, unsigned option);
extern DELPHI_PACKAGE void __stdcall (*glGetObjectParameterivAPPLE)(unsigned objectType, unsigned name, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glTextureRangeAPPLE)(unsigned target, int length, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glGetTexParameterPointervAPPLE)(unsigned target, unsigned pname, System::PPointer params);
extern DELPHI_PACKAGE void __stdcall (*glBindVertexArrayAPPLE)(unsigned array_);
extern DELPHI_PACKAGE void __stdcall (*glDeleteVertexArraysAPPLE)(int n, const Winapi::Opengl::PGLuint arrays);
extern DELPHI_PACKAGE void __stdcall (*glGenVertexArraysAPPLE)(int n, Winapi::Opengl::PGLuint arrays);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsVertexArrayAPPLE)(unsigned array_);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayRangeAPPLE)(int length, void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glFlushVertexArrayRangeAPPLE)(int length, void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayParameteriAPPLE)(unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glEnableVertexAttribAPPLE)(unsigned index, unsigned pname);
extern DELPHI_PACKAGE void __stdcall (*glDisableVertexAttribAPPLE)(unsigned index, unsigned pname);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsVertexAttribEnabledAPPLE)(unsigned index, unsigned pname);
extern DELPHI_PACKAGE void __stdcall (*glMapVertexAttrib1dAPPLE)(unsigned index, unsigned size, double u1, double u2, int stride, int order, const Winapi::Opengl::PGLdouble points);
extern DELPHI_PACKAGE void __stdcall (*glMapVertexAttrib1fAPPLE)(unsigned index, unsigned size, float u1, float u2, int stride, int order, const Winapi::Opengl::PGLfloat points);
extern DELPHI_PACKAGE void __stdcall (*glMapVertexAttrib2dAPPLE)(unsigned index, unsigned size, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, const Winapi::Opengl::PGLdouble points);
extern DELPHI_PACKAGE void __stdcall (*glMapVertexAttrib2fAPPLE)(unsigned index, unsigned size, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, const Winapi::Opengl::PGLfloat points);
extern DELPHI_PACKAGE void __stdcall (*glDrawBuffersATI)(int n, const Winapi::Opengl::PGLEnum bufs);
extern DELPHI_PACKAGE void __stdcall (*glElementPointerATI)(unsigned type_, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glDrawElementArrayATI)(unsigned mode, int count);
extern DELPHI_PACKAGE void __stdcall (*glDrawRangeElementArrayATI)(unsigned mode, unsigned start, unsigned end_, int count);
extern DELPHI_PACKAGE void __stdcall (*glTexBumpParameterivATI)(unsigned pname, const Winapi::Opengl::PGLInt param);
extern DELPHI_PACKAGE void __stdcall (*glTexBumpParameterfvATI)(unsigned pname, const Winapi::Opengl::PGLfloat param);
extern DELPHI_PACKAGE void __stdcall (*glGetTexBumpParameterivATI)(unsigned pname, Winapi::Opengl::PGLInt param);
extern DELPHI_PACKAGE void __stdcall (*glGetTexBumpParameterfvATI)(unsigned pname, Winapi::Opengl::PGLfloat param);
extern DELPHI_PACKAGE unsigned __stdcall (*glGenFragmentShadersATI)(unsigned range);
extern DELPHI_PACKAGE void __stdcall (*glBindFragmentShaderATI)(unsigned id);
extern DELPHI_PACKAGE void __stdcall (*glDeleteFragmentShaderATI)(unsigned id);
extern DELPHI_PACKAGE void __stdcall (*glBeginFragmentShaderATI)(void);
extern DELPHI_PACKAGE void __stdcall (*glEndFragmentShaderATI)(void);
extern DELPHI_PACKAGE void __stdcall (*glPassTexCoordATI)(unsigned dst, unsigned coord, unsigned swizzle);
extern DELPHI_PACKAGE void __stdcall (*glSampleMapATI)(unsigned dst, unsigned interp, unsigned swizzle);
extern DELPHI_PACKAGE void __stdcall (*glColorFragmentOp1ATI)(unsigned op, unsigned dst, unsigned dstMask, unsigned dstMod, unsigned arg1, unsigned arg1Rep, unsigned arg1Mod);
extern DELPHI_PACKAGE void __stdcall (*glColorFragmentOp2ATI)(unsigned op, unsigned dst, unsigned dstMask, unsigned dstMod, unsigned arg1, unsigned arg1Rep, unsigned arg1Mod, unsigned arg2, unsigned arg2Rep, unsigned arg2Mod);
extern DELPHI_PACKAGE void __stdcall (*glColorFragmentOp3ATI)(unsigned op, unsigned dst, unsigned dstMask, unsigned dstMod, unsigned arg1, unsigned arg1Rep, unsigned arg1Mod, unsigned arg2, unsigned arg2Rep, unsigned arg2Mod, unsigned arg3, unsigned arg3Rep, unsigned arg3Mod);
extern DELPHI_PACKAGE void __stdcall (*glAlphaFragmentOp1ATI)(unsigned op, unsigned dst, unsigned dstMod, unsigned arg1, unsigned arg1Rep, unsigned arg1Mod);
extern DELPHI_PACKAGE void __stdcall (*glAlphaFragmentOp2ATI)(unsigned op, unsigned dst, unsigned dstMod, unsigned arg1, unsigned arg1Rep, unsigned arg1Mod, unsigned arg2, unsigned arg2Rep, unsigned arg2Mod);
extern DELPHI_PACKAGE void __stdcall (*glAlphaFragmentOp3ATI)(unsigned op, unsigned dst, unsigned dstMod, unsigned arg1, unsigned arg1Rep, unsigned arg1Mod, unsigned arg2, unsigned arg2Rep, unsigned arg2Mod, unsigned arg3, unsigned arg3Rep, unsigned arg3Mod);
extern DELPHI_PACKAGE void __stdcall (*glSetFragmentShaderConstantATI)(unsigned dst, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void * __stdcall (*glMapObjectBufferATI)(unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glUnmapObjectBufferATI)(unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glPNTrianglesiATI)(unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glPNTrianglesfATI)(unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glStencilOpSeparateATI)(unsigned face, unsigned sfail, unsigned dpfail, unsigned dppass);
extern DELPHI_PACKAGE void __stdcall (*glStencilFuncSeparateATI)(unsigned frontfunc, unsigned backfunc, int ref, unsigned mask);
extern DELPHI_PACKAGE unsigned __stdcall (*glNewObjectBufferATI)(int size, const void * pointer, unsigned usage);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsObjectBufferATI)(unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glUpdateObjectBufferATI)(unsigned buffer, unsigned offset, int size, const void * pointer, unsigned preserve);
extern DELPHI_PACKAGE void __stdcall (*glGetObjectBufferfvATI)(unsigned buffer, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetObjectBufferivATI)(unsigned buffer, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glFreeObjectBufferATI)(unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glArrayObjectATI)(unsigned array_, int size, unsigned type_, int stride, unsigned buffer, unsigned offset);
extern DELPHI_PACKAGE void __stdcall (*glGetArrayObjectfvATI)(unsigned array_, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetArrayObjectivATI)(unsigned array_, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glVariantArrayObjectATI)(unsigned id, unsigned type_, int stride, unsigned buffer, unsigned offset);
extern DELPHI_PACKAGE void __stdcall (*glGetVariantArrayObjectfvATI)(unsigned id, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetVariantArrayObjectivATI)(unsigned id, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribArrayObjectATI)(unsigned index, int size, unsigned type_, System::Byte normalized, int stride, unsigned buffer, unsigned offset);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribArrayObjectfvATI)(unsigned index, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribArrayObjectivATI)(unsigned index, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream1sATI)(unsigned stream, short x);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream1svATI)(unsigned stream, const Winapi::Opengl::PGLShort coords);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream1iATI)(unsigned stream, int x);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream1ivATI)(unsigned stream, const Winapi::Opengl::PGLInt coords);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream1fATI)(unsigned stream, float x);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream1fvATI)(unsigned stream, const Winapi::Opengl::PGLfloat coords);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream1dATI)(unsigned stream, double x);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream1dvATI)(unsigned stream, const Winapi::Opengl::PGLdouble coords);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream2sATI)(unsigned stream, short x, short y);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream2svATI)(unsigned stream, const Winapi::Opengl::PGLShort coords);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream2iATI)(unsigned stream, int x, int y);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream2ivATI)(unsigned stream, const Winapi::Opengl::PGLInt coords);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream2fATI)(unsigned stream, float x, float y);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream2fvATI)(unsigned stream, const Winapi::Opengl::PGLfloat coords);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream2dATI)(unsigned stream, double x, double y);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream2dvATI)(unsigned stream, const Winapi::Opengl::PGLdouble coords);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream3sATI)(unsigned stream, short x, short y, short z);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream3svATI)(unsigned stream, const Winapi::Opengl::PGLShort coords);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream3iATI)(unsigned stream, int x, int y, int z);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream3ivATI)(unsigned stream, const Winapi::Opengl::PGLInt coords);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream3fATI)(unsigned stream, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream3fvATI)(unsigned stream, const Winapi::Opengl::PGLfloat coords);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream3dATI)(unsigned stream, double x, double y, double z);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream3dvATI)(unsigned stream, const Winapi::Opengl::PGLdouble coords);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream4sATI)(unsigned stream, short x, short y, short z, short w);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream4svATI)(unsigned stream, const Winapi::Opengl::PGLShort coords);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream4iATI)(unsigned stream, int x, int y, int z, int w);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream4ivATI)(unsigned stream, const Winapi::Opengl::PGLInt coords);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream4fATI)(unsigned stream, float x, float y, float z, float w);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream4fvATI)(unsigned stream, const Winapi::Opengl::PGLfloat coords);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream4dATI)(unsigned stream, double x, double y, double z, double w);
extern DELPHI_PACKAGE void __stdcall (*glVertexStream4dvATI)(unsigned stream, const Winapi::Opengl::PGLdouble coords);
extern DELPHI_PACKAGE void __stdcall (*glNormalStream3bATI)(unsigned stream, System::Int8 nx, System::Int8 ny, System::Int8 nz);
extern DELPHI_PACKAGE void __stdcall (*glNormalStream3bvATI)(unsigned stream, const Winapi::Opengl::PGLByte coords);
extern DELPHI_PACKAGE void __stdcall (*glNormalStream3sATI)(unsigned stream, short nx, short ny, short nz);
extern DELPHI_PACKAGE void __stdcall (*glNormalStream3svATI)(unsigned stream, const Winapi::Opengl::PGLShort coords);
extern DELPHI_PACKAGE void __stdcall (*glNormalStream3iATI)(unsigned stream, int nx, int ny, int nz);
extern DELPHI_PACKAGE void __stdcall (*glNormalStream3ivATI)(unsigned stream, const Winapi::Opengl::PGLInt coords);
extern DELPHI_PACKAGE void __stdcall (*glNormalStream3fATI)(unsigned stream, float nx, float ny, float nz);
extern DELPHI_PACKAGE void __stdcall (*glNormalStream3fvATI)(unsigned stream, const Winapi::Opengl::PGLfloat coords);
extern DELPHI_PACKAGE void __stdcall (*glNormalStream3dATI)(unsigned stream, double nx, double ny, double nz);
extern DELPHI_PACKAGE void __stdcall (*glNormalStream3dvATI)(unsigned stream, const Winapi::Opengl::PGLdouble coords);
extern DELPHI_PACKAGE void __stdcall (*glClientActiveVertexStreamATI)(unsigned stream);
extern DELPHI_PACKAGE void __stdcall (*glVertexBlendEnviATI)(unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glVertexBlendEnvfATI)(unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glUniformBufferEXT)(unsigned program_, int location, unsigned buffer);
extern DELPHI_PACKAGE int __stdcall (*glGetUniformBufferSizeEXT)(unsigned program_, int location);
extern DELPHI_PACKAGE NativeInt __stdcall (*glGetUniformOffsetEXT)(unsigned program_, int location);
extern DELPHI_PACKAGE void __stdcall (*glBlendColorEXT)(float red, float green, float blue, float alpha);
extern DELPHI_PACKAGE void __stdcall (*glBlendEquationSeparateEXT)(unsigned modeRGB, unsigned modeAlpha);
extern DELPHI_PACKAGE void __stdcall (*glBlendFuncSeparateEXT)(unsigned sfactorRGB, unsigned dfactorRGB, unsigned sfactorAlpha, unsigned dfactorAlpha);
extern DELPHI_PACKAGE void __stdcall (*glBlendEquationEXT)(unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glColorSubTableEXT)(unsigned target, int start, int count, unsigned format, unsigned type_, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glCopyColorSubTableEXT)(unsigned target, int start, int x, int y, int width);
extern DELPHI_PACKAGE void __stdcall (*glLockArraysEXT)(int first, int count);
extern DELPHI_PACKAGE void __stdcall (*glUnlockArraysEXT)(void);
extern DELPHI_PACKAGE void __stdcall (*glConvolutionFilter1DEXT)(unsigned target, unsigned internalformat, int width, unsigned format, unsigned type_, const void * image);
extern DELPHI_PACKAGE void __stdcall (*glConvolutionFilter2DEXT)(unsigned target, unsigned internalformat, int width, int height, unsigned format, unsigned type_, const void * image);
extern DELPHI_PACKAGE void __stdcall (*glConvolutionParameterfEXT)(unsigned target, unsigned pname, float params);
extern DELPHI_PACKAGE void __stdcall (*glConvolutionParameterfvEXT)(unsigned target, unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glConvolutionParameteriEXT)(unsigned target, unsigned pname, int params);
extern DELPHI_PACKAGE void __stdcall (*glConvolutionParameterivEXT)(unsigned target, unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glCopyConvolutionFilter1DEXT)(unsigned target, unsigned internalformat, int x, int y, int width);
extern DELPHI_PACKAGE void __stdcall (*glCopyConvolutionFilter2DEXT)(unsigned target, unsigned internalformat, int x, int y, int width, int height);
extern DELPHI_PACKAGE void __stdcall (*glGetConvolutionFilterEXT)(unsigned target, unsigned format, unsigned type_, void * image);
extern DELPHI_PACKAGE void __stdcall (*glGetConvolutionParameterfvEXT)(unsigned target, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetConvolutionParameterivEXT)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetSeparableFilterEXT)(unsigned target, unsigned format, unsigned type_, void * row, void * column, void * span);
extern DELPHI_PACKAGE void __stdcall (*glSeparableFilter2DEXT)(unsigned target, unsigned internalformat, int width, int height, unsigned format, unsigned type_, const void * row, const void * column);
extern DELPHI_PACKAGE void __stdcall (*glTangent3bEXT)(System::Int8 tx, System::Int8 ty, System::Int8 tz);
extern DELPHI_PACKAGE void __stdcall (*glTangent3bvEXT)(const Winapi::Opengl::PGLByte v);
extern DELPHI_PACKAGE void __stdcall (*glTangent3dEXT)(double tx, double ty, double tz);
extern DELPHI_PACKAGE void __stdcall (*glTangent3dvEXT)(const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glTangent3fEXT)(float tx, float ty, float tz);
extern DELPHI_PACKAGE void __stdcall (*glTangent3fvEXT)(const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glTangent3iEXT)(int tx, int ty, int tz);
extern DELPHI_PACKAGE void __stdcall (*glTangent3ivEXT)(const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glTangent3sEXT)(short tx, short ty, short tz);
extern DELPHI_PACKAGE void __stdcall (*glTangent3svEXT)(const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glBinormal3bEXT)(System::Int8 bx, System::Int8 by, System::Int8 bz);
extern DELPHI_PACKAGE void __stdcall (*glBinormal3bvEXT)(const Winapi::Opengl::PGLByte v);
extern DELPHI_PACKAGE void __stdcall (*glBinormal3dEXT)(double bx, double by, double bz);
extern DELPHI_PACKAGE void __stdcall (*glBinormal3dvEXT)(const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glBinormal3fEXT)(float bx, float by, float bz);
extern DELPHI_PACKAGE void __stdcall (*glBinormal3fvEXT)(const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glBinormal3iEXT)(int bx, int by, int bz);
extern DELPHI_PACKAGE void __stdcall (*glBinormal3ivEXT)(const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glBinormal3sEXT)(short bx, short by, short bz);
extern DELPHI_PACKAGE void __stdcall (*glBinormal3svEXT)(const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glTangentPointerEXT)(unsigned type_, int stride, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glBinormalPointerEXT)(unsigned type_, int stride, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glCopyTexImage1DEXT)(unsigned target, int level, unsigned internalformat, int x, int y, int width, int border);
extern DELPHI_PACKAGE void __stdcall (*glCopyTexImage2DEXT)(unsigned target, int level, unsigned internalformat, int x, int y, int width, int height, int border);
extern DELPHI_PACKAGE void __stdcall (*glCopyTexSubImage1DEXT)(unsigned target, int level, int xoffset, int x, int y, int width);
extern DELPHI_PACKAGE void __stdcall (*glCopyTexSubImage2DEXT)(unsigned target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
extern DELPHI_PACKAGE void __stdcall (*glCopyTexSubImage3DEXT)(unsigned target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
extern DELPHI_PACKAGE void __stdcall (*glCullParameterdvEXT)(unsigned pname, Winapi::Opengl::PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glCullParameterfvEXT)(unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glLabelObjectEXT)(unsigned type_, unsigned object_, int length, const char * label_);
extern DELPHI_PACKAGE void __stdcall (*glGetObjectLabelEXT)(unsigned type_, unsigned object_, int bufSize, Winapi::Opengl::PGLSizei length, char * label_);
extern DELPHI_PACKAGE void __stdcall (*glInsertEventMarkerEXT)(int length, const char * marker);
extern DELPHI_PACKAGE void __stdcall (*glPushGroupMarkerEXT)(int length, const char * marker);
extern DELPHI_PACKAGE void __stdcall (*glPopGroupMarkerEXT)(void);
extern DELPHI_PACKAGE void __stdcall (*glDepthBoundsEXT)(double zmin, double zmax);
extern DELPHI_PACKAGE void __stdcall (*glMatrixLoadfEXT)(unsigned mode, const Winapi::Opengl::PGLfloat m);
extern DELPHI_PACKAGE void __stdcall (*glMatrixLoaddEXT)(unsigned mode, const Winapi::Opengl::PGLdouble m);
extern DELPHI_PACKAGE void __stdcall (*glMatrixMultfEXT)(unsigned mode, const Winapi::Opengl::PGLfloat m);
extern DELPHI_PACKAGE void __stdcall (*glMatrixMultdEXT)(unsigned mode, const Winapi::Opengl::PGLdouble m);
extern DELPHI_PACKAGE void __stdcall (*glMatrixLoadIdentityEXT)(unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glMatrixRotatefEXT)(unsigned mode, float angle, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glMatrixRotatedEXT)(unsigned mode, double angle, double x, double y, double z);
extern DELPHI_PACKAGE void __stdcall (*glMatrixScalefEXT)(unsigned mode, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glMatrixScaledEXT)(unsigned mode, double x, double y, double z);
extern DELPHI_PACKAGE void __stdcall (*glMatrixTranslatefEXT)(unsigned mode, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glMatrixTranslatedEXT)(unsigned mode, double x, double y, double z);
extern DELPHI_PACKAGE void __stdcall (*glMatrixFrustumEXT)(unsigned mode, double left, double right, double bottom, double top, double zNear, double zFar);
extern DELPHI_PACKAGE void __stdcall (*glMatrixOrthoEXT)(unsigned mode, double left, double right, double bottom, double top, double zNear, double zFar);
extern DELPHI_PACKAGE void __stdcall (*glMatrixPopEXT)(unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glMatrixPushEXT)(unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glClientAttribDefaultEXT)(unsigned mask);
extern DELPHI_PACKAGE void __stdcall (*glPushClientAttribDefaultEXT)(unsigned mask);
extern DELPHI_PACKAGE void __stdcall (*glTextureParameterfEXT)(unsigned texture, unsigned target, unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glTextureParameterfvEXT)(unsigned texture, unsigned target, unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glTextureParameteriEXT)(unsigned texture, unsigned target, unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glTextureParameterivEXT)(unsigned texture, unsigned target, unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glTextureImage1DEXT)(unsigned texture, unsigned target, int level, int internalformat, int width, int border, unsigned format, unsigned type_, const void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glTextureImage2DEXT)(unsigned texture, unsigned target, int level, int internalformat, int width, int height, int border, unsigned format, unsigned type_, const void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glTextureSubImage1DEXT)(unsigned texture, unsigned target, int level, int xoffset, int width, unsigned format, unsigned type_, const void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glTextureSubImage2DEXT)(unsigned texture, unsigned target, int level, int xoffset, int yoffset, int width, int height, unsigned format, unsigned type_, const void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glCopyTextureImage1DEXT)(unsigned texture, unsigned target, int level, unsigned internalformat, int x, int y, int width, int border);
extern DELPHI_PACKAGE void __stdcall (*glCopyTextureImage2DEXT)(unsigned texture, unsigned target, int level, unsigned internalformat, int x, int y, int width, int height, int border);
extern DELPHI_PACKAGE void __stdcall (*glCopyTextureSubImage1DEXT)(unsigned texture, unsigned target, int level, int xoffset, int x, int y, int width);
extern DELPHI_PACKAGE void __stdcall (*glCopyTextureSubImage2DEXT)(unsigned texture, unsigned target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
extern DELPHI_PACKAGE void __stdcall (*glGetTextureImageEXT)(unsigned texture, unsigned target, int level, unsigned format, unsigned type_, void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glGetTextureParameterfvEXT)(unsigned texture, unsigned target, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetTextureParameterivEXT)(unsigned texture, unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetTextureLevelParameterfvEXT)(unsigned texture, unsigned target, int level, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetTextureLevelParameterivEXT)(unsigned texture, unsigned target, int level, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glTextureImage3DEXT)(unsigned texture, unsigned target, int level, int internalformat, int width, int height, int depth, int border, unsigned format, unsigned type_, const void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glTextureSubImage3DEXT)(unsigned texture, unsigned target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, unsigned format, unsigned type_, const void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glCopyTextureSubImage3DEXT)(unsigned texture, unsigned target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
extern DELPHI_PACKAGE void __stdcall (*glBindMultiTextureEXT)(unsigned texunit, unsigned target, unsigned texture);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoordPointerEXT)(unsigned texunit, int size, unsigned type_, int stride, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexEnvfEXT)(unsigned texunit, unsigned target, unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexEnvfvEXT)(unsigned texunit, unsigned target, unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexEnviEXT)(unsigned texunit, unsigned target, unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexEnvivEXT)(unsigned texunit, unsigned target, unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexGendEXT)(unsigned texunit, unsigned coord, unsigned pname, double param);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexGendvEXT)(unsigned texunit, unsigned coord, unsigned pname, const Winapi::Opengl::PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexGenfEXT)(unsigned texunit, unsigned coord, unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexGenfvEXT)(unsigned texunit, unsigned coord, unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexGeniEXT)(unsigned texunit, unsigned coord, unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexGenivEXT)(unsigned texunit, unsigned coord, unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetMultiTexEnvfvEXT)(unsigned texunit, unsigned target, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetMultiTexEnvivEXT)(unsigned texunit, unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetMultiTexGendvEXT)(unsigned texunit, unsigned coord, unsigned pname, Winapi::Opengl::PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glGetMultiTexGenfvEXT)(unsigned texunit, unsigned coord, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetMultiTexGenivEXT)(unsigned texunit, unsigned coord, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexParameteriEXT)(unsigned texunit, unsigned target, unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexParameterivEXT)(unsigned texunit, unsigned target, unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexParameterfEXT)(unsigned texunit, unsigned target, unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexParameterfvEXT)(unsigned texunit, unsigned target, unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexImage1DEXT)(unsigned texunit, unsigned target, int level, int internalformat, int width, int border, unsigned format, unsigned type_, const void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexImage2DEXT)(unsigned texunit, unsigned target, int level, int internalformat, int width, int height, int border, unsigned format, unsigned type_, const void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexSubImage1DEXT)(unsigned texunit, unsigned target, int level, int xoffset, int width, unsigned format, unsigned type_, const void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexSubImage2DEXT)(unsigned texunit, unsigned target, int level, int xoffset, int yoffset, int width, int height, unsigned format, unsigned type_, const void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glCopyMultiTexImage1DEXT)(unsigned texunit, unsigned target, int level, unsigned internalformat, int x, int y, int width, int border);
extern DELPHI_PACKAGE void __stdcall (*glCopyMultiTexImage2DEXT)(unsigned texunit, unsigned target, int level, unsigned internalformat, int x, int y, int width, int height, int border);
extern DELPHI_PACKAGE void __stdcall (*glCopyMultiTexSubImage1DEXT)(unsigned texunit, unsigned target, int level, int xoffset, int x, int y, int width);
extern DELPHI_PACKAGE void __stdcall (*glCopyMultiTexSubImage2DEXT)(unsigned texunit, unsigned target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
extern DELPHI_PACKAGE void __stdcall (*glGetMultiTexImageEXT)(unsigned texunit, unsigned target, int level, unsigned format, unsigned type_, void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glGetMultiTexParameterfvEXT)(unsigned texunit, unsigned target, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetMultiTexParameterivEXT)(unsigned texunit, unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetMultiTexLevelParameterfvEXT)(unsigned texunit, unsigned target, int level, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetMultiTexLevelParameterivEXT)(unsigned texunit, unsigned target, int level, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexImage3DEXT)(unsigned texunit, unsigned target, int level, int internalformat, int width, int height, int depth, int border, unsigned format, unsigned type_, const void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexSubImage3DEXT)(unsigned texunit, unsigned target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, unsigned format, unsigned type_, const void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glCopyMultiTexSubImage3DEXT)(unsigned texunit, unsigned target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
extern DELPHI_PACKAGE void __stdcall (*glEnableClientStateIndexedEXT)(unsigned array_, unsigned index);
extern DELPHI_PACKAGE void __stdcall (*glDisableClientStateIndexedEXT)(unsigned array_, unsigned index);
extern DELPHI_PACKAGE void __stdcall (*glGetFloatIndexedvEXT)(unsigned target, unsigned index, Winapi::Opengl::PGLfloat data);
extern DELPHI_PACKAGE void __stdcall (*glGetDoubleIndexedvEXT)(unsigned target, unsigned index, Winapi::Opengl::PGLdouble data);
extern DELPHI_PACKAGE void __stdcall (*glGetPointerIndexedvEXT)(unsigned target, unsigned index, System::PPointer data);
extern DELPHI_PACKAGE void __stdcall (*glEnableIndexedEXT)(unsigned target, unsigned index);
extern DELPHI_PACKAGE void __stdcall (*glDisableIndexedEXT)(unsigned target, unsigned index);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsEnabledIndexedEXT)(unsigned target, unsigned index);
extern DELPHI_PACKAGE void __stdcall (*glGetIntegerIndexedvEXT)(unsigned target, unsigned index, Winapi::Opengl::PGLInt data);
extern DELPHI_PACKAGE void __stdcall (*glGetBooleanIndexedvEXT)(unsigned target, unsigned index, Winapi::Opengl::PGLBoolean data);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTextureImage3DEXT)(unsigned texture, unsigned target, int level, unsigned internalformat, int width, int height, int depth, int border, int imageSize, const void * bits);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTextureImage2DEXT)(unsigned texture, unsigned target, int level, unsigned internalformat, int width, int height, int border, int imageSize, const void * bits);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTextureImage1DEXT)(unsigned texture, unsigned target, int level, unsigned internalformat, int width, int border, int imageSize, const void * bits);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTextureSubImage3DEXT)(unsigned texture, unsigned target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, unsigned format, int imageSize, const void * bits);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTextureSubImage2DEXT)(unsigned texture, unsigned target, int level, int xoffset, int yoffset, int width, int height, unsigned format, int imageSize, const void * bits);
extern DELPHI_PACKAGE void __stdcall (*glCompressedTextureSubImage1DEXT)(unsigned texture, unsigned target, int level, int xoffset, int width, unsigned format, int imageSize, const void * bits);
extern DELPHI_PACKAGE void __stdcall (*glGetCompressedTextureImageEXT)(unsigned texture, unsigned target, int lod, void * img);
extern DELPHI_PACKAGE void __stdcall (*glCompressedMultiTexImage3DEXT)(unsigned texunit, unsigned target, int level, unsigned internalformat, int width, int height, int depth, int border, int imageSize, const void * bits);
extern DELPHI_PACKAGE void __stdcall (*glCompressedMultiTexImage2DEXT)(unsigned texunit, unsigned target, int level, unsigned internalformat, int width, int height, int border, int imageSize, const void * bits);
extern DELPHI_PACKAGE void __stdcall (*glCompressedMultiTexImage1DEXT)(unsigned texunit, unsigned target, int level, unsigned internalformat, int width, int border, int imageSize, const void * bits);
extern DELPHI_PACKAGE void __stdcall (*glCompressedMultiTexSubImage3DEXT)(unsigned texunit, unsigned target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, unsigned format, int imageSize, const void * bits);
extern DELPHI_PACKAGE void __stdcall (*glCompressedMultiTexSubImage2DEXT)(unsigned texunit, unsigned target, int level, int xoffset, int yoffset, int width, int height, unsigned format, int imageSize, const void * bits);
extern DELPHI_PACKAGE void __stdcall (*glCompressedMultiTexSubImage1DEXT)(unsigned texunit, unsigned target, int level, int xoffset, int width, unsigned format, int imageSize, const void * bits);
extern DELPHI_PACKAGE void __stdcall (*glGetCompressedMultiTexImageEXT)(unsigned texunit, unsigned target, int lod, void * img);
extern DELPHI_PACKAGE void __stdcall (*glMatrixLoadTransposefEXT)(unsigned mode, const Winapi::Opengl::PGLfloat m);
extern DELPHI_PACKAGE void __stdcall (*glMatrixLoadTransposedEXT)(unsigned mode, const Winapi::Opengl::PGLdouble m);
extern DELPHI_PACKAGE void __stdcall (*glMatrixMultTransposefEXT)(unsigned mode, const Winapi::Opengl::PGLfloat m);
extern DELPHI_PACKAGE void __stdcall (*glMatrixMultTransposedEXT)(unsigned mode, const Winapi::Opengl::PGLdouble m);
extern DELPHI_PACKAGE void __stdcall (*glNamedBufferDataEXT)(unsigned buffer, NativeInt size, const void * data, unsigned usage);
extern DELPHI_PACKAGE void __stdcall (*glNamedBufferSubDataEXT)(unsigned buffer, NativeInt offset, NativeInt size, const void * data);
extern DELPHI_PACKAGE void * __stdcall (*glMapNamedBufferEXT)(unsigned buffer, unsigned access);
extern DELPHI_PACKAGE System::Byte __stdcall (*glUnmapNamedBufferEXT)(unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glGetNamedBufferParameterivEXT)(unsigned buffer, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetNamedBufferPointervEXT)(unsigned buffer, unsigned pname, System::PPointer params);
extern DELPHI_PACKAGE void __stdcall (*glGetNamedBufferSubDataEXT)(unsigned buffer, NativeInt offset, NativeInt size, void * data);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1fEXT)(unsigned program_, int location, float v0);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2fEXT)(unsigned program_, int location, float v0, float v1);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3fEXT)(unsigned program_, int location, float v0, float v1, float v2);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4fEXT)(unsigned program_, int location, float v0, float v1, float v2, float v3);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1iEXT)(unsigned program_, int location, int v0);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2iEXT)(unsigned program_, int location, int v0, int v1);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3iEXT)(unsigned program_, int location, int v0, int v1, int v2);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4iEXT)(unsigned program_, int location, int v0, int v1, int v2, int v3);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1fvEXT)(unsigned program_, int location, int count, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2fvEXT)(unsigned program_, int location, int count, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3fvEXT)(unsigned program_, int location, int count, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4fvEXT)(unsigned program_, int location, int count, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1ivEXT)(unsigned program_, int location, int count, const Winapi::Opengl::PGLInt value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2ivEXT)(unsigned program_, int location, int count, const Winapi::Opengl::PGLInt value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3ivEXT)(unsigned program_, int location, int count, const Winapi::Opengl::PGLInt value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4ivEXT)(unsigned program_, int location, int count, const Winapi::Opengl::PGLInt value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix2fvEXT)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix3fvEXT)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix4fvEXT)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix2x3fvEXT)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix3x2fvEXT)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix2x4fvEXT)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix4x2fvEXT)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix3x4fvEXT)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix4x3fvEXT)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glTextureBufferEXT)(unsigned texture, unsigned target, unsigned internalformat, unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexBufferEXT)(unsigned texunit, unsigned target, unsigned internalformat, unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glTextureParameterIivEXT)(unsigned texture, unsigned target, unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glTextureParameterIuivEXT)(unsigned texture, unsigned target, unsigned pname, const Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glGetTextureParameterIivEXT)(unsigned texture, unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetTextureParameterIuivEXT)(unsigned texture, unsigned target, unsigned pname, Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexParameterIivEXT)(unsigned texunit, unsigned target, unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexParameterIuivEXT)(unsigned texunit, unsigned target, unsigned pname, const Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glGetMultiTexParameterIivEXT)(unsigned texunit, unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetMultiTexParameterIuivEXT)(unsigned texunit, unsigned target, unsigned pname, Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1uiEXT)(unsigned program_, int location, unsigned v0);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2uiEXT)(unsigned program_, int location, unsigned v0, unsigned v1);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3uiEXT)(unsigned program_, int location, unsigned v0, unsigned v1, unsigned v2);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4uiEXT)(unsigned program_, int location, unsigned v0, unsigned v1, unsigned v2, unsigned v3);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1uivEXT)(unsigned program_, int location, int count, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2uivEXT)(unsigned program_, int location, int count, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3uivEXT)(unsigned program_, int location, int count, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4uivEXT)(unsigned program_, int location, int count, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glNamedProgramLocalParameters4fvEXT)(unsigned program_, unsigned target, unsigned index, int count, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glNamedProgramLocalParameterI4iEXT)(unsigned program_, unsigned target, unsigned index, int x, int y, int z, int w);
extern DELPHI_PACKAGE void __stdcall (*glNamedProgramLocalParameterI4ivEXT)(unsigned program_, unsigned target, unsigned index, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glNamedProgramLocalParametersI4ivEXT)(unsigned program_, unsigned target, unsigned index, int count, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glNamedProgramLocalParameterI4uiEXT)(unsigned program_, unsigned target, unsigned index, unsigned x, unsigned y, unsigned z, unsigned w);
extern DELPHI_PACKAGE void __stdcall (*glNamedProgramLocalParameterI4uivEXT)(unsigned program_, unsigned target, unsigned index, const Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glNamedProgramLocalParametersI4uivEXT)(unsigned program_, unsigned target, unsigned index, int count, const Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glGetNamedProgramLocalParameterIivEXT)(unsigned program_, unsigned target, unsigned index, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetNamedProgramLocalParameterIuivEXT)(unsigned program_, unsigned target, unsigned index, Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glEnableClientStateiEXT)(unsigned array_, unsigned index);
extern DELPHI_PACKAGE void __stdcall (*glDisableClientStateiEXT)(unsigned array_, unsigned index);
extern DELPHI_PACKAGE void __stdcall (*glGetFloati_vEXT)(unsigned pname, unsigned index, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetDoublei_vEXT)(unsigned pname, unsigned index, Winapi::Opengl::PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glGetPointeri_vEXT)(unsigned pname, unsigned index, System::PPointer params);
extern DELPHI_PACKAGE void __stdcall (*glNamedProgramStringEXT)(unsigned program_, unsigned target, unsigned format, int len, const void * string_);
extern DELPHI_PACKAGE void __stdcall (*glNamedProgramLocalParameter4dEXT)(unsigned program_, unsigned target, unsigned index, double x, double y, double z, double w);
extern DELPHI_PACKAGE void __stdcall (*glNamedProgramLocalParameter4dvEXT)(unsigned program_, unsigned target, unsigned index, const Winapi::Opengl::PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glNamedProgramLocalParameter4fEXT)(unsigned program_, unsigned target, unsigned index, float x, float y, float z, float w);
extern DELPHI_PACKAGE void __stdcall (*glNamedProgramLocalParameter4fvEXT)(unsigned program_, unsigned target, unsigned index, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetNamedProgramLocalParameterdvEXT)(unsigned program_, unsigned target, unsigned index, Winapi::Opengl::PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glGetNamedProgramLocalParameterfvEXT)(unsigned program_, unsigned target, unsigned index, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetNamedProgramivEXT)(unsigned program_, unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetNamedProgramStringEXT)(unsigned program_, unsigned target, unsigned pname, void * string_);
extern DELPHI_PACKAGE void __stdcall (*glNamedRenderbufferStorageEXT)(unsigned renderbuffer, unsigned internalformat, int width, int height);
extern DELPHI_PACKAGE void __stdcall (*glGetNamedRenderbufferParameterivEXT)(unsigned renderbuffer, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glNamedRenderbufferStorageMultisampleEXT)(unsigned renderbuffer, int samples, unsigned internalformat, int width, int height);
extern DELPHI_PACKAGE void __stdcall (*glNamedRenderbufferStorageMultisampleCoverageEXT)(unsigned renderbuffer, int coverageSamples, int colorSamples, unsigned internalformat, int width, int height);
extern DELPHI_PACKAGE unsigned __stdcall (*glCheckNamedFramebufferStatusEXT)(unsigned framebuffer, unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glNamedFramebufferTexture1DEXT)(unsigned framebuffer, unsigned attachment, unsigned textarget, unsigned texture, int level);
extern DELPHI_PACKAGE void __stdcall (*glNamedFramebufferTexture2DEXT)(unsigned framebuffer, unsigned attachment, unsigned textarget, unsigned texture, int level);
extern DELPHI_PACKAGE void __stdcall (*glNamedFramebufferTexture3DEXT)(unsigned framebuffer, unsigned attachment, unsigned textarget, unsigned texture, int level, int zoffset);
extern DELPHI_PACKAGE void __stdcall (*glNamedFramebufferRenderbufferEXT)(unsigned framebuffer, unsigned attachment, unsigned renderbuffertarget, unsigned renderbuffer);
extern DELPHI_PACKAGE void __stdcall (*glGetNamedFramebufferAttachmentParameterivEXT)(unsigned framebuffer, unsigned attachment, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGenerateTextureMipmapEXT)(unsigned texture, unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glGenerateMultiTexMipmapEXT)(unsigned texunit, unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferDrawBufferEXT)(unsigned framebuffer, unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferDrawBuffersEXT)(unsigned framebuffer, int n, const Winapi::Opengl::PGLEnum bufs);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferReadBufferEXT)(unsigned framebuffer, unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glGetFramebufferParameterivEXT)(unsigned framebuffer, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glNamedCopyBufferSubDataEXT)(unsigned readBuffer, unsigned writeBuffer, NativeInt readOffset, NativeInt writeOffset, NativeInt size);
extern DELPHI_PACKAGE void __stdcall (*glNamedFramebufferTextureEXT)(unsigned framebuffer, unsigned attachment, unsigned texture, int level);
extern DELPHI_PACKAGE void __stdcall (*glNamedFramebufferTextureLayerEXT)(unsigned framebuffer, unsigned attachment, unsigned texture, int level, int layer);
extern DELPHI_PACKAGE void __stdcall (*glNamedFramebufferTextureFaceEXT)(unsigned framebuffer, unsigned attachment, unsigned texture, int level, unsigned face);
extern DELPHI_PACKAGE void __stdcall (*glTextureRenderbufferEXT)(unsigned texture, unsigned target, unsigned renderbuffer);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexRenderbufferEXT)(unsigned texunit, unsigned target, unsigned renderbuffer);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayVertexOffsetEXT)(unsigned vaobj, unsigned buffer, int size, unsigned type_, int stride, NativeInt offset);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayColorOffsetEXT)(unsigned vaobj, unsigned buffer, int size, unsigned type_, int stride, NativeInt offset);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayEdgeFlagOffsetEXT)(unsigned vaobj, unsigned buffer, int stride, NativeInt offset);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayIndexOffsetEXT)(unsigned vaobj, unsigned buffer, unsigned type_, int stride, NativeInt offset);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayNormalOffsetEXT)(unsigned vaobj, unsigned buffer, unsigned type_, int stride, NativeInt offset);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayTexCoordOffsetEXT)(unsigned vaobj, unsigned buffer, int size, unsigned type_, int stride, NativeInt offset);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayMultiTexCoordOffsetEXT)(unsigned vaobj, unsigned buffer, unsigned texunit, int size, unsigned type_, int stride, NativeInt offset);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayFogCoordOffsetEXT)(unsigned vaobj, unsigned buffer, unsigned type_, int stride, NativeInt offset);
extern DELPHI_PACKAGE void __stdcall (*glVertexArraySecondaryColorOffsetEXT)(unsigned vaobj, unsigned buffer, int size, unsigned type_, int stride, NativeInt offset);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayVertexAttribOffsetEXT)(unsigned vaobj, unsigned buffer, unsigned index, int size, unsigned type_, System::Byte normalized, int stride, NativeInt offset);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayVertexAttribIOffsetEXT)(unsigned vaobj, unsigned buffer, unsigned index, int size, unsigned type_, int stride, NativeInt offset);
extern DELPHI_PACKAGE void __stdcall (*glEnableVertexArrayEXT)(unsigned vaobj, unsigned array_);
extern DELPHI_PACKAGE void __stdcall (*glDisableVertexArrayEXT)(unsigned vaobj, unsigned array_);
extern DELPHI_PACKAGE void __stdcall (*glEnableVertexArrayAttribEXT)(unsigned vaobj, unsigned index);
extern DELPHI_PACKAGE void __stdcall (*glDisableVertexArrayAttribEXT)(unsigned vaobj, unsigned index);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexArrayIntegervEXT)(unsigned vaobj, unsigned pname, Winapi::Opengl::PGLInt param);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexArrayPointervEXT)(unsigned vaobj, unsigned pname, System::PPointer param);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexArrayIntegeri_vEXT)(unsigned vaobj, unsigned index, unsigned pname, Winapi::Opengl::PGLInt param);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexArrayPointeri_vEXT)(unsigned vaobj, unsigned index, unsigned pname, System::PPointer param);
extern DELPHI_PACKAGE void * __stdcall (*glMapNamedBufferRangeEXT)(unsigned buffer, NativeInt offset, NativeInt length, unsigned access);
extern DELPHI_PACKAGE void __stdcall (*glFlushMappedNamedBufferRangeEXT)(unsigned buffer, NativeInt offset, NativeInt length);
extern DELPHI_PACKAGE void __stdcall (*glNamedBufferStorageEXT)(unsigned buffer, NativeInt size, const void * data, unsigned flags);
extern DELPHI_PACKAGE void __stdcall (*glClearNamedBufferDataEXT)(unsigned buffer, unsigned internalformat, unsigned format, unsigned type_, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glClearNamedBufferSubDataEXT)(unsigned buffer, unsigned internalformat, unsigned format, unsigned type_, NativeInt offset, NativeInt size, const void * data);
extern DELPHI_PACKAGE void __stdcall (*glNamedFramebufferParameteriEXT)(unsigned framebuffer, unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glGetNamedFramebufferParameterivEXT)(unsigned framebuffer, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1dEXT)(unsigned program_, int location, double x);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2dEXT)(unsigned program_, int location, double x, double y);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3dEXT)(unsigned program_, int location, double x, double y, double z);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4dEXT)(unsigned program_, int location, double x, double y, double z, double w);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1dvEXT)(unsigned program_, int location, int count, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2dvEXT)(unsigned program_, int location, int count, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3dvEXT)(unsigned program_, int location, int count, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4dvEXT)(unsigned program_, int location, int count, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix2dvEXT)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix3dvEXT)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix4dvEXT)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix2x3dvEXT)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix2x4dvEXT)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix3x2dvEXT)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix3x4dvEXT)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix4x2dvEXT)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformMatrix4x3dvEXT)(unsigned program_, int location, int count, System::Byte transpose, const Winapi::Opengl::PGLdouble value);
extern DELPHI_PACKAGE void __stdcall (*glTextureBufferRangeEXT)(unsigned texture, unsigned target, unsigned internalformat, unsigned buffer, NativeInt offset, NativeInt size);
extern DELPHI_PACKAGE void __stdcall (*glTextureStorage1DEXT)(unsigned texture, unsigned target, int levels, unsigned internalformat, int width);
extern DELPHI_PACKAGE void __stdcall (*glTextureStorage2DEXT)(unsigned texture, unsigned target, int levels, unsigned internalformat, int width, int height);
extern DELPHI_PACKAGE void __stdcall (*glTextureStorage3DEXT)(unsigned texture, unsigned target, int levels, unsigned internalformat, int width, int height, int depth);
extern DELPHI_PACKAGE void __stdcall (*glTextureStorage2DMultisampleEXT)(unsigned texture, unsigned target, int samples, unsigned internalformat, int width, int height, System::Byte fixedsamplelocations);
extern DELPHI_PACKAGE void __stdcall (*glTextureStorage3DMultisampleEXT)(unsigned texture, unsigned target, int samples, unsigned internalformat, int width, int height, int depth, System::Byte fixedsamplelocations);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayBindVertexBufferEXT)(unsigned vaobj, unsigned bindingindex, unsigned buffer, NativeInt offset, int stride);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayVertexAttribFormatEXT)(unsigned vaobj, unsigned attribindex, int size, unsigned type_, System::Byte normalized, unsigned relativeoffset);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayVertexAttribIFormatEXT)(unsigned vaobj, unsigned attribindex, int size, unsigned type_, unsigned relativeoffset);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayVertexAttribLFormatEXT)(unsigned vaobj, unsigned attribindex, int size, unsigned type_, unsigned relativeoffset);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayVertexAttribBindingEXT)(unsigned vaobj, unsigned attribindex, unsigned bindingindex);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayVertexBindingDivisorEXT)(unsigned vaobj, unsigned bindingindex, unsigned divisor);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayVertexAttribLOffsetEXT)(unsigned vaobj, unsigned buffer, unsigned index, int size, unsigned type_, int stride, NativeInt offset);
extern DELPHI_PACKAGE void __stdcall (*glTexturePageCommitmentEXT)(unsigned texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, System::Byte resident);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayVertexAttribDivisorEXT)(unsigned vaobj, unsigned index, unsigned divisor);
extern DELPHI_PACKAGE void __stdcall (*glColorMaskIndexedEXT)(unsigned index, System::Byte r, System::Byte g, System::Byte b, System::Byte a);
extern DELPHI_PACKAGE void __stdcall (*glDrawArraysInstancedEXT)(unsigned mode, int start, int count, int primcount);
extern DELPHI_PACKAGE void __stdcall (*glDrawElementsInstancedEXT)(unsigned mode, int count, unsigned type_, const void * indices, int primcount);
extern DELPHI_PACKAGE void __stdcall (*glDrawRangeElementsEXT)(unsigned mode, unsigned start, unsigned end_, int count, unsigned type_, const void * indices);
extern DELPHI_PACKAGE void __stdcall (*glFogCoordfEXT)(float coord);
extern DELPHI_PACKAGE void __stdcall (*glFogCoordfvEXT)(const Winapi::Opengl::PGLfloat coord);
extern DELPHI_PACKAGE void __stdcall (*glFogCoorddEXT)(double coord);
extern DELPHI_PACKAGE void __stdcall (*glFogCoorddvEXT)(const Winapi::Opengl::PGLdouble coord);
extern DELPHI_PACKAGE void __stdcall (*glFogCoordPointerEXT)(unsigned type_, int stride, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glBlitFramebufferEXT)(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, unsigned mask, unsigned filter);
extern DELPHI_PACKAGE void __stdcall (*glRenderbufferStorageMultisampleEXT)(unsigned target, int samples, unsigned internalformat, int width, int height);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsRenderbufferEXT)(unsigned renderbuffer);
extern DELPHI_PACKAGE void __stdcall (*glBindRenderbufferEXT)(unsigned target, unsigned renderbuffer);
extern DELPHI_PACKAGE void __stdcall (*glDeleteRenderbuffersEXT)(int n, const Winapi::Opengl::PGLuint renderbuffers);
extern DELPHI_PACKAGE void __stdcall (*glGenRenderbuffersEXT)(int n, Winapi::Opengl::PGLuint renderbuffers);
extern DELPHI_PACKAGE void __stdcall (*glRenderbufferStorageEXT)(unsigned target, unsigned internalformat, int width, int height);
extern DELPHI_PACKAGE void __stdcall (*glGetRenderbufferParameterivEXT)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsFramebufferEXT)(unsigned framebuffer);
extern DELPHI_PACKAGE void __stdcall (*glBindFramebufferEXT)(unsigned target, unsigned framebuffer);
extern DELPHI_PACKAGE void __stdcall (*glDeleteFramebuffersEXT)(int n, const Winapi::Opengl::PGLuint framebuffers);
extern DELPHI_PACKAGE void __stdcall (*glGenFramebuffersEXT)(int n, Winapi::Opengl::PGLuint framebuffers);
extern DELPHI_PACKAGE unsigned __stdcall (*glCheckFramebufferStatusEXT)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTexture1DEXT)(unsigned target, unsigned attachment, unsigned textarget, unsigned texture, int level);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTexture2DEXT)(unsigned target, unsigned attachment, unsigned textarget, unsigned texture, int level);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTexture3DEXT)(unsigned target, unsigned attachment, unsigned textarget, unsigned texture, int level, int zoffset);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferRenderbufferEXT)(unsigned target, unsigned attachment, unsigned renderbuffertarget, unsigned renderbuffer);
extern DELPHI_PACKAGE void __stdcall (*glGetFramebufferAttachmentParameterivEXT)(unsigned target, unsigned attachment, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGenerateMipmapEXT)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glProgramParameteriEXT)(unsigned program_, unsigned pname, int value);
extern DELPHI_PACKAGE void __stdcall (*glProgramEnvParameters4fvEXT)(unsigned target, unsigned index, int count, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glProgramLocalParameters4fvEXT)(unsigned target, unsigned index, int count, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetUniformuivEXT)(unsigned program_, int location, Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glBindFragDataLocationEXT)(unsigned program_, unsigned color, const char * name);
extern DELPHI_PACKAGE int __stdcall (*glGetFragDataLocationEXT)(unsigned program_, const char * name);
extern DELPHI_PACKAGE void __stdcall (*glUniform1uiEXT)(int location, unsigned v0);
extern DELPHI_PACKAGE void __stdcall (*glUniform2uiEXT)(int location, unsigned v0, unsigned v1);
extern DELPHI_PACKAGE void __stdcall (*glUniform3uiEXT)(int location, unsigned v0, unsigned v1, unsigned v2);
extern DELPHI_PACKAGE void __stdcall (*glUniform4uiEXT)(int location, unsigned v0, unsigned v1, unsigned v2, unsigned v3);
extern DELPHI_PACKAGE void __stdcall (*glUniform1uivEXT)(int location, int count, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glUniform2uivEXT)(int location, int count, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glUniform3uivEXT)(int location, int count, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glUniform4uivEXT)(int location, int count, const Winapi::Opengl::PGLuint value);
extern DELPHI_PACKAGE void __stdcall (*glGetHistogramEXT)(unsigned target, System::Byte reset, unsigned format, unsigned type_, void * values);
extern DELPHI_PACKAGE void __stdcall (*glGetHistogramParameterfvEXT)(unsigned target, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetHistogramParameterivEXT)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetMinmaxEXT)(unsigned target, System::Byte reset, unsigned format, unsigned type_, void * values);
extern DELPHI_PACKAGE void __stdcall (*glGetMinmaxParameterfvEXT)(unsigned target, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetMinmaxParameterivEXT)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glHistogramEXT)(unsigned target, int width, unsigned internalformat, System::Byte sink);
extern DELPHI_PACKAGE void __stdcall (*glMinmaxEXT)(unsigned target, unsigned internalformat, System::Byte sink);
extern DELPHI_PACKAGE void __stdcall (*glResetHistogramEXT)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glResetMinmaxEXT)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glIndexFuncEXT)(unsigned func, float ref);
extern DELPHI_PACKAGE void __stdcall (*glIndexMaterialEXT)(unsigned face, unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glApplyTextureEXT)(unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glTextureLightEXT)(unsigned pname);
extern DELPHI_PACKAGE void __stdcall (*glTextureMaterialEXT)(unsigned face, unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glMultiDrawArraysEXT)(unsigned mode, const Winapi::Opengl::PGLInt first, const Winapi::Opengl::PGLSizei count, int primcount);
extern DELPHI_PACKAGE void __stdcall (*glMultiDrawElementsEXT)(unsigned mode, const Winapi::Opengl::PGLSizei count, unsigned type_, const System::PPointer indices, int primcount);
extern DELPHI_PACKAGE void __stdcall (*glSampleMaskEXT)(float value, System::Byte invert);
extern DELPHI_PACKAGE void __stdcall (*glSamplePatternEXT)(unsigned pattern);
extern DELPHI_PACKAGE void __stdcall (*glColorTableEXT)(unsigned target, unsigned internalFormat, int width, unsigned format, unsigned type_, const void * table);
extern DELPHI_PACKAGE void __stdcall (*glGetColorTableEXT)(unsigned target, unsigned format, unsigned type_, void * data);
extern DELPHI_PACKAGE void __stdcall (*glGetColorTableParameterivEXT)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetColorTableParameterfvEXT)(unsigned target, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glPixelTransformParameteriEXT)(unsigned target, unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glPixelTransformParameterfEXT)(unsigned target, unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glPixelTransformParameterivEXT)(unsigned target, unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glPixelTransformParameterfvEXT)(unsigned target, unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetPixelTransformParameterivEXT)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetPixelTransformParameterfvEXT)(unsigned target, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glPointParameterfEXT)(unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glPointParameterfvEXT)(unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glPolygonOffsetEXT)(float factor, float bias);
extern DELPHI_PACKAGE void __stdcall (*glProvokingVertexEXT)(unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3bEXT)(System::Int8 red, System::Int8 green, System::Int8 blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3bvEXT)(const Winapi::Opengl::PGLByte v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3dEXT)(double red, double green, double blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3dvEXT)(const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3fEXT)(float red, float green, float blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3fvEXT)(const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3iEXT)(int red, int green, int blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3ivEXT)(const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3sEXT)(short red, short green, short blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3svEXT)(const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3ubEXT)(System::Byte red, System::Byte green, System::Byte blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3ubvEXT)(const Winapi::Opengl::PGLubyte v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3uiEXT)(unsigned red, unsigned green, unsigned blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3uivEXT)(const Winapi::Opengl::PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3usEXT)(System::Word red, System::Word green, System::Word blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3usvEXT)(const Winapi::Opengl::PGLushort v);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColorPointerEXT)(int size, unsigned type_, int stride, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glUseShaderProgramEXT)(unsigned type_, unsigned program_);
extern DELPHI_PACKAGE void __stdcall (*glActiveProgramEXT)(unsigned program_);
extern DELPHI_PACKAGE unsigned __stdcall (*glCreateShaderProgramEXT)(unsigned type_, const char * string_);
extern DELPHI_PACKAGE void __stdcall (*glBindImageTextureEXT)(unsigned index, unsigned texture, int level, System::Byte layered, int layer, unsigned access, int format);
extern DELPHI_PACKAGE void __stdcall (*glMemoryBarrierEXT)(unsigned barriers);
extern DELPHI_PACKAGE void __stdcall (*glStencilClearTagEXT)(int stencilTagBits, unsigned stencilClearTag);
extern DELPHI_PACKAGE void __stdcall (*glActiveStencilFaceEXT)(unsigned face);
extern DELPHI_PACKAGE void __stdcall (*glTexSubImage1DEXT)(unsigned target, int level, int xoffset, int width, unsigned format, unsigned type_, const void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glTexSubImage2DEXT)(unsigned target, int level, int xoffset, int yoffset, int width, int height, unsigned format, unsigned type_, const void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glTexImage3DEXT)(unsigned target, int level, unsigned internalformat, int width, int height, int depth, int border, unsigned format, unsigned type_, const void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glTexSubImage3DEXT)(unsigned target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, unsigned format, unsigned type_, const void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glTexBufferEXT)(unsigned target, unsigned internalformat, unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glTexParameterIivEXT)(unsigned target, unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glTexParameterIuivEXT)(unsigned target, unsigned pname, const Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glGetTexParameterIivEXT)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetTexParameterIuivEXT)(unsigned target, unsigned pname, Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glClearColorIiEXT)(int red, int green, int blue, int alpha);
extern DELPHI_PACKAGE void __stdcall (*glClearColorIuiEXT)(unsigned red, unsigned green, unsigned blue, unsigned alpha);
extern DELPHI_PACKAGE System::Byte __stdcall (*glAreTexturesResidentEXT)(int n, const Winapi::Opengl::PGLuint textures, Winapi::Opengl::PGLBoolean residences);
extern DELPHI_PACKAGE void __stdcall (*glBindTextureEXT)(unsigned target, unsigned texture);
extern DELPHI_PACKAGE void __stdcall (*glDeleteTexturesEXT)(int n, const Winapi::Opengl::PGLuint textures);
extern DELPHI_PACKAGE void __stdcall (*glGenTexturesEXT)(int n, Winapi::Opengl::PGLuint textures);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsTextureEXT)(unsigned texture);
extern DELPHI_PACKAGE void __stdcall (*glPrioritizeTexturesEXT)(int n, const Winapi::Opengl::PGLuint textures, const Winapi::Opengl::PGLclampf priorities);
extern DELPHI_PACKAGE void __stdcall (*glTextureNormalEXT)(unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryObjecti64vEXT)(unsigned id, unsigned pname, PGLint64 params);
extern DELPHI_PACKAGE void __stdcall (*glGetQueryObjectui64vEXT)(unsigned id, unsigned pname, PGLuint64 params);
extern DELPHI_PACKAGE void __stdcall (*glBeginTransformFeedbackEXT)(unsigned primitiveMode);
extern DELPHI_PACKAGE void __stdcall (*glEndTransformFeedbackEXT)(void);
extern DELPHI_PACKAGE void __stdcall (*glBindBufferRangeEXT)(unsigned target, unsigned index, unsigned buffer, NativeInt offset, NativeInt size);
extern DELPHI_PACKAGE void __stdcall (*glBindBufferOffsetEXT)(unsigned target, unsigned index, unsigned buffer, NativeInt offset);
extern DELPHI_PACKAGE void __stdcall (*glBindBufferBaseEXT)(unsigned target, unsigned index, unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glTransformFeedbackVaryingsEXT)(unsigned program_, int count, const PPGLchar varyings, unsigned bufferMode);
extern DELPHI_PACKAGE void __stdcall (*glGetTransformFeedbackVaryingEXT)(unsigned program_, unsigned index, int bufSize, Winapi::Opengl::PGLSizei length, Winapi::Opengl::PGLSizei size, Winapi::Opengl::PGLEnum type_, char * name);
extern DELPHI_PACKAGE void __stdcall (*glArrayElementEXT)(int i);
extern DELPHI_PACKAGE void __stdcall (*glColorPointerEXT)(int size, unsigned type_, int stride, int count, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glDrawArraysEXT)(unsigned mode, int first, int count);
extern DELPHI_PACKAGE void __stdcall (*glEdgeFlagPointerEXT)(int stride, int count, const Winapi::Opengl::PGLBoolean pointer);
extern DELPHI_PACKAGE void __stdcall (*glGetPointervEXT)(unsigned pname, System::PPointer params);
extern DELPHI_PACKAGE void __stdcall (*glIndexPointerEXT)(unsigned type_, int stride, int count, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glNormalPointerEXT)(unsigned type_, int stride, int count, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glTexCoordPointerEXT)(int size, unsigned type_, int stride, int count, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glVertexPointerEXT)(int size, unsigned type_, int stride, int count, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL1dEXT)(unsigned index, double x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL2dEXT)(unsigned index, double x, double y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL3dEXT)(unsigned index, double x, double y, double z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL4dEXT)(unsigned index, double x, double y, double z, double w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL1dvEXT)(unsigned index, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL2dvEXT)(unsigned index, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL3dvEXT)(unsigned index, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL4dvEXT)(unsigned index, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribLPointerEXT)(unsigned index, int size, unsigned type_, int stride, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribLdvEXT)(unsigned index, unsigned pname, Winapi::Opengl::PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glBeginVertexShaderEXT)(void);
extern DELPHI_PACKAGE void __stdcall (*glEndVertexShaderEXT)(void);
extern DELPHI_PACKAGE void __stdcall (*glBindVertexShaderEXT)(unsigned id);
extern DELPHI_PACKAGE unsigned __stdcall (*glGenVertexShadersEXT)(unsigned range);
extern DELPHI_PACKAGE void __stdcall (*glDeleteVertexShaderEXT)(unsigned id);
extern DELPHI_PACKAGE void __stdcall (*glShaderOp1EXT)(unsigned op, unsigned res, unsigned arg1);
extern DELPHI_PACKAGE void __stdcall (*glShaderOp2EXT)(unsigned op, unsigned res, unsigned arg1, unsigned arg2);
extern DELPHI_PACKAGE void __stdcall (*glShaderOp3EXT)(unsigned op, unsigned res, unsigned arg1, unsigned arg2, unsigned arg3);
extern DELPHI_PACKAGE void __stdcall (*glSwizzleEXT)(unsigned res, unsigned in_, unsigned outX, unsigned outY, unsigned outZ, unsigned outW);
extern DELPHI_PACKAGE void __stdcall (*glWriteMaskEXT)(unsigned res, unsigned in_, unsigned outX, unsigned outY, unsigned outZ, unsigned outW);
extern DELPHI_PACKAGE void __stdcall (*glInsertComponentEXT)(unsigned res, unsigned src, unsigned num);
extern DELPHI_PACKAGE void __stdcall (*glExtractComponentEXT)(unsigned res, unsigned src, unsigned num);
extern DELPHI_PACKAGE unsigned __stdcall (*glGenSymbolsEXT)(unsigned datatype, unsigned storagetype, unsigned range, unsigned components);
extern DELPHI_PACKAGE void __stdcall (*glSetInvariantEXT)(unsigned id, unsigned type_, const void * addr);
extern DELPHI_PACKAGE void __stdcall (*glSetLocalConstantEXT)(unsigned id, unsigned type_, const void * addr);
extern DELPHI_PACKAGE void __stdcall (*glVariantbvEXT)(unsigned id, const Winapi::Opengl::PGLByte addr);
extern DELPHI_PACKAGE void __stdcall (*glVariantsvEXT)(unsigned id, const Winapi::Opengl::PGLShort addr);
extern DELPHI_PACKAGE void __stdcall (*glVariantivEXT)(unsigned id, const Winapi::Opengl::PGLInt addr);
extern DELPHI_PACKAGE void __stdcall (*glVariantfvEXT)(unsigned id, const Winapi::Opengl::PGLfloat addr);
extern DELPHI_PACKAGE void __stdcall (*glVariantdvEXT)(unsigned id, const Winapi::Opengl::PGLdouble addr);
extern DELPHI_PACKAGE void __stdcall (*glVariantubvEXT)(unsigned id, const Winapi::Opengl::PGLubyte addr);
extern DELPHI_PACKAGE void __stdcall (*glVariantusvEXT)(unsigned id, const Winapi::Opengl::PGLushort addr);
extern DELPHI_PACKAGE void __stdcall (*glVariantuivEXT)(unsigned id, const Winapi::Opengl::PGLuint addr);
extern DELPHI_PACKAGE void __stdcall (*glVariantPointerEXT)(unsigned id, unsigned type_, unsigned stride, const void * addr);
extern DELPHI_PACKAGE void __stdcall (*glEnableVariantClientStateEXT)(unsigned id);
extern DELPHI_PACKAGE void __stdcall (*glDisableVariantClientStateEXT)(unsigned id);
extern DELPHI_PACKAGE unsigned __stdcall (*glBindLightParameterEXT)(unsigned light, unsigned value);
extern DELPHI_PACKAGE unsigned __stdcall (*glBindMaterialParameterEXT)(unsigned face, unsigned value);
extern DELPHI_PACKAGE unsigned __stdcall (*glBindTexGenParameterEXT)(unsigned unit_, unsigned coord, unsigned value);
extern DELPHI_PACKAGE unsigned __stdcall (*glBindTextureUnitParameterEXT)(unsigned unit_, unsigned value);
extern DELPHI_PACKAGE unsigned __stdcall (*glBindParameterEXT)(unsigned value);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsVariantEnabledEXT)(unsigned id, unsigned cap);
extern DELPHI_PACKAGE void __stdcall (*glGetVariantBooleanvEXT)(unsigned id, unsigned value, Winapi::Opengl::PGLBoolean data);
extern DELPHI_PACKAGE void __stdcall (*glGetVariantIntegervEXT)(unsigned id, unsigned value, Winapi::Opengl::PGLInt data);
extern DELPHI_PACKAGE void __stdcall (*glGetVariantFloatvEXT)(unsigned id, unsigned value, Winapi::Opengl::PGLfloat data);
extern DELPHI_PACKAGE void __stdcall (*glGetVariantPointervEXT)(unsigned id, unsigned value, System::PPointer data);
extern DELPHI_PACKAGE void __stdcall (*glGetInvariantBooleanvEXT)(unsigned id, unsigned value, Winapi::Opengl::PGLBoolean data);
extern DELPHI_PACKAGE void __stdcall (*glGetInvariantIntegervEXT)(unsigned id, unsigned value, Winapi::Opengl::PGLInt data);
extern DELPHI_PACKAGE void __stdcall (*glGetInvariantFloatvEXT)(unsigned id, unsigned value, Winapi::Opengl::PGLfloat data);
extern DELPHI_PACKAGE void __stdcall (*glGetLocalConstantBooleanvEXT)(unsigned id, unsigned value, Winapi::Opengl::PGLBoolean data);
extern DELPHI_PACKAGE void __stdcall (*glGetLocalConstantIntegervEXT)(unsigned id, unsigned value, Winapi::Opengl::PGLInt data);
extern DELPHI_PACKAGE void __stdcall (*glGetLocalConstantFloatvEXT)(unsigned id, unsigned value, Winapi::Opengl::PGLfloat data);
extern DELPHI_PACKAGE void __stdcall (*glVertexWeightfEXT)(float weight);
extern DELPHI_PACKAGE void __stdcall (*glVertexWeightfvEXT)(const Winapi::Opengl::PGLfloat weight);
extern DELPHI_PACKAGE void __stdcall (*glVertexWeightPointerEXT)(int size, unsigned type_, int stride, const void * pointer);
extern DELPHI_PACKAGE int __stdcall (*wglSwapIntervalEXT)(int interval);
extern DELPHI_PACKAGE void * __stdcall (*glImportSyncEXT)(unsigned external_sync_type, NativeInt external_sync, unsigned flags);
extern DELPHI_PACKAGE void __stdcall (*glFrameTerminatorGREMEDY)(void);
extern DELPHI_PACKAGE void __stdcall (*glStringMarkerGREMEDY)(int len, const void * string_);
extern DELPHI_PACKAGE void __stdcall (*glImageTransformParameteriHP)(unsigned target, unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glImageTransformParameterfHP)(unsigned target, unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glImageTransformParameterivHP)(unsigned target, unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glImageTransformParameterfvHP)(unsigned target, unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetImageTransformParameterivHP)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetImageTransformParameterfvHP)(unsigned target, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glMultiModeDrawArraysIBM)(const Winapi::Opengl::PGLEnum mode, const Winapi::Opengl::PGLInt first, const Winapi::Opengl::PGLSizei count, int primcount, int modestride);
extern DELPHI_PACKAGE void __stdcall (*glMultiModeDrawElementsIBM)(const Winapi::Opengl::PGLEnum mode, const Winapi::Opengl::PGLSizei count, unsigned type_, const System::PPointer indices, int primcount, int modestride);
extern DELPHI_PACKAGE void __stdcall (*glFlushStaticDataIBM)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glColorPointerListIBM)(int size, unsigned type_, int stride, const System::PPointer pointer, int ptrstride);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColorPointerListIBM)(int size, unsigned type_, int stride, const System::PPointer pointer, int ptrstride);
extern DELPHI_PACKAGE void __stdcall (*glEdgeFlagPointerListIBM)(int stride, const Winapi::Opengl::PPGLBoolean pointer, int ptrstride);
extern DELPHI_PACKAGE void __stdcall (*glFogCoordPointerListIBM)(unsigned type_, int stride, const System::PPointer pointer, int ptrstride);
extern DELPHI_PACKAGE void __stdcall (*glIndexPointerListIBM)(unsigned type_, int stride, const System::PPointer pointer, int ptrstride);
extern DELPHI_PACKAGE void __stdcall (*glNormalPointerListIBM)(unsigned type_, int stride, const System::PPointer pointer, int ptrstride);
extern DELPHI_PACKAGE void __stdcall (*glTexCoordPointerListIBM)(int size, unsigned type_, int stride, const System::PPointer pointer, int ptrstride);
extern DELPHI_PACKAGE void __stdcall (*glVertexPointerListIBM)(int size, unsigned type_, int stride, const System::PPointer pointer, int ptrstride);
extern DELPHI_PACKAGE void __stdcall (*glBlendFuncSeparateINGR)(unsigned sfactorRGB, unsigned dfactorRGB, unsigned sfactorAlpha, unsigned dfactorAlpha);
extern DELPHI_PACKAGE void __stdcall (*glSyncTextureINTEL)(unsigned texture);
extern DELPHI_PACKAGE void __stdcall (*glUnmapTexture2DINTEL)(unsigned texture, int level);
extern DELPHI_PACKAGE void * __stdcall (*glMapTexture2DINTEL)(unsigned texture, int level, unsigned access, Winapi::Opengl::PGLInt stride, Winapi::Opengl::PGLEnum layout);
extern DELPHI_PACKAGE void __stdcall (*glVertexPointervINTEL)(int size, unsigned type_, const System::PPointer pointer);
extern DELPHI_PACKAGE void __stdcall (*glNormalPointervINTEL)(unsigned type_, const System::PPointer pointer);
extern DELPHI_PACKAGE void __stdcall (*glColorPointervINTEL)(int size, unsigned type_, const System::PPointer pointer);
extern DELPHI_PACKAGE void __stdcall (*glTexCoordPointervINTEL)(int size, unsigned type_, const System::PPointer pointer);
extern DELPHI_PACKAGE void __stdcall (*glResizeBuffersMESA)(void);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2dMESA)(double x, double y);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2dvMESA)(const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2fMESA)(float x, float y);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2fvMESA)(const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2iMESA)(int x, int y);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2ivMESA)(const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2sMESA)(short x, short y);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos2svMESA)(const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3dMESA)(double x, double y, double z);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3dvMESA)(const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3fMESA)(float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3fvMESA)(const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3iMESA)(int x, int y, int z);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3ivMESA)(const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3sMESA)(short x, short y, short z);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos3svMESA)(const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos4dMESA)(double x, double y, double z, double w);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos4dvMESA)(const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos4fMESA)(float x, float y, float z, float w);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos4fvMESA)(const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos4iMESA)(int x, int y, int z, int w);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos4ivMESA)(const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos4sMESA)(short x, short y, short z, short w);
extern DELPHI_PACKAGE void __stdcall (*glWindowPos4svMESA)(const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glBeginConditionalRenderNVX)(unsigned id);
extern DELPHI_PACKAGE void __stdcall (*glEndConditionalRenderNVX)(void);
extern DELPHI_PACKAGE void __stdcall (*glMultiDrawArraysIndirectBindlessNV)(unsigned mode, const void * indirect, int drawCount, int stride, int vertexBufferCount);
extern DELPHI_PACKAGE void __stdcall (*glMultiDrawElementsIndirectBindlessNV)(unsigned mode, unsigned type_, const void * indirect, int drawCount, int stride, int vertexBufferCount);
extern DELPHI_PACKAGE unsigned __int64 __stdcall (*glGetTextureHandleNV)(unsigned texture);
extern DELPHI_PACKAGE unsigned __int64 __stdcall (*glGetTextureSamplerHandleNV)(unsigned texture, unsigned sampler);
extern DELPHI_PACKAGE void __stdcall (*glMakeTextureHandleResidentNV)(unsigned __int64 handle);
extern DELPHI_PACKAGE void __stdcall (*glMakeTextureHandleNonResidentNV)(unsigned __int64 handle);
extern DELPHI_PACKAGE unsigned __int64 __stdcall (*glGetImageHandleNV)(unsigned texture, int level, System::Byte layered, int layer, unsigned format);
extern DELPHI_PACKAGE void __stdcall (*glMakeImageHandleResidentNV)(unsigned __int64 handle, unsigned access);
extern DELPHI_PACKAGE void __stdcall (*glMakeImageHandleNonResidentNV)(unsigned __int64 handle);
extern DELPHI_PACKAGE void __stdcall (*glUniformHandleui64NV)(int location, unsigned __int64 value);
extern DELPHI_PACKAGE void __stdcall (*glUniformHandleui64vNV)(int location, int count, const PGLuint64 value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformHandleui64NV)(unsigned program_, int location, unsigned __int64 value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformHandleui64vNV)(unsigned program_, int location, int count, const PGLuint64 values);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsTextureHandleResidentNV)(unsigned __int64 handle);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsImageHandleResidentNV)(unsigned __int64 handle);
extern DELPHI_PACKAGE void __stdcall (*glBlendParameteriNV)(unsigned pname, int value);
extern DELPHI_PACKAGE void __stdcall (*glBlendBarrierNV)(void);
extern DELPHI_PACKAGE void __stdcall (*glBeginConditionalRenderNV)(unsigned id, unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glEndConditionalRenderNV)(void);
extern DELPHI_PACKAGE void __stdcall (*glCopyImageSubDataNV)(unsigned srcName, unsigned srcTarget, int srcLevel, int srcX, int srcY, int srcZ, unsigned dstName, unsigned dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int width, int height, int depth);
extern DELPHI_PACKAGE void __stdcall (*glDepthRangedNV)(double zNear, double zFar);
extern DELPHI_PACKAGE void __stdcall (*glClearDepthdNV)(double depth);
extern DELPHI_PACKAGE void __stdcall (*glDepthBoundsdNV)(double zmin, double zmax);
extern DELPHI_PACKAGE void __stdcall (*glDrawTextureNV)(unsigned texture, unsigned sampler, float x0, float y0, float x1, float y1, float z, float s0, float t0, float s1, float t1);
extern DELPHI_PACKAGE void __stdcall (*glMapControlPointsNV)(unsigned target, unsigned index, unsigned type_, int ustride, int vstride, int uorder, int vorder, System::Byte packed_, const void * points);
extern DELPHI_PACKAGE void __stdcall (*glMapParameterivNV)(unsigned target, unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glMapParameterfvNV)(unsigned target, unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetMapControlPointsNV)(unsigned target, unsigned index, unsigned type_, int ustride, int vstride, System::Byte packed_, void * points);
extern DELPHI_PACKAGE void __stdcall (*glGetMapParameterivNV)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetMapParameterfvNV)(unsigned target, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetMapAttribParameterivNV)(unsigned target, unsigned index, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetMapAttribParameterfvNV)(unsigned target, unsigned index, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glEvalMapsNV)(unsigned target, unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glGetMultisamplefvNV)(unsigned pname, unsigned index, Winapi::Opengl::PGLfloat val);
extern DELPHI_PACKAGE void __stdcall (*glSampleMaskIndexedNV)(unsigned index, unsigned mask);
extern DELPHI_PACKAGE void __stdcall (*glTexRenderbufferNV)(unsigned target, unsigned renderbuffer);
extern DELPHI_PACKAGE void __stdcall (*glDeleteFencesNV)(int n, const Winapi::Opengl::PGLuint fences);
extern DELPHI_PACKAGE void __stdcall (*glGenFencesNV)(int n, Winapi::Opengl::PGLuint fences);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsFenceNV)(unsigned fence);
extern DELPHI_PACKAGE System::Byte __stdcall (*glTestFenceNV)(unsigned fence);
extern DELPHI_PACKAGE void __stdcall (*glGetFenceivNV)(unsigned fence, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glFinishFenceNV)(unsigned fence);
extern DELPHI_PACKAGE void __stdcall (*glSetFenceNV)(unsigned fence, unsigned condition);
extern DELPHI_PACKAGE void __stdcall (*glProgramNamedParameter4fNV)(unsigned id, int len, const Winapi::Opengl::PGLubyte name, float x, float y, float z, float w);
extern DELPHI_PACKAGE void __stdcall (*glProgramNamedParameter4fvNV)(unsigned id, int len, const Winapi::Opengl::PGLubyte name, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glProgramNamedParameter4dNV)(unsigned id, int len, const Winapi::Opengl::PGLubyte name, double x, double y, double z, double w);
extern DELPHI_PACKAGE void __stdcall (*glProgramNamedParameter4dvNV)(unsigned id, int len, const Winapi::Opengl::PGLubyte name, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramNamedParameterfvNV)(unsigned id, int len, const Winapi::Opengl::PGLubyte name, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramNamedParameterdvNV)(unsigned id, int len, const Winapi::Opengl::PGLubyte name, Winapi::Opengl::PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glRenderbufferStorageMultisampleCoverageNV)(unsigned target, int coverageSamples, int colorSamples, unsigned internalformat, int width, int height);
extern DELPHI_PACKAGE void __stdcall (*glProgramVertexLimitNV)(unsigned target, int limit);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTextureEXT)(unsigned target, unsigned attachment, unsigned texture, int level);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTextureLayerEXT)(unsigned target, unsigned attachment, unsigned texture, int level, int layer);
extern DELPHI_PACKAGE void __stdcall (*glFramebufferTextureFaceEXT)(unsigned target, unsigned attachment, unsigned texture, int level, unsigned face);
extern DELPHI_PACKAGE void __stdcall (*glProgramLocalParameterI4iNV)(unsigned target, unsigned index, int x, int y, int z, int w);
extern DELPHI_PACKAGE void __stdcall (*glProgramLocalParameterI4ivNV)(unsigned target, unsigned index, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glProgramLocalParametersI4ivNV)(unsigned target, unsigned index, int count, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glProgramLocalParameterI4uiNV)(unsigned target, unsigned index, unsigned x, unsigned y, unsigned z, unsigned w);
extern DELPHI_PACKAGE void __stdcall (*glProgramLocalParameterI4uivNV)(unsigned target, unsigned index, const Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glProgramLocalParametersI4uivNV)(unsigned target, unsigned index, int count, const Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glProgramEnvParameterI4iNV)(unsigned target, unsigned index, int x, int y, int z, int w);
extern DELPHI_PACKAGE void __stdcall (*glProgramEnvParameterI4ivNV)(unsigned target, unsigned index, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glProgramEnvParametersI4ivNV)(unsigned target, unsigned index, int count, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glProgramEnvParameterI4uiNV)(unsigned target, unsigned index, unsigned x, unsigned y, unsigned z, unsigned w);
extern DELPHI_PACKAGE void __stdcall (*glProgramEnvParameterI4uivNV)(unsigned target, unsigned index, const Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glProgramEnvParametersI4uivNV)(unsigned target, unsigned index, int count, const Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramLocalParameterIivNV)(unsigned target, unsigned index, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramLocalParameterIuivNV)(unsigned target, unsigned index, Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramEnvParameterIivNV)(unsigned target, unsigned index, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramEnvParameterIuivNV)(unsigned target, unsigned index, Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glProgramSubroutineParametersuivNV)(unsigned target, int count, const Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramSubroutineParameteruivNV)(unsigned target, unsigned index, Winapi::Opengl::PGLuint param);
extern DELPHI_PACKAGE void __stdcall (*glUniform1i64NV)(int location, __int64 x);
extern DELPHI_PACKAGE void __stdcall (*glUniform2i64NV)(int location, __int64 x, __int64 y);
extern DELPHI_PACKAGE void __stdcall (*glUniform3i64NV)(int location, __int64 x, __int64 y, __int64 z);
extern DELPHI_PACKAGE void __stdcall (*glUniform4i64NV)(int location, __int64 x, __int64 y, __int64 z, __int64 w);
extern DELPHI_PACKAGE void __stdcall (*glUniform1i64vNV)(int location, int count, const PGLint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glUniform2i64vNV)(int location, int count, const PGLint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glUniform3i64vNV)(int location, int count, const PGLint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glUniform4i64vNV)(int location, int count, const PGLint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glUniform1ui64NV)(int location, unsigned __int64 x);
extern DELPHI_PACKAGE void __stdcall (*glUniform2ui64NV)(int location, unsigned __int64 x, unsigned __int64 y);
extern DELPHI_PACKAGE void __stdcall (*glUniform3ui64NV)(int location, unsigned __int64 x, unsigned __int64 y, unsigned __int64 z);
extern DELPHI_PACKAGE void __stdcall (*glUniform4ui64NV)(int location, unsigned __int64 x, unsigned __int64 y, unsigned __int64 z, unsigned __int64 w);
extern DELPHI_PACKAGE void __stdcall (*glUniform1ui64vNV)(int location, int count, const PGLuint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glUniform2ui64vNV)(int location, int count, const PGLuint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glUniform3ui64vNV)(int location, int count, const PGLuint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glUniform4ui64vNV)(int location, int count, const PGLuint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glGetUniformi64vNV)(unsigned program_, int location, PGLint64EXT params);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1i64NV)(unsigned program_, int location, __int64 x);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2i64NV)(unsigned program_, int location, __int64 x, __int64 y);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3i64NV)(unsigned program_, int location, __int64 x, __int64 y, __int64 z);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4i64NV)(unsigned program_, int location, __int64 x, __int64 y, __int64 z, __int64 w);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1i64vNV)(unsigned program_, int location, int count, const PGLint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2i64vNV)(unsigned program_, int location, int count, const PGLint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3i64vNV)(unsigned program_, int location, int count, const PGLint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4i64vNV)(unsigned program_, int location, int count, const PGLint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1ui64NV)(unsigned program_, int location, unsigned __int64 x);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2ui64NV)(unsigned program_, int location, unsigned __int64 x, unsigned __int64 y);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3ui64NV)(unsigned program_, int location, unsigned __int64 x, unsigned __int64 y, unsigned __int64 z);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4ui64NV)(unsigned program_, int location, unsigned __int64 x, unsigned __int64 y, unsigned __int64 z, unsigned __int64 w);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform1ui64vNV)(unsigned program_, int location, int count, const PGLuint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform2ui64vNV)(unsigned program_, int location, int count, const PGLuint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform3ui64vNV)(unsigned program_, int location, int count, const PGLuint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniform4ui64vNV)(unsigned program_, int location, int count, const PGLuint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glVertex2hNV)(System::Word x, System::Word y);
extern DELPHI_PACKAGE void __stdcall (*glVertex2hvNV)(const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glVertex3hNV)(System::Word x, System::Word y, System::Word z);
extern DELPHI_PACKAGE void __stdcall (*glVertex3hvNV)(const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glVertex4hNV)(System::Word x, System::Word y, System::Word z, System::Word w);
extern DELPHI_PACKAGE void __stdcall (*glVertex4hvNV)(const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glNormal3hNV)(System::Word nx, System::Word ny, System::Word nz);
extern DELPHI_PACKAGE void __stdcall (*glNormal3hvNV)(const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glColor3hNV)(System::Word red, System::Word green, System::Word blue);
extern DELPHI_PACKAGE void __stdcall (*glColor3hvNV)(const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glColor4hNV)(System::Word red, System::Word green, System::Word blue, System::Word alpha);
extern DELPHI_PACKAGE void __stdcall (*glColor4hvNV)(const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord1hNV)(System::Word s);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord1hvNV)(const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord2hNV)(System::Word s, System::Word t);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord2hvNV)(const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord3hNV)(System::Word s, System::Word t, System::Word r);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord3hvNV)(const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord4hNV)(System::Word s, System::Word t, System::Word r, System::Word q);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord4hvNV)(const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1hNV)(unsigned target, System::Word s);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord1hvNV)(unsigned target, const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2hNV)(unsigned target, System::Word s, System::Word t);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord2hvNV)(unsigned target, const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3hNV)(unsigned target, System::Word s, System::Word t, System::Word r);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord3hvNV)(unsigned target, const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4hNV)(unsigned target, System::Word s, System::Word t, System::Word r, System::Word q);
extern DELPHI_PACKAGE void __stdcall (*glMultiTexCoord4hvNV)(unsigned target, const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glFogCoordhNV)(System::Word fog);
extern DELPHI_PACKAGE void __stdcall (*glFogCoordhvNV)(const PGLhalfNV fog);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3hNV)(System::Word red, System::Word green, System::Word blue);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColor3hvNV)(const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glVertexWeighthNV)(System::Word weight);
extern DELPHI_PACKAGE void __stdcall (*glVertexWeighthvNV)(const PGLhalfNV weight);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1hNV)(unsigned index, System::Word x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1hvNV)(unsigned index, const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2hNV)(unsigned index, System::Word x, System::Word y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2hvNV)(unsigned index, const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3hNV)(unsigned index, System::Word x, System::Word y, System::Word z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3hvNV)(unsigned index, const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4hNV)(unsigned index, System::Word x, System::Word y, System::Word z, System::Word w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4hvNV)(unsigned index, const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs1hvNV)(unsigned index, int n, const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs2hvNV)(unsigned index, int n, const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs3hvNV)(unsigned index, int n, const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs4hvNV)(unsigned index, int n, const PGLhalfNV v);
extern DELPHI_PACKAGE void __stdcall (*glGenOcclusionQueriesNV)(int n, Winapi::Opengl::PGLuint ids);
extern DELPHI_PACKAGE void __stdcall (*glDeleteOcclusionQueriesNV)(int n, const Winapi::Opengl::PGLuint ids);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsOcclusionQueryNV)(unsigned id);
extern DELPHI_PACKAGE void __stdcall (*glBeginOcclusionQueryNV)(unsigned id);
extern DELPHI_PACKAGE void __stdcall (*glEndOcclusionQueryNV)(void);
extern DELPHI_PACKAGE void __stdcall (*glGetOcclusionQueryivNV)(unsigned id, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetOcclusionQueryuivNV)(unsigned id, unsigned pname, Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glProgramBufferParametersfvNV)(unsigned target, unsigned bindingIndex, unsigned wordIndex, int count, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glProgramBufferParametersIivNV)(unsigned target, unsigned bindingIndex, unsigned wordIndex, int count, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glProgramBufferParametersIuivNV)(unsigned target, unsigned bindingIndex, unsigned wordIndex, int count, const Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE unsigned __stdcall (*glGenPathsNV)(int range);
extern DELPHI_PACKAGE void __stdcall (*glDeletePathsNV)(unsigned path, int range);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsPathNV)(unsigned path);
extern DELPHI_PACKAGE void __stdcall (*glPathCommandsNV)(unsigned path, int numCommands, const Winapi::Opengl::PGLubyte commands, int numCoords, unsigned coordType, const void * coords);
extern DELPHI_PACKAGE void __stdcall (*glPathCoordsNV)(unsigned path, int numCoords, unsigned coordType, const void * coords);
extern DELPHI_PACKAGE void __stdcall (*glPathSubCommandsNV)(unsigned path, int commandStart, int commandsToDelete, int numCommands, const Winapi::Opengl::PGLubyte commands, int numCoords, unsigned coordType, const void * coords);
extern DELPHI_PACKAGE void __stdcall (*glPathSubCoordsNV)(unsigned path, int coordStart, int numCoords, unsigned coordType, const void * coords);
extern DELPHI_PACKAGE void __stdcall (*glPathStringNV)(unsigned path, unsigned format, int length, const void * pathString);
extern DELPHI_PACKAGE void __stdcall (*glPathGlyphsNV)(unsigned firstPathName, unsigned fontTarget, const void * fontName, unsigned fontStyle, int numGlyphs, unsigned type_, const void * charcodes, unsigned handleMissingGlyphs, unsigned pathParameterTemplate, float emScale);
extern DELPHI_PACKAGE void __stdcall (*glPathGlyphRangeNV)(unsigned firstPathName, unsigned fontTarget, const void * fontName, unsigned fontStyle, unsigned firstGlyph, int numGlyphs, unsigned handleMissingGlyphs, unsigned pathParameterTemplate, float emScale);
extern DELPHI_PACKAGE void __stdcall (*glWeightPathsNV)(unsigned resultPath, int numPaths, const Winapi::Opengl::PGLuint paths, const Winapi::Opengl::PGLfloat weights);
extern DELPHI_PACKAGE void __stdcall (*glCopyPathNV)(unsigned resultPath, unsigned srcPath);
extern DELPHI_PACKAGE void __stdcall (*glInterpolatePathsNV)(unsigned resultPath, unsigned pathA, unsigned pathB, float weight);
extern DELPHI_PACKAGE void __stdcall (*glTransformPathNV)(unsigned resultPath, unsigned srcPath, unsigned transformType, const Winapi::Opengl::PGLfloat transformValues);
extern DELPHI_PACKAGE void __stdcall (*glPathParameterivNV)(unsigned path, unsigned pname, const Winapi::Opengl::PGLInt value);
extern DELPHI_PACKAGE void __stdcall (*glPathParameteriNV)(unsigned path, unsigned pname, int value);
extern DELPHI_PACKAGE void __stdcall (*glPathParameterfvNV)(unsigned path, unsigned pname, const Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glPathParameterfNV)(unsigned path, unsigned pname, float value);
extern DELPHI_PACKAGE void __stdcall (*glPathDashArrayNV)(unsigned path, int dashCount, const Winapi::Opengl::PGLfloat dashArray);
extern DELPHI_PACKAGE void __stdcall (*glPathStencilFuncNV)(unsigned func, int ref, unsigned mask);
extern DELPHI_PACKAGE void __stdcall (*glPathStencilDepthOffsetNV)(float factor, float units);
extern DELPHI_PACKAGE void __stdcall (*glStencilFillPathNV)(unsigned path, unsigned fillMode, unsigned mask);
extern DELPHI_PACKAGE void __stdcall (*glStencilStrokePathNV)(unsigned path, int reference, unsigned mask);
extern DELPHI_PACKAGE void __stdcall (*glStencilFillPathInstancedNV)(int numPaths, unsigned pathNameType, const void * paths, unsigned pathBase, unsigned fillMode, unsigned mask, unsigned transformType, const Winapi::Opengl::PGLfloat transformValues);
extern DELPHI_PACKAGE void __stdcall (*glStencilStrokePathInstancedNV)(int numPaths, unsigned pathNameType, const void * paths, unsigned pathBase, int reference, unsigned mask, unsigned transformType, const Winapi::Opengl::PGLfloat transformValues);
extern DELPHI_PACKAGE void __stdcall (*glPathCoverDepthFuncNV)(unsigned func);
extern DELPHI_PACKAGE void __stdcall (*glPathColorGenNV)(unsigned color, unsigned genMode, unsigned colorFormat, const Winapi::Opengl::PGLfloat coeffs);
extern DELPHI_PACKAGE void __stdcall (*glPathTexGenNV)(unsigned texCoordSet, unsigned genMode, int components, const Winapi::Opengl::PGLfloat coeffs);
extern DELPHI_PACKAGE void __stdcall (*glPathFogGenNV)(unsigned genMode);
extern DELPHI_PACKAGE void __stdcall (*glCoverFillPathNV)(unsigned path, unsigned coverMode);
extern DELPHI_PACKAGE void __stdcall (*glCoverStrokePathNV)(unsigned path, unsigned coverMode);
extern DELPHI_PACKAGE void __stdcall (*glCoverFillPathInstancedNV)(int numPaths, unsigned pathNameType, const void * paths, unsigned pathBase, unsigned coverMode, unsigned transformType, const Winapi::Opengl::PGLfloat transformValues);
extern DELPHI_PACKAGE void __stdcall (*glCoverStrokePathInstancedNV)(int numPaths, unsigned pathNameType, const void * paths, unsigned pathBase, unsigned coverMode, unsigned transformType, const Winapi::Opengl::PGLfloat transformValues);
extern DELPHI_PACKAGE void __stdcall (*glGetPathParameterivNV)(unsigned path, unsigned pname, Winapi::Opengl::PGLInt value);
extern DELPHI_PACKAGE void __stdcall (*glGetPathParameterfvNV)(unsigned path, unsigned pname, Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glGetPathCommandsNV)(unsigned path, Winapi::Opengl::PGLubyte commands);
extern DELPHI_PACKAGE void __stdcall (*glGetPathCoordsNV)(unsigned path, Winapi::Opengl::PGLfloat coords);
extern DELPHI_PACKAGE void __stdcall (*glGetPathDashArrayNV)(unsigned path, Winapi::Opengl::PGLfloat dashArray);
extern DELPHI_PACKAGE void __stdcall (*glGetPathMetricsNV)(unsigned metricQueryMask, int numPaths, unsigned pathNameType, const void * paths, unsigned pathBase, int stride, Winapi::Opengl::PGLfloat metrics);
extern DELPHI_PACKAGE void __stdcall (*glGetPathMetricRangeNV)(unsigned metricQueryMask, unsigned firstPathName, int numPaths, int stride, Winapi::Opengl::PGLfloat metrics);
extern DELPHI_PACKAGE void __stdcall (*glGetPathSpacingNV)(unsigned pathListMode, int numPaths, unsigned pathNameType, const void * paths, unsigned pathBase, float advanceScale, float kerningScale, unsigned transformType, Winapi::Opengl::PGLfloat returnedSpacing);
extern DELPHI_PACKAGE void __stdcall (*glGetPathColorGenivNV)(unsigned color, unsigned pname, Winapi::Opengl::PGLInt value);
extern DELPHI_PACKAGE void __stdcall (*glGetPathColorGenfvNV)(unsigned color, unsigned pname, Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE void __stdcall (*glGetPathTexGenivNV)(unsigned texCoordSet, unsigned pname, Winapi::Opengl::PGLInt value);
extern DELPHI_PACKAGE void __stdcall (*glGetPathTexGenfvNV)(unsigned texCoordSet, unsigned pname, Winapi::Opengl::PGLfloat value);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsPointInFillPathNV)(unsigned path, unsigned mask, float x, float y);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsPointInStrokePathNV)(unsigned path, float x, float y);
extern DELPHI_PACKAGE float __stdcall (*glGetPathLengthNV)(unsigned path, int startSegment, int numSegments);
extern DELPHI_PACKAGE System::Byte __stdcall (*glPointAlongPathNV)(unsigned path, int startSegment, int numSegments, float distance, Winapi::Opengl::PGLfloat x, Winapi::Opengl::PGLfloat y, Winapi::Opengl::PGLfloat tangentX, Winapi::Opengl::PGLfloat tangentY);
extern DELPHI_PACKAGE void __stdcall (*glPixelDataRangeNV)(unsigned target, int length, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glFlushPixelDataRangeNV)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glPointParameteriNV)(unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glPointParameterivNV)(unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glPresentFrameKeyedNV)(unsigned video_slot, unsigned __int64 minPresentTime, unsigned beginPresentTimeId, unsigned presentDurationId, unsigned type_, unsigned target0, unsigned fill0, unsigned key0, unsigned target1, unsigned fill1, unsigned key1);
extern DELPHI_PACKAGE void __stdcall (*glPresentFrameDualFillNV)(unsigned video_slot, unsigned __int64 minPresentTime, unsigned beginPresentTimeId, unsigned presentDurationId, unsigned type_, unsigned target0, unsigned fill0, unsigned target1, unsigned fill1, unsigned target2, unsigned fill2, unsigned target3, unsigned fill3);
extern DELPHI_PACKAGE void __stdcall (*glGetVideoivNV)(unsigned video_slot, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetVideouivNV)(unsigned video_slot, unsigned pname, Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glGetVideoi64vNV)(unsigned video_slot, unsigned pname, PGLint64EXT params);
extern DELPHI_PACKAGE void __stdcall (*glGetVideoui64vNV)(unsigned video_slot, unsigned pname, PGLuint64EXT params);
extern DELPHI_PACKAGE void __stdcall (*glPrimitiveRestartNV)(void);
extern DELPHI_PACKAGE void __stdcall (*glPrimitiveRestartIndexNV)(unsigned index);
extern DELPHI_PACKAGE void __stdcall (*glCombinerParameterfvNV)(unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glCombinerParameterfNV)(unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glCombinerParameterivNV)(unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glCombinerParameteriNV)(unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glCombinerInputNV)(unsigned stage, unsigned portion, unsigned variable, unsigned input, unsigned mapping, unsigned componentUsage);
extern DELPHI_PACKAGE void __stdcall (*glCombinerOutputNV)(unsigned stage, unsigned portion, unsigned abOutput, unsigned cdOutput, unsigned sumOutput, unsigned scale, unsigned bias, System::Byte abDotProduct, System::Byte cdDotProduct, System::Byte muxSum);
extern DELPHI_PACKAGE void __stdcall (*glFinalCombinerInputNV)(unsigned variable, unsigned input, unsigned mapping, unsigned componentUsage);
extern DELPHI_PACKAGE void __stdcall (*glGetCombinerInputParameterfvNV)(unsigned stage, unsigned portion, unsigned variable, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetCombinerInputParameterivNV)(unsigned stage, unsigned portion, unsigned variable, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetCombinerOutputParameterfvNV)(unsigned stage, unsigned portion, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetCombinerOutputParameterivNV)(unsigned stage, unsigned portion, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetFinalCombinerInputParameterfvNV)(unsigned variable, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetFinalCombinerInputParameterivNV)(unsigned variable, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glCombinerStageParameterfvNV)(unsigned stage, unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetCombinerStageParameterfvNV)(unsigned stage, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glMakeBufferResidentNV)(unsigned target, unsigned access);
extern DELPHI_PACKAGE void __stdcall (*glMakeBufferNonResidentNV)(unsigned target);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsBufferResidentNV)(unsigned target);
extern DELPHI_PACKAGE void __stdcall (*glMakeNamedBufferResidentNV)(unsigned buffer, unsigned access);
extern DELPHI_PACKAGE void __stdcall (*glMakeNamedBufferNonResidentNV)(unsigned buffer);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsNamedBufferResidentNV)(unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glGetBufferParameterui64vNV)(unsigned target, unsigned pname, PGLuint64EXT params);
extern DELPHI_PACKAGE void __stdcall (*glGetNamedBufferParameterui64vNV)(unsigned buffer, unsigned pname, PGLuint64EXT params);
extern DELPHI_PACKAGE void __stdcall (*glGetIntegerui64vNV)(unsigned value, PGLuint64EXT result);
extern DELPHI_PACKAGE void __stdcall (*glUniformui64NV)(int location, unsigned __int64 value);
extern DELPHI_PACKAGE void __stdcall (*glUniformui64vNV)(int location, int count, const PGLuint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glGetUniformui64vNV)(unsigned program_, int location, PGLuint64EXT params);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformui64NV)(unsigned program_, int location, unsigned __int64 value);
extern DELPHI_PACKAGE void __stdcall (*glProgramUniformui64vNV)(unsigned program_, int location, int count, const PGLuint64EXT value);
extern DELPHI_PACKAGE void __stdcall (*glTextureBarrierNV)(void);
extern DELPHI_PACKAGE void __stdcall (*glTexImage2DMultisampleCoverageNV)(unsigned target, int coverageSamples, int colorSamples, int internalFormat, int width, int height, System::Byte fixedSampleLocations);
extern DELPHI_PACKAGE void __stdcall (*glTexImage3DMultisampleCoverageNV)(unsigned target, int coverageSamples, int colorSamples, int internalFormat, int width, int height, int depth, System::Byte fixedSampleLocations);
extern DELPHI_PACKAGE void __stdcall (*glTextureImage2DMultisampleNV)(unsigned texture, unsigned target, int samples, int internalFormat, int width, int height, System::Byte fixedSampleLocations);
extern DELPHI_PACKAGE void __stdcall (*glTextureImage3DMultisampleNV)(unsigned texture, unsigned target, int samples, int internalFormat, int width, int height, int depth, System::Byte fixedSampleLocations);
extern DELPHI_PACKAGE void __stdcall (*glTextureImage2DMultisampleCoverageNV)(unsigned texture, unsigned target, int coverageSamples, int colorSamples, int internalFormat, int width, int height, System::Byte fixedSampleLocations);
extern DELPHI_PACKAGE void __stdcall (*glTextureImage3DMultisampleCoverageNV)(unsigned texture, unsigned target, int coverageSamples, int colorSamples, int internalFormat, int width, int height, int depth, System::Byte fixedSampleLocations);
extern DELPHI_PACKAGE void __stdcall (*glBeginTransformFeedbackNV)(unsigned primitiveMode);
extern DELPHI_PACKAGE void __stdcall (*glEndTransformFeedbackNV)(void);
extern DELPHI_PACKAGE void __stdcall (*glTransformFeedbackAttribsNV)(unsigned count, const Winapi::Opengl::PGLInt attribs, unsigned bufferMode);
extern DELPHI_PACKAGE void __stdcall (*glBindBufferRangeNV)(unsigned target, unsigned index, unsigned buffer, NativeInt offset, NativeInt size);
extern DELPHI_PACKAGE void __stdcall (*glBindBufferOffsetNV)(unsigned target, unsigned index, unsigned buffer, NativeInt offset);
extern DELPHI_PACKAGE void __stdcall (*glBindBufferBaseNV)(unsigned target, unsigned index, unsigned buffer);
extern DELPHI_PACKAGE void __stdcall (*glTransformFeedbackVaryingsNV)(unsigned program_, int count, const Winapi::Opengl::PGLInt locations, unsigned bufferMode);
extern DELPHI_PACKAGE void __stdcall (*glActiveVaryingNV)(unsigned program_, const char * name);
extern DELPHI_PACKAGE int __stdcall (*glGetVaryingLocationNV)(unsigned program_, const char * name);
extern DELPHI_PACKAGE void __stdcall (*glGetActiveVaryingNV)(unsigned program_, unsigned index, int bufSize, Winapi::Opengl::PGLSizei length, Winapi::Opengl::PGLSizei size, Winapi::Opengl::PGLEnum type_, char * name);
extern DELPHI_PACKAGE void __stdcall (*glGetTransformFeedbackVaryingNV)(unsigned program_, unsigned index, Winapi::Opengl::PGLInt location);
extern DELPHI_PACKAGE void __stdcall (*glTransformFeedbackStreamAttribsNV)(int count, const Winapi::Opengl::PGLInt attribs, int nbuffers, const Winapi::Opengl::PGLInt bufstreams, unsigned bufferMode);
extern DELPHI_PACKAGE void __stdcall (*glBindTransformFeedbackNV)(unsigned target, unsigned id);
extern DELPHI_PACKAGE void __stdcall (*glDeleteTransformFeedbacksNV)(int n, const Winapi::Opengl::PGLuint ids);
extern DELPHI_PACKAGE void __stdcall (*glGenTransformFeedbacksNV)(int n, Winapi::Opengl::PGLuint ids);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsTransformFeedbackNV)(unsigned id);
extern DELPHI_PACKAGE void __stdcall (*glPauseTransformFeedbackNV)(void);
extern DELPHI_PACKAGE void __stdcall (*glResumeTransformFeedbackNV)(void);
extern DELPHI_PACKAGE void __stdcall (*glDrawTransformFeedbackNV)(unsigned mode, unsigned id);
extern DELPHI_PACKAGE void __stdcall (*glVDPAUInitNV)(const void * vdpDevice, const void * getProcAddress);
extern DELPHI_PACKAGE void __stdcall (*glVDPAUFiniNV)(void);
extern DELPHI_PACKAGE NativeInt __stdcall (*glVDPAURegisterVideoSurfaceNV)(const void * vdpSurface, unsigned target, int numTextureNames, const Winapi::Opengl::PGLuint textureNames);
extern DELPHI_PACKAGE NativeInt __stdcall (*glVDPAURegisterOutputSurfaceNV)(const void * vdpSurface, unsigned target, int numTextureNames, const Winapi::Opengl::PGLuint textureNames);
extern DELPHI_PACKAGE void __stdcall (*glVDPAUIsSurfaceNV)(NativeInt surface);
extern DELPHI_PACKAGE void __stdcall (*glVDPAUUnregisterSurfaceNV)(NativeInt surface);
extern DELPHI_PACKAGE void __stdcall (*glVDPAUGetSurfaceivNV)(NativeInt surface, unsigned pname, int bufSize, Winapi::Opengl::PGLSizei length, Winapi::Opengl::PGLInt values);
extern DELPHI_PACKAGE void __stdcall (*glVDPAUSurfaceAccessNV)(NativeInt surface, unsigned access);
extern DELPHI_PACKAGE void __stdcall (*glVDPAUMapSurfacesNV)(int numSurfaces, const PGLvdpauSurfaceNV surfaces);
extern DELPHI_PACKAGE void __stdcall (*glVDPAUUnmapSurfacesNV)(int numSurface, const PGLvdpauSurfaceNV surfaces);
extern DELPHI_PACKAGE void __stdcall (*glFlushVertexArrayRangeNV)(void);
extern DELPHI_PACKAGE void __stdcall (*glVertexArrayRangeNV)(int length, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL1i64NV)(unsigned index, __int64 x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL2i64NV)(unsigned index, __int64 x, __int64 y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL3i64NV)(unsigned index, __int64 x, __int64 y, __int64 z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL4i64NV)(unsigned index, __int64 x, __int64 y, __int64 z, __int64 w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL1i64vNV)(unsigned index, const PGLint64EXT v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL2i64vNV)(unsigned index, const PGLint64EXT v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL3i64vNV)(unsigned index, const PGLint64EXT v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL4i64vNV)(unsigned index, const PGLint64EXT v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL1ui64NV)(unsigned index, unsigned __int64 x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL2ui64NV)(unsigned index, unsigned __int64 x, unsigned __int64 y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL3ui64NV)(unsigned index, unsigned __int64 x, unsigned __int64 y, unsigned __int64 z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL4ui64NV)(unsigned index, unsigned __int64 x, unsigned __int64 y, unsigned __int64 z, unsigned __int64 w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL1ui64vNV)(unsigned index, const PGLuint64EXT v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL2ui64vNV)(unsigned index, const PGLuint64EXT v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL3ui64vNV)(unsigned index, const PGLuint64EXT v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribL4ui64vNV)(unsigned index, const PGLuint64EXT v);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribLi64vNV)(unsigned index, unsigned pname, PGLint64EXT params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribLui64vNV)(unsigned index, unsigned pname, PGLuint64EXT params);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribLFormatNV)(unsigned index, int size, unsigned type_, int stride);
extern DELPHI_PACKAGE void __stdcall (*glBufferAddressRangeNV)(unsigned pname, unsigned index, unsigned __int64 address, NativeInt length);
extern DELPHI_PACKAGE void __stdcall (*glVertexFormatNV)(int size, unsigned type_, int stride);
extern DELPHI_PACKAGE void __stdcall (*glNormalFormatNV)(unsigned type_, int stride);
extern DELPHI_PACKAGE void __stdcall (*glColorFormatNV)(int size, unsigned type_, int stride);
extern DELPHI_PACKAGE void __stdcall (*glIndexFormatNV)(unsigned type_, int stride);
extern DELPHI_PACKAGE void __stdcall (*glTexCoordFormatNV)(int size, unsigned type_, int stride);
extern DELPHI_PACKAGE void __stdcall (*glEdgeFlagFormatNV)(int stride);
extern DELPHI_PACKAGE void __stdcall (*glSecondaryColorFormatNV)(int size, unsigned type_, int stride);
extern DELPHI_PACKAGE void __stdcall (*glFogCoordFormatNV)(unsigned type_, int stride);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribFormatNV)(unsigned index, int size, unsigned type_, System::Byte normalized, int stride);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribIFormatNV)(unsigned index, int size, unsigned type_, int stride);
extern DELPHI_PACKAGE void __stdcall (*glGetIntegerui64i_vNV)(unsigned value, unsigned index, PGLuint64EXT result);
extern DELPHI_PACKAGE System::Byte __stdcall (*glAreProgramsResidentNV)(int n, const Winapi::Opengl::PGLuint programs, Winapi::Opengl::PGLBoolean residences);
extern DELPHI_PACKAGE void __stdcall (*glBindProgramNV)(unsigned target, unsigned id);
extern DELPHI_PACKAGE void __stdcall (*glDeleteProgramsNV)(int n, const Winapi::Opengl::PGLuint programs);
extern DELPHI_PACKAGE void __stdcall (*glExecuteProgramNV)(unsigned target, unsigned id, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGenProgramsNV)(int n, Winapi::Opengl::PGLuint programs);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramParameterdvNV)(unsigned target, unsigned index, unsigned pname, Winapi::Opengl::PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramParameterfvNV)(unsigned target, unsigned index, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramivNV)(unsigned id, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetProgramStringNV)(unsigned id, unsigned pname, Winapi::Opengl::PGLubyte program_);
extern DELPHI_PACKAGE void __stdcall (*glGetTrackMatrixivNV)(unsigned target, unsigned address, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribdvNV)(unsigned index, unsigned pname, Winapi::Opengl::PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribfvNV)(unsigned index, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribivNV)(unsigned index, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribPointervNV)(unsigned index, unsigned pname, System::PPointer pointer);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsProgramNV)(unsigned id);
extern DELPHI_PACKAGE void __stdcall (*glLoadProgramNV)(unsigned target, unsigned id, int len, const Winapi::Opengl::PGLubyte program_);
extern DELPHI_PACKAGE void __stdcall (*glProgramParameter4dNV)(unsigned target, unsigned index, double x, double y, double z, double w);
extern DELPHI_PACKAGE void __stdcall (*glProgramParameter4dvNV)(unsigned target, unsigned index, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glProgramParameter4fNV)(unsigned target, unsigned index, float x, float y, float z, float w);
extern DELPHI_PACKAGE void __stdcall (*glProgramParameter4fvNV)(unsigned target, unsigned index, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glProgramParameters4dvNV)(unsigned target, unsigned index, int count, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glProgramParameters4fvNV)(unsigned target, unsigned index, int count, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glRequestResidentProgramsNV)(int n, const Winapi::Opengl::PGLuint programs);
extern DELPHI_PACKAGE void __stdcall (*glTrackMatrixNV)(unsigned target, unsigned address, unsigned matrix, unsigned transform);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribPointerNV)(unsigned index, int fsize, unsigned type_, int stride, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1dNV)(unsigned index, double x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1dvNV)(unsigned index, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1fNV)(unsigned index, float x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1fvNV)(unsigned index, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1sNV)(unsigned index, short x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib1svNV)(unsigned index, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2dNV)(unsigned index, double x, double y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2dvNV)(unsigned index, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2fNV)(unsigned index, float x, float y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2fvNV)(unsigned index, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2sNV)(unsigned index, short x, short y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib2svNV)(unsigned index, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3dNV)(unsigned index, double x, double y, double z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3dvNV)(unsigned index, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3fNV)(unsigned index, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3fvNV)(unsigned index, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3sNV)(unsigned index, short x, short y, short z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib3svNV)(unsigned index, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4dNV)(unsigned index, double x, double y, double z, double w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4dvNV)(unsigned index, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4fNV)(unsigned index, float x, float y, float z, float w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4fvNV)(unsigned index, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4sNV)(unsigned index, short x, short y, short z, short w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4svNV)(unsigned index, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4ubNV)(unsigned index, System::Byte x, System::Byte y, System::Byte z, System::Byte w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttrib4ubvNV)(unsigned index, const Winapi::Opengl::PGLubyte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs1dvNV)(unsigned index, int count, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs1fvNV)(unsigned index, int count, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs1svNV)(unsigned index, int count, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs2dvNV)(unsigned index, int count, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs2fvNV)(unsigned index, int count, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs2svNV)(unsigned index, int count, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs3dvNV)(unsigned index, int count, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs3fvNV)(unsigned index, int count, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs3svNV)(unsigned index, int count, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs4dvNV)(unsigned index, int count, const Winapi::Opengl::PGLdouble v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs4fvNV)(unsigned index, int count, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs4svNV)(unsigned index, int count, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribs4ubvNV)(unsigned index, int count, const Winapi::Opengl::PGLubyte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI1iEXT)(unsigned index, int x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI2iEXT)(unsigned index, int x, int y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI3iEXT)(unsigned index, int x, int y, int z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4iEXT)(unsigned index, int x, int y, int z, int w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI1uiEXT)(unsigned index, unsigned x);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI2uiEXT)(unsigned index, unsigned x, unsigned y);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI3uiEXT)(unsigned index, unsigned x, unsigned y, unsigned z);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4uiEXT)(unsigned index, unsigned x, unsigned y, unsigned z, unsigned w);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI1ivEXT)(unsigned index, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI2ivEXT)(unsigned index, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI3ivEXT)(unsigned index, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4ivEXT)(unsigned index, const Winapi::Opengl::PGLInt v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI1uivEXT)(unsigned index, const Winapi::Opengl::PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI2uivEXT)(unsigned index, const Winapi::Opengl::PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI3uivEXT)(unsigned index, const Winapi::Opengl::PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4uivEXT)(unsigned index, const Winapi::Opengl::PGLuint v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4bvEXT)(unsigned index, const Winapi::Opengl::PGLByte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4svEXT)(unsigned index, const Winapi::Opengl::PGLShort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4ubvEXT)(unsigned index, const Winapi::Opengl::PGLubyte v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribI4usvEXT)(unsigned index, const Winapi::Opengl::PGLushort v);
extern DELPHI_PACKAGE void __stdcall (*glVertexAttribIPointerEXT)(unsigned index, int size, unsigned type_, int stride, const void * pointer);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribIivEXT)(unsigned index, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetVertexAttribIuivEXT)(unsigned index, unsigned pname, Winapi::Opengl::PGLuint params);
extern DELPHI_PACKAGE void __stdcall (*glBeginVideoCaptureNV)(unsigned video_capture_slot);
extern DELPHI_PACKAGE void __stdcall (*glBindVideoCaptureStreamBufferNV)(unsigned video_capture_slot, unsigned stream, unsigned frame_region, NativeInt offset);
extern DELPHI_PACKAGE void __stdcall (*glBindVideoCaptureStreamTextureNV)(unsigned video_capture_slot, unsigned stream, unsigned frame_region, unsigned target, unsigned texture);
extern DELPHI_PACKAGE void __stdcall (*glEndVideoCaptureNV)(unsigned video_capture_slot);
extern DELPHI_PACKAGE void __stdcall (*glGetVideoCaptureivNV)(unsigned video_capture_slot, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetVideoCaptureStreamivNV)(unsigned video_capture_slot, unsigned stream, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetVideoCaptureStreamfvNV)(unsigned video_capture_slot, unsigned stream, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetVideoCaptureStreamdvNV)(unsigned video_capture_slot, unsigned stream, unsigned pname, Winapi::Opengl::PGLdouble params);
extern DELPHI_PACKAGE unsigned __stdcall (*glVideoCaptureNV)(unsigned video_capture_slot, Winapi::Opengl::PGLuint sequence_num, PGLuint64EXT capture_time);
extern DELPHI_PACKAGE void __stdcall (*glVideoCaptureStreamParameterivNV)(unsigned video_capture_slot, unsigned stream, unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glVideoCaptureStreamParameterfvNV)(unsigned video_capture_slot, unsigned stream, unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glVideoCaptureStreamParameterdvNV)(unsigned video_capture_slot, unsigned stream, unsigned pname, const Winapi::Opengl::PGLdouble params);
extern DELPHI_PACKAGE void __stdcall (*glHintPGI)(unsigned target, int mode);
extern DELPHI_PACKAGE void __stdcall (*glDetailTexFuncSGIS)(unsigned target, int n, const Winapi::Opengl::PGLfloat points);
extern DELPHI_PACKAGE void __stdcall (*glGetDetailTexFuncSGIS)(unsigned target, Winapi::Opengl::PGLfloat points);
extern DELPHI_PACKAGE void __stdcall (*glFogFuncSGIS)(int n, const Winapi::Opengl::PGLfloat points);
extern DELPHI_PACKAGE void __stdcall (*glGetFogFuncSGIS)(Winapi::Opengl::PGLfloat points);
extern DELPHI_PACKAGE void __stdcall (*glSampleMaskSGIS)(float value, System::Byte invert);
extern DELPHI_PACKAGE void __stdcall (*glSamplePatternSGIS)(unsigned pattern);
extern DELPHI_PACKAGE void __stdcall (*glPixelTexGenParameteriSGIS)(unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glPixelTexGenParameterivSGIS)(unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glPixelTexGenParameterfSGIS)(unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glPixelTexGenParameterfvSGIS)(unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetPixelTexGenParameterivSGIS)(unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetPixelTexGenParameterfvSGIS)(unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glPointParameterfSGIS)(unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glPointParameterfvSGIS)(unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glSharpenTexFuncSGIS)(unsigned target, int n, const Winapi::Opengl::PGLfloat points);
extern DELPHI_PACKAGE void __stdcall (*glGetSharpenTexFuncSGIS)(unsigned target, Winapi::Opengl::PGLfloat points);
extern DELPHI_PACKAGE void __stdcall (*glTexImage4DSGIS)(unsigned target, int level, unsigned internalformat, int width, int height, int depth, int size4d, int border, unsigned format, unsigned type_, const void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glTexSubImage4DSGIS)(unsigned target, int level, int xoffset, int yoffset, int zoffset, int woffset, int width, int height, int depth, int size4d, unsigned format, unsigned type_, const void * pixels);
extern DELPHI_PACKAGE void __stdcall (*glTextureColorMaskSGIS)(System::Byte red, System::Byte green, System::Byte blue, System::Byte alpha);
extern DELPHI_PACKAGE void __stdcall (*glGetTexFilterFuncSGIS)(unsigned target, unsigned filter, Winapi::Opengl::PGLfloat weights);
extern DELPHI_PACKAGE void __stdcall (*glTexFilterFuncSGIS)(unsigned target, unsigned filter, int n, const Winapi::Opengl::PGLfloat weights);
extern DELPHI_PACKAGE void __stdcall (*glAsyncMarkerSGIX)(unsigned marker);
extern DELPHI_PACKAGE int __stdcall (*glFinishAsyncSGIX)(Winapi::Opengl::PGLuint markerp);
extern DELPHI_PACKAGE int __stdcall (*glPollAsyncSGIX)(Winapi::Opengl::PGLuint markerp);
extern DELPHI_PACKAGE unsigned __stdcall (*glGenAsyncMarkersSGIX)(int range);
extern DELPHI_PACKAGE void __stdcall (*glDeleteAsyncMarkersSGIX)(unsigned marker, int range);
extern DELPHI_PACKAGE System::Byte __stdcall (*glIsAsyncMarkerSGIX)(unsigned marker);
extern DELPHI_PACKAGE void __stdcall (*glFlushRasterSGIX)(void);
extern DELPHI_PACKAGE void __stdcall (*glFragmentColorMaterialSGIX)(unsigned face, unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glFragmentLightfSGIX)(unsigned light, unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glFragmentLightfvSGIX)(unsigned light, unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glFragmentLightiSGIX)(unsigned light, unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glFragmentLightivSGIX)(unsigned light, unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glFragmentLightModelfSGIX)(unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glFragmentLightModelfvSGIX)(unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glFragmentLightModeliSGIX)(unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glFragmentLightModelivSGIX)(unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glFragmentMaterialfSGIX)(unsigned face, unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glFragmentMaterialfvSGIX)(unsigned face, unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glFragmentMaterialiSGIX)(unsigned face, unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glFragmentMaterialivSGIX)(unsigned face, unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetFragmentLightfvSGIX)(unsigned light, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetFragmentLightivSGIX)(unsigned light, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glGetFragmentMaterialfvSGIX)(unsigned face, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetFragmentMaterialivSGIX)(unsigned face, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glLightEnviSGIX)(unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glFrameZoomSGIX)(int factor);
extern DELPHI_PACKAGE void __stdcall (*glIglooInterfaceSGIX)(unsigned pname, const void * params);
extern DELPHI_PACKAGE int __stdcall (*glGetInstrumentsSGIX)(void);
extern DELPHI_PACKAGE void __stdcall (*glInstrumentsBufferSGIX)(int size, Winapi::Opengl::PGLInt buffer);
extern DELPHI_PACKAGE int __stdcall (*glPollInstrumentsSGIX)(Winapi::Opengl::PGLInt marker_p);
extern DELPHI_PACKAGE void __stdcall (*glReadInstrumentsSGIX)(int marker);
extern DELPHI_PACKAGE void __stdcall (*glStartInstrumentsSGIX)(void);
extern DELPHI_PACKAGE void __stdcall (*glStopInstrumentsSGIX)(int marker);
extern DELPHI_PACKAGE void __stdcall (*glGetListParameterfvSGIX)(unsigned list, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetListParameterivSGIX)(unsigned list, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glListParameterfSGIX)(unsigned list, unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glListParameterfvSGIX)(unsigned list, unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glListParameteriSGIX)(unsigned list, unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glListParameterivSGIX)(unsigned list, unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glPixelTexGenSGIX)(unsigned mode);
extern DELPHI_PACKAGE void __stdcall (*glDeformationMap3dSGIX)(unsigned target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, double w1, double w2, int wstride, int worder, const Winapi::Opengl::PGLdouble points);
extern DELPHI_PACKAGE void __stdcall (*glDeformationMap3fSGIX)(unsigned target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, float w1, float w2, int wstride, int worder, const Winapi::Opengl::PGLfloat points);
extern DELPHI_PACKAGE void __stdcall (*glDeformSGIX)(unsigned mask);
extern DELPHI_PACKAGE void __stdcall (*glLoadIdentityDeformationMapSGIX)(unsigned mask);
extern DELPHI_PACKAGE void __stdcall (*glReferencePlaneSGIX)(const Winapi::Opengl::PGLdouble equation);
extern DELPHI_PACKAGE void __stdcall (*glSpriteParameterfSGIX)(unsigned pname, float param);
extern DELPHI_PACKAGE void __stdcall (*glSpriteParameterfvSGIX)(unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glSpriteParameteriSGIX)(unsigned pname, int param);
extern DELPHI_PACKAGE void __stdcall (*glSpriteParameterivSGIX)(unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glTagSampleBufferSGIX)(void);
extern DELPHI_PACKAGE void __stdcall (*glColorTableSGI)(unsigned target, unsigned internalformat, int width, unsigned format, unsigned type_, const void * table);
extern DELPHI_PACKAGE void __stdcall (*glColorTableParameterfvSGI)(unsigned target, unsigned pname, const Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glColorTableParameterivSGI)(unsigned target, unsigned pname, const Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glCopyColorTableSGI)(unsigned target, unsigned internalformat, int x, int y, int width);
extern DELPHI_PACKAGE void __stdcall (*glGetColorTableSGI)(unsigned target, unsigned format, unsigned type_, void * table);
extern DELPHI_PACKAGE void __stdcall (*glGetColorTableParameterfvSGI)(unsigned target, unsigned pname, Winapi::Opengl::PGLfloat params);
extern DELPHI_PACKAGE void __stdcall (*glGetColorTableParameterivSGI)(unsigned target, unsigned pname, Winapi::Opengl::PGLInt params);
extern DELPHI_PACKAGE void __stdcall (*glFinishTextureSUNX)(void);
extern DELPHI_PACKAGE void __stdcall (*glGlobalAlphaFactorbSUN)(System::Int8 factor);
extern DELPHI_PACKAGE void __stdcall (*glGlobalAlphaFactorsSUN)(short factor);
extern DELPHI_PACKAGE void __stdcall (*glGlobalAlphaFactoriSUN)(int factor);
extern DELPHI_PACKAGE void __stdcall (*glGlobalAlphaFactorfSUN)(float factor);
extern DELPHI_PACKAGE void __stdcall (*glGlobalAlphaFactordSUN)(double factor);
extern DELPHI_PACKAGE void __stdcall (*glGlobalAlphaFactorubSUN)(System::Byte factor);
extern DELPHI_PACKAGE void __stdcall (*glGlobalAlphaFactorusSUN)(System::Word factor);
extern DELPHI_PACKAGE void __stdcall (*glGlobalAlphaFactoruiSUN)(unsigned factor);
extern DELPHI_PACKAGE void __stdcall (*glDrawMeshArraysSUN)(unsigned mode, int first, int count, int width);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeuiSUN)(unsigned code);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeusSUN)(System::Word code);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeubSUN)(System::Byte code);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeuivSUN)(const Winapi::Opengl::PGLuint code);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeusvSUN)(const Winapi::Opengl::PGLushort code);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeubvSUN)(const Winapi::Opengl::PGLubyte code);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodePointerSUN)(unsigned type_, int stride, const System::PPointer pointer);
extern DELPHI_PACKAGE void __stdcall (*glColor4ubVertex2fSUN)(System::Byte r, System::Byte g, System::Byte b, System::Byte a, float x, float y);
extern DELPHI_PACKAGE void __stdcall (*glColor4ubVertex2fvSUN)(const Winapi::Opengl::PGLubyte c, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glColor4ubVertex3fSUN)(System::Byte r, System::Byte g, System::Byte b, System::Byte a, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glColor4ubVertex3fvSUN)(const Winapi::Opengl::PGLubyte c, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glColor3fVertex3fSUN)(float r, float g, float b, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glColor3fVertex3fvSUN)(const Winapi::Opengl::PGLfloat c, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glNormal3fVertex3fSUN)(float nx, float ny, float nz, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glNormal3fVertex3fvSUN)(const Winapi::Opengl::PGLfloat n, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glColor4fNormal3fVertex3fSUN)(float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glColor4fNormal3fVertex3fvSUN)(const Winapi::Opengl::PGLfloat c, const Winapi::Opengl::PGLfloat n, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord2fVertex3fSUN)(float s, float t, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord2fVertex3fvSUN)(const Winapi::Opengl::PGLfloat tc, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord4fVertex4fSUN)(float s, float t, float p, float q, float x, float y, float z, float w);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord4fVertex4fvSUN)(const Winapi::Opengl::PGLfloat tc, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord2fColor4ubVertex3fSUN)(float s, float t, System::Byte r, System::Byte g, System::Byte b, System::Byte a, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord2fColor4ubVertex3fvSUN)(const Winapi::Opengl::PGLfloat tc, const Winapi::Opengl::PGLubyte c, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord2fColor3fVertex3fSUN)(float s, float t, float r, float g, float b, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord2fColor3fVertex3fvSUN)(const Winapi::Opengl::PGLfloat tc, const Winapi::Opengl::PGLfloat c, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord2fNormal3fVertex3fSUN)(float s, float t, float nx, float ny, float nz, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord2fNormal3fVertex3fvSUN)(const Winapi::Opengl::PGLfloat tc, const Winapi::Opengl::PGLfloat n, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord2fColor4fNormal3fVertex3fSUN)(float s, float t, float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord2fColor4fNormal3fVertex3fvSUN)(const Winapi::Opengl::PGLfloat tc, const Winapi::Opengl::PGLfloat c, const Winapi::Opengl::PGLfloat n, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord4fColor4fNormal3fVertex4fSUN)(float s, float t, float p, float q, float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z, float w);
extern DELPHI_PACKAGE void __stdcall (*glTexCoord4fColor4fNormal3fVertex4fvSUN)(const Winapi::Opengl::PGLfloat tc, const Winapi::Opengl::PGLfloat c, const Winapi::Opengl::PGLfloat n, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeuiVertex3fSUN)(unsigned rc, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeuiVertex3fvSUN)(const Winapi::Opengl::PGLuint rc, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeuiColor4ubVertex3fSUN)(unsigned rc, System::Byte r, System::Byte g, System::Byte b, System::Byte a, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeuiColor4ubVertex3fvSUN)(const Winapi::Opengl::PGLuint rc, const Winapi::Opengl::PGLubyte c, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeuiColor3fVertex3fSUN)(unsigned rc, float r, float g, float b, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeuiColor3fVertex3fvSUN)(const Winapi::Opengl::PGLuint rc, const Winapi::Opengl::PGLfloat c, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeuiNormal3fVertex3fSUN)(unsigned rc, float nx, float ny, float nz, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeuiNormal3fVertex3fvSUN)(const Winapi::Opengl::PGLuint rc, const Winapi::Opengl::PGLfloat n, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeuiColor4fNormal3fVertex3fSUN)(unsigned rc, float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeuiColor4fNormal3fVertex3fvSUN)(const Winapi::Opengl::PGLuint rc, const Winapi::Opengl::PGLfloat c, const Winapi::Opengl::PGLfloat n, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeuiTexCoord2fVertex3fSUN)(unsigned rc, float s, float t, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeuiTexCoord2fVertex3fvSUN)(const Winapi::Opengl::PGLuint rc, const Winapi::Opengl::PGLfloat tc, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN)(unsigned rc, float s, float t, float nx, float ny, float nz, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN)(const Winapi::Opengl::PGLuint rc, const Winapi::Opengl::PGLfloat tc, const Winapi::Opengl::PGLfloat n, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN)(unsigned rc, float s, float t, float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z);
extern DELPHI_PACKAGE void __stdcall (*glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN)(const Winapi::Opengl::PGLuint rc, const Winapi::Opengl::PGLfloat tc, const Winapi::Opengl::PGLfloat c, const Winapi::Opengl::PGLfloat n, const Winapi::Opengl::PGLfloat v);
extern DELPHI_PACKAGE void __fastcall InitOpenGLext(void);
}	/* namespace Openglext */
}	/* namespace Winapi */
#if !defined(DELPHIHEADER_NO_IMPLICIT_NAMESPACE_USE) && !defined(NO_USING_NAMESPACE_WINAPI_OPENGLEXT)
using namespace Winapi::Openglext;
#endif
#if !defined(DELPHIHEADER_NO_IMPLICIT_NAMESPACE_USE) && !defined(NO_USING_NAMESPACE_WINAPI)
using namespace Winapi;
#endif
#pragma pack(pop)
#pragma option pop

#pragma delphiheader end.
//-- end unit ----------------------------------------------------------------
#endif	// Winapi_OpenglextHPP
