// CodeGear C++Builder
// Copyright (c) 1995, 2021 by Embarcadero Technologies, Inc.
// All rights reserved

// (DO NOT EDIT: machine generated header) 'iOSapi.CoreText.pas' rev: 34.00 (iOS)

#ifndef Iosapi_CoretextHPP
#define Iosapi_CoretextHPP

#pragma delphiheader begin
#pragma option push
#pragma option -w-      // All warnings off
#pragma option -Vx      // Zero-length empty class member 
#pragma pack(push,8)
#include <System.hpp>
#include <SysInit.hpp>
#include <Posix.StdDef.hpp>
#include <Macapi.CoreFoundation.hpp>
#include <iOSapi.CocoaTypes.hpp>
#include <iOSapi.CoreGraphics.hpp>

//-- user supplied -----------------------------------------------------------

namespace Iosapi
{
namespace Coretext
{
//-- forward type declarations -----------------------------------------------
struct CTParagraphStyleSetting;
struct CTRunDelegateCallbacks;
//-- type declarations -------------------------------------------------------
typedef System::Word CTCharacterCollection;

typedef void * CTFontCollectionRef;

typedef void * CTFontDescriptorRef;

typedef void * *PCTFontDescriptorRef;

typedef unsigned CTFontManagerAutoActivationSetting;

typedef unsigned CTFontManagerScope;

typedef unsigned long CTFontOptions;

typedef unsigned CTFontOrientation;

typedef void * CTFontRef;

typedef unsigned CTFontSymbolicTraits;

typedef unsigned CTFontTableOptions;

typedef unsigned CTFontTableTag;

typedef unsigned CTFontUIFontType;

typedef void * CTFrameRef;

typedef void * CTFramesetterRef;

typedef void * CTGlyphInfoRef;

typedef void * CTLineRef;

typedef unsigned CTLineTruncationType;

typedef void * CTParagraphStyleRef;

typedef unsigned CTParagraphStyleSpecifier;

typedef void * CTRunDelegateRef;

typedef void * CTRunRef;

typedef unsigned CTRunStatus;

typedef System::Byte CTTextAlignment;

typedef void * CTTextTabRef;

typedef void * CTTypesetterRef;

typedef long __cdecl (*CTFontCollectionSortDescriptorsCallback)(void * first, void * second, void * refCon);

typedef void __cdecl (*CTRunDelegateDeallocateCallback)(void * refCon);

typedef double __cdecl (*CTRunDelegateGetAscentCallback)(void * refCon);

typedef double __cdecl (*CTRunDelegateGetDescentCallback)(void * refCon);

typedef double __cdecl (*CTRunDelegateGetWidthCallback)(void * refCon);

struct DECLSPEC_DRECORD CTParagraphStyleSetting
{
public:
	unsigned spec;
	unsigned long valueSize;
	void *value;
};


typedef CTParagraphStyleSetting *PCTParagraphStyleSetting;

struct DECLSPEC_DRECORD CTRunDelegateCallbacks
{
public:
	long version;
	CTRunDelegateDeallocateCallback dealloc;
	CTRunDelegateGetAscentCallback getAscent;
	CTRunDelegateGetDescentCallback getDescent;
	CTRunDelegateGetWidthCallback getWidth;
};


typedef CTRunDelegateCallbacks *PCTRunDelegateCallbacks;

//-- var, const, procedure ---------------------------------------------------
static constexpr int cmapFontTableTag = int(0x636d6170);
static constexpr int featureFontTableTag = int(0x66656174);
static constexpr System::Int8 kAbbrevSquaredLigaturesOffSelector = System::Int8(0xf);
static constexpr System::Int8 kAbbrevSquaredLigaturesOnSelector = System::Int8(0xe);
static constexpr System::Int8 kAllCapsSelector = System::Int8(0x1);
static constexpr System::Int8 kAllLowerCaseSelector = System::Int8(0x2);
static constexpr System::Int8 kAllTypeFeaturesOffSelector = System::Int8(0x1);
static constexpr System::Int8 kAllTypeFeaturesOnSelector = System::Int8(0x0);
static constexpr System::Int8 kAllTypographicFeaturesType = System::Int8(0x0);
static constexpr System::Int8 kAnnotationType = System::Int8(0x18);
static constexpr System::Int8 kAsteriskToMultiplyOffSelector = System::Int8(0x3);
static constexpr System::Int8 kAsteriskToMultiplyOnSelector = System::Int8(0x2);
static constexpr System::Int8 kBoxAnnotationSelector = System::Int8(0x1);
static constexpr System::Int8 kCJKItalicRomanOffSelector = System::Int8(0x3);
static constexpr System::Int8 kCJKItalicRomanOnSelector = System::Int8(0x2);
static constexpr System::Int8 kCJKItalicRomanSelector = System::Int8(0x1);
static constexpr System::Int8 kCJKRomanSpacingType = System::Int8(0x67);
static constexpr System::Int8 kCJKSymbolAltFiveSelector = System::Int8(0x5);
static constexpr System::Int8 kCJKSymbolAltFourSelector = System::Int8(0x4);
static constexpr System::Int8 kCJKSymbolAltOneSelector = System::Int8(0x1);
static constexpr System::Int8 kCJKSymbolAltThreeSelector = System::Int8(0x3);
static constexpr System::Int8 kCJKSymbolAltTwoSelector = System::Int8(0x2);
static constexpr System::Int8 kCJKSymbolAlternativesType = System::Int8(0x1d);
static constexpr System::Int8 kCJKVerticalRomanCenteredSelector = System::Int8(0x0);
static constexpr System::Int8 kCJKVerticalRomanHBaselineSelector = System::Int8(0x1);
static constexpr System::Int8 kCJKVerticalRomanPlacementType = System::Int8(0x1f);
static constexpr System::Int8 kCTAdobeCNS1CharacterCollection = System::Int8(0x1);
static constexpr System::Int8 kCTAdobeGB1CharacterCollection = System::Int8(0x2);
static constexpr System::Int8 kCTAdobeJapan1CharacterCollection = System::Int8(0x3);
static constexpr System::Int8 kCTAdobeJapan2CharacterCollection = System::Int8(0x4);
static constexpr System::Int8 kCTAdobeKorea1CharacterCollection = System::Int8(0x5);
static constexpr System::Int8 kCTCenterTextAlignment = System::Int8(0x2);
static constexpr System::Int8 kCTFontAlertHeaderFontType = System::Int8(0x12);
static constexpr System::Int8 kCTFontApplicationFontType = System::Int8(0x9);
static constexpr System::Int8 kCTFontBoldTrait = System::Int8(0x2);
static constexpr int kCTFontClarendonSerifsClass = int(0x40000000);
static constexpr System::Int8 kCTFontClassMaskShift = System::Int8(0x1c);
static constexpr int kCTFontClassMaskTrait = int(-268435456);
static constexpr System::Int8 kCTFontCollectionCopyDefaultOptions = System::Int8(0x0);
static constexpr System::Int8 kCTFontCollectionCopyStandardSort = System::Int8(0x2);
static constexpr System::Int8 kCTFontCollectionCopyUnique = System::Int8(0x1);
static constexpr System::Word kCTFontColorGlyphsTrait = System::Word(0x2000);
static constexpr System::Int8 kCTFontCondensedTrait = System::Int8(0x40);
static constexpr System::Int8 kCTFontControlContentFontType = System::Int8(0x1a);
static constexpr System::Int8 kCTFontDefaultOrientation = System::Int8(0x0);
static constexpr System::Int8 kCTFontEmphasizedSystemDetailFontType = System::Int8(0x14);
static constexpr System::Int8 kCTFontEmphasizedSystemFontType = System::Int8(0x3);
static constexpr System::Int8 kCTFontExpandedTrait = System::Int8(0x20);
static constexpr System::Int8 kCTFontFormatBitmap = System::Int8(0x5);
static constexpr System::Int8 kCTFontFormatOpenTypePostScript = System::Int8(0x1);
static constexpr System::Int8 kCTFontFormatOpenTypeTrueType = System::Int8(0x2);
static constexpr System::Int8 kCTFontFormatPostScript = System::Int8(0x4);
static constexpr System::Int8 kCTFontFormatTrueType = System::Int8(0x3);
static constexpr System::Int8 kCTFontFormatUnrecognized = System::Int8(0x0);
static constexpr int kCTFontFreeformSerifsClass = int(0x70000000);
static constexpr System::Int8 kCTFontHorizontalOrientation = System::Int8(0x1);
static constexpr System::Int8 kCTFontItalicTrait = System::Int8(0x1);
static constexpr System::Int8 kCTFontLabelFontType = System::Int8(0xa);
static constexpr System::Int8 kCTFontManagerAutoActivationDefault = System::Int8(0x0);
static constexpr System::Int8 kCTFontManagerAutoActivationDisabled = System::Int8(0x1);
static constexpr System::Int8 kCTFontManagerAutoActivationEnabled = System::Int8(0x2);
static constexpr System::Int8 kCTFontManagerAutoActivationPromptUser = System::Int8(0x3);
static constexpr System::Int8 kCTFontManagerErrorAlreadyRegistered = System::Int8(0x69);
static constexpr System::Int8 kCTFontManagerErrorFileNotFound = System::Int8(0x65);
static constexpr System::Byte kCTFontManagerErrorInUse = System::Byte(0xca);
static constexpr System::Int8 kCTFontManagerErrorInsufficientPermissions = System::Int8(0x66);
static constexpr System::Int8 kCTFontManagerErrorInvalidFontData = System::Int8(0x68);
static constexpr System::Byte kCTFontManagerErrorNotRegistered = System::Byte(0xc9);
static constexpr System::Byte kCTFontManagerErrorSystemRequired = System::Byte(0xca);
static constexpr System::Int8 kCTFontManagerErrorUnrecognizedFormat = System::Int8(0x67);
static constexpr System::Int8 kCTFontManagerScopeNone = System::Int8(0x0);
static constexpr System::Int8 kCTFontManagerScopeProcess = System::Int8(0x1);
static constexpr System::Int8 kCTFontManagerScopeSession = System::Int8(0x3);
static constexpr System::Int8 kCTFontManagerScopeUser = System::Int8(0x2);
static constexpr System::Int8 kCTFontMenuItemCmdKeyFontType = System::Int8(0xe);
static constexpr System::Int8 kCTFontMenuItemFontType = System::Int8(0xc);
static constexpr System::Int8 kCTFontMenuItemMarkFontType = System::Int8(0xd);
static constexpr System::Int8 kCTFontMenuTitleFontType = System::Int8(0xb);
static constexpr System::Int8 kCTFontMessageFontType = System::Int8(0x17);
static constexpr System::Int8 kCTFontMiniEmphasizedSystemFontType = System::Int8(0x7);
static constexpr System::Int8 kCTFontMiniSystemFontType = System::Int8(0x6);
static constexpr int kCTFontModernSerifsClass = int(0x30000000);
static constexpr System::Word kCTFontMonoSpaceTrait = System::Word(0x400);
static constexpr unsigned kCTFontNoFontType = unsigned(0xffffffff);
static constexpr int kCTFontOldStyleSerifsClass = int(0x10000000);
static constexpr System::Int8 kCTFontOptionsDefault = System::Int8(0x0);
static constexpr System::Int8 kCTFontOptionsPreferSystemFont = System::Int8(0x4);
static constexpr System::Int8 kCTFontOptionsPreventAutoActivation = System::Int8(0x1);
static constexpr int kCTFontOrnamentalsClass = int(-1879048192);
static constexpr System::Int8 kCTFontPaletteFontType = System::Int8(0x18);
static constexpr System::Word kCTFontPriorityComputer = System::Word(0x7530);
static constexpr System::Word kCTFontPriorityDynamic = System::Word(0xc350);
static constexpr System::Word kCTFontPriorityNetwork = System::Word(0x4e20);
static constexpr System::Word kCTFontPriorityProcess = System::Word(0xea60);
static constexpr System::Word kCTFontPrioritySystem = System::Word(0x2710);
static constexpr System::Word kCTFontPriorityUser = System::Word(0x9c40);
static constexpr System::Int8 kCTFontPushButtonFontType = System::Int8(0x10);
static constexpr int kCTFontSansSerifClass = int(-2147483648);
static constexpr int kCTFontScriptsClass = int(-1610612736);
static constexpr int kCTFontSlabSerifsClass = int(0x50000000);
static constexpr System::Int8 kCTFontSmallEmphasizedSystemFontType = System::Int8(0x5);
static constexpr System::Int8 kCTFontSmallSystemFontType = System::Int8(0x4);
static constexpr System::Int8 kCTFontSmallToolbarFontType = System::Int8(0x16);
static constexpr int kCTFontSymbolicClass = int(-1073741824);
static constexpr System::Int8 kCTFontSystemDetailFontType = System::Int8(0x13);
static constexpr System::Int8 kCTFontSystemFontType = System::Int8(0x2);
static constexpr int kCTFontTableAcnt = int(0x61636e74);
static constexpr int kCTFontTableAvar = int(0x61766172);
static constexpr int kCTFontTableBASE = int(0x42415345);
static constexpr int kCTFontTableBdat = int(0x62646174);
static constexpr int kCTFontTableBhed = int(0x62686564);
static constexpr int kCTFontTableBloc = int(0x626c6f63);
static constexpr int kCTFontTableBsln = int(0x62736c6e);
static constexpr int kCTFontTableCFF = int(0x43464620);
static constexpr int kCTFontTableCmap = int(0x636d6170);
static constexpr int kCTFontTableCvar = int(0x63766172);
static constexpr int kCTFontTableCvt = int(0x63767420);
static constexpr int kCTFontTableDSIG = int(0x44534947);
static constexpr int kCTFontTableEBDT = int(0x45424454);
static constexpr int kCTFontTableEBLC = int(0x45424c43);
static constexpr int kCTFontTableEBSC = int(0x45425343);
static constexpr int kCTFontTableFdsc = int(0x66647363);
static constexpr int kCTFontTableFeat = int(0x66656174);
static constexpr int kCTFontTableFmtx = int(0x666d7478);
static constexpr int kCTFontTableFpgm = int(0x6670676d);
static constexpr int kCTFontTableFvar = int(0x66766172);
static constexpr int kCTFontTableGDEF = int(0x47444546);
static constexpr int kCTFontTableGPOS = int(0x47504f53);
static constexpr int kCTFontTableGSUB = int(0x47535542);
static constexpr int kCTFontTableGasp = int(0x67617370);
static constexpr int kCTFontTableGlyf = int(0x676c7966);
static constexpr int kCTFontTableGvar = int(0x67766172);
static constexpr int kCTFontTableHdmx = int(0x68646d78);
static constexpr int kCTFontTableHead = int(0x68656164);
static constexpr int kCTFontTableHhea = int(0x68686561);
static constexpr int kCTFontTableHmtx = int(0x686d7478);
static constexpr int kCTFontTableHsty = int(0x68737479);
static constexpr int kCTFontTableJSTF = int(0x4a535446);
static constexpr int kCTFontTableJust = int(0x6a757374);
static constexpr int kCTFontTableKern = int(0x6b65726e);
static constexpr int kCTFontTableKerx = int(0x6b657278);
static constexpr int kCTFontTableLTSH = int(0x4c545348);
static constexpr int kCTFontTableLcar = int(0x6c636172);
static constexpr int kCTFontTableLoca = int(0x6c6f6361);
static constexpr int kCTFontTableMaxp = int(0x6d617870);
static constexpr int kCTFontTableMort = int(0x6d6f7274);
static constexpr int kCTFontTableMorx = int(0x6d6f7278);
static constexpr int kCTFontTableName = int(0x6e616d65);
static constexpr int kCTFontTableOS2 = int(0x4f532f32);
static constexpr int kCTFontTableOpbd = int(0x6f706264);
static constexpr System::Int8 kCTFontTableOptionExcludeSynthetic = System::Int8(0x1);
static constexpr System::Int8 kCTFontTableOptionNoOptions = System::Int8(0x0);
static constexpr int kCTFontTablePCLT = int(0x50434c54);
static constexpr int kCTFontTablePost = int(0x706f7374);
static constexpr int kCTFontTablePrep = int(0x70726570);
static constexpr int kCTFontTableProp = int(0x70726f70);
static constexpr int kCTFontTableSbit = int(0x73626974);
static constexpr int kCTFontTableSbix = int(0x73626978);
static constexpr int kCTFontTableTrak = int(0x7472616b);
static constexpr int kCTFontTableVDMX = int(0x56444d58);
static constexpr int kCTFontTableVORG = int(0x564f5247);
static constexpr int kCTFontTableVhea = int(0x76686561);
static constexpr int kCTFontTableVmtx = int(0x766d7478);
static constexpr int kCTFontTableZapf = int(0x5a617066);
static constexpr System::Int8 kCTFontToolTipFontType = System::Int8(0x19);
static constexpr System::Int8 kCTFontToolbarFontType = System::Int8(0x15);
static constexpr int kCTFontTransitionalSerifsClass = int(0x20000000);
static constexpr System::Word kCTFontUIOptimizedTrait = System::Word(0x1000);
static constexpr System::Int8 kCTFontUnknownClass = System::Int8(0x0);
static constexpr System::Int8 kCTFontUserFixedPitchFontType = System::Int8(0x1);
static constexpr System::Int8 kCTFontUserFontType = System::Int8(0x0);
static constexpr System::Int8 kCTFontUtilityWindowTitleFontType = System::Int8(0x11);
static constexpr System::Int8 kCTFontVerticalOrientation = System::Int8(0x2);
static constexpr System::Word kCTFontVerticalTrait = System::Word(0x800);
static constexpr System::Int8 kCTFontViewsFontType = System::Int8(0x8);
static constexpr System::Int8 kCTFontWindowTitleFontType = System::Int8(0xf);
static constexpr System::Int8 kCTFramePathFillEvenOdd = System::Int8(0x0);
static constexpr System::Int8 kCTFramePathFillWindingNumber = System::Int8(0x1);
static constexpr System::Int8 kCTFrameProgressionRightToLeft = System::Int8(0x1);
static constexpr System::Int8 kCTFrameProgressionTopToBottom = System::Int8(0x0);
static constexpr System::Int8 kCTIdentityMappingCharacterCollection = System::Int8(0x0);
static constexpr System::Int8 kCTJustifiedTextAlignment = System::Int8(0x3);
static constexpr System::Int8 kCTLeftTextAlignment = System::Int8(0x0);
static constexpr System::Int8 kCTLineBreakByCharWrapping = System::Int8(0x1);
static constexpr System::Int8 kCTLineBreakByClipping = System::Int8(0x2);
static constexpr System::Int8 kCTLineBreakByTruncatingHead = System::Int8(0x3);
static constexpr System::Int8 kCTLineBreakByTruncatingMiddle = System::Int8(0x5);
static constexpr System::Int8 kCTLineBreakByTruncatingTail = System::Int8(0x4);
static constexpr System::Int8 kCTLineBreakByWordWrapping = System::Int8(0x0);
static constexpr System::Int8 kCTLineTruncationEnd = System::Int8(0x1);
static constexpr System::Int8 kCTLineTruncationMiddle = System::Int8(0x2);
static constexpr System::Int8 kCTLineTruncationStart = System::Int8(0x0);
static constexpr System::Int8 kCTNaturalTextAlignment = System::Int8(0x4);
static constexpr System::Int8 kCTParagraphStyleSpecifierAlignment = System::Int8(0x0);
static constexpr System::Int8 kCTParagraphStyleSpecifierBaseWritingDirection = System::Int8(0xd);
static constexpr System::Int8 kCTParagraphStyleSpecifierCount = System::Int8(0x11);
static constexpr System::Int8 kCTParagraphStyleSpecifierDefaultTabInterval = System::Int8(0x5);
static constexpr System::Int8 kCTParagraphStyleSpecifierFirstLineHeadIndent = System::Int8(0x1);
static constexpr System::Int8 kCTParagraphStyleSpecifierHeadIndent = System::Int8(0x2);
static constexpr System::Int8 kCTParagraphStyleSpecifierLineBreakMode = System::Int8(0x6);
static constexpr System::Int8 kCTParagraphStyleSpecifierLineHeightMultiple = System::Int8(0x7);
static constexpr System::Int8 kCTParagraphStyleSpecifierLineSpacing = System::Int8(0xa);
static constexpr System::Int8 kCTParagraphStyleSpecifierLineSpacingAdjustment = System::Int8(0x10);
static constexpr System::Int8 kCTParagraphStyleSpecifierMaximumLineHeight = System::Int8(0x8);
static constexpr System::Int8 kCTParagraphStyleSpecifierMaximumLineSpacing = System::Int8(0xe);
static constexpr System::Int8 kCTParagraphStyleSpecifierMinimumLineHeight = System::Int8(0x9);
static constexpr System::Int8 kCTParagraphStyleSpecifierMinimumLineSpacing = System::Int8(0xf);
static constexpr System::Int8 kCTParagraphStyleSpecifierParagraphSpacing = System::Int8(0xb);
static constexpr System::Int8 kCTParagraphStyleSpecifierParagraphSpacingBefore = System::Int8(0xc);
static constexpr System::Int8 kCTParagraphStyleSpecifierTabStops = System::Int8(0x4);
static constexpr System::Int8 kCTParagraphStyleSpecifierTailIndent = System::Int8(0x3);
static constexpr System::Int8 kCTRightTextAlignment = System::Int8(0x1);
static constexpr System::Int8 kCTRunDelegateCurrentVersion = System::Int8(0x1);
static constexpr System::Int8 kCTRunDelegateVersion1 = System::Int8(0x1);
static constexpr System::Int8 kCTRunStatusHasNonIdentityMatrix = System::Int8(0x4);
static constexpr System::Int8 kCTRunStatusNoStatus = System::Int8(0x0);
static constexpr System::Int8 kCTRunStatusNonMonotonic = System::Int8(0x2);
static constexpr System::Int8 kCTRunStatusRightToLeft = System::Int8(0x1);
static constexpr System::Word kCTUnderlinePatternDash = System::Word(0x200);
static constexpr System::Word kCTUnderlinePatternDashDot = System::Word(0x300);
static constexpr System::Word kCTUnderlinePatternDashDotDot = System::Word(0x400);
static constexpr System::Word kCTUnderlinePatternDot = System::Word(0x100);
static constexpr System::Int8 kCTUnderlinePatternSolid = System::Int8(0x0);
static constexpr System::Int8 kCTUnderlineStyleDouble = System::Int8(0x9);
static constexpr System::Int8 kCTUnderlineStyleNone = System::Int8(0x0);
static constexpr System::Int8 kCTUnderlineStyleSingle = System::Int8(0x1);
static constexpr System::Int8 kCTUnderlineStyleThick = System::Int8(0x2);
static constexpr int kCTVersionNumber10_5 = int(0x20000);
static constexpr int kCTVersionNumber10_5_2 = int(0x20001);
static constexpr int kCTVersionNumber10_5_3 = int(0x20002);
static constexpr int kCTVersionNumber10_5_5 = int(0x20003);
static constexpr int kCTVersionNumber10_6 = int(0x30000);
static constexpr int kCTVersionNumber10_7 = int(0x40000);
static constexpr System::Int8 kCTWritingDirectionLeftToRight = System::Int8(0x0);
static constexpr System::Int8 kCTWritingDirectionNatural = System::Int8(-1);
static constexpr System::Int8 kCTWritingDirectionRightToLeft = System::Int8(0x1);
static constexpr System::Int8 kCanonicalCompositionOffSelector = System::Int8(0x1);
static constexpr System::Int8 kCanonicalCompositionOnSelector = System::Int8(0x0);
static constexpr System::Int8 kCharacterAlternativesType = System::Int8(0x11);
static constexpr System::Int8 kCharacterShapeType = System::Int8(0x14);
static constexpr System::Int8 kCircleAnnotationSelector = System::Int8(0x3);
static constexpr System::Int8 kCommonLigaturesOffSelector = System::Int8(0x3);
static constexpr System::Int8 kCommonLigaturesOnSelector = System::Int8(0x2);
static constexpr System::Int8 kCompatibilityCompositionOffSelector = System::Int8(0x3);
static constexpr System::Int8 kCompatibilityCompositionOnSelector = System::Int8(0x2);
static constexpr System::Int8 kCursiveConnectionType = System::Int8(0x2);
static constexpr System::Int8 kCursiveSelector = System::Int8(0x2);
static constexpr System::Int8 kDecomposeDiacriticsSelector = System::Int8(0x2);
static constexpr System::Int8 kDecorativeBordersSelector = System::Int8(0x4);
static constexpr System::Int8 kDefaultCJKRomanSelector = System::Int8(0x2);
static constexpr System::Int8 kDesignComplexityType = System::Int8(0x12);
static constexpr System::Int8 kDesignLevel1Selector = System::Int8(0x0);
static constexpr System::Int8 kDesignLevel2Selector = System::Int8(0x1);
static constexpr System::Int8 kDesignLevel3Selector = System::Int8(0x2);
static constexpr System::Int8 kDesignLevel4Selector = System::Int8(0x3);
static constexpr System::Int8 kDesignLevel5Selector = System::Int8(0x4);
static constexpr System::Int8 kDiacriticsType = System::Int8(0x9);
static constexpr System::Int8 kDiagonalFractionsSelector = System::Int8(0x2);
static constexpr System::Int8 kDiamondAnnotationSelector = System::Int8(0x8);
static constexpr System::Int8 kDingbatsSelector = System::Int8(0x1);
static constexpr System::Int8 kDiphthongLigaturesOffSelector = System::Int8(0xb);
static constexpr System::Int8 kDiphthongLigaturesOnSelector = System::Int8(0xa);
static constexpr System::Int8 kDisplayTextSelector = System::Int8(0x1);
static constexpr System::Int8 kEngravedTextSelector = System::Int8(0x2);
static constexpr System::Int8 kExpertCharactersSelector = System::Int8(0xa);
static constexpr System::Int8 kExponentsOffSelector = System::Int8(0x9);
static constexpr System::Int8 kExponentsOnSelector = System::Int8(0x8);
static constexpr System::Int8 kFleuronsSelector = System::Int8(0x3);
static constexpr System::Int8 kFontAlbanianLanguage = System::Int8(0x24);
static constexpr System::Int8 kFontAmharicLanguage = System::Int8(0x55);
static constexpr System::Int8 kFontAmharicScript = System::Int8(0x1c);
static constexpr System::Int8 kFontArabicLanguage = System::Int8(0xc);
static constexpr System::Int8 kFontArabicScript = System::Int8(0x4);
static constexpr System::Int8 kFontArmenianLanguage = System::Int8(0x33);
static constexpr System::Int8 kFontArmenianScript = System::Int8(0x18);
static constexpr System::Int8 kFontAssameseLanguage = System::Int8(0x44);
static constexpr System::Byte kFontAymaraLanguage = System::Byte(0x86);
static constexpr System::Int8 kFontAzerbaijanArLanguage = System::Int8(0x32);
static constexpr System::Int8 kFontAzerbaijaniLanguage = System::Int8(0x31);
static constexpr System::Byte kFontBasqueLanguage = System::Byte(0x81);
static constexpr System::Int8 kFontBengaliLanguage = System::Int8(0x43);
static constexpr System::Int8 kFontBengaliScript = System::Int8(0xd);
static constexpr System::Int8 kFontBulgarianLanguage = System::Int8(0x2c);
static constexpr System::Int8 kFontBurmeseLanguage = System::Int8(0x4d);
static constexpr System::Int8 kFontBurmeseScript = System::Int8(0x13);
static constexpr System::Int8 kFontByelorussianLanguage = System::Int8(0x2e);
static constexpr System::Byte kFontCatalanLanguage = System::Byte(0x82);
static constexpr System::Int8 kFontChewaLanguage = System::Int8(0x5c);
static constexpr System::Int8 kFontChineseScript = System::Int8(0x2);
static constexpr System::Int8 kFontCopyrightName = System::Int8(0x0);
static constexpr System::Int8 kFontCroatianLanguage = System::Int8(0x12);
static constexpr System::Int8 kFontCustom16BitScript = System::Int8(0x2);
static constexpr System::Int8 kFontCustom816BitScript = System::Int8(0x1);
static constexpr System::Int8 kFontCustom8BitScript = System::Int8(0x0);
static constexpr System::Int8 kFontCustomPlatform = System::Int8(0x4);
static constexpr System::Int8 kFontCyrillicScript = System::Int8(0x7);
static constexpr System::Int8 kFontCzechLanguage = System::Int8(0x26);
static constexpr System::Int8 kFontDanishLanguage = System::Int8(0x7);
static constexpr System::Int8 kFontDescriptionName = System::Int8(0xa);
static constexpr System::Int8 kFontDesignerName = System::Int8(0x9);
static constexpr System::Int8 kFontDesignerURLName = System::Int8(0xc);
static constexpr System::Int8 kFontDevanagariScript = System::Int8(0x9);
static constexpr System::Int8 kFontDutchLanguage = System::Int8(0x4);
static constexpr System::Byte kFontDzongkhaLanguage = System::Byte(0x89);
static constexpr System::Int8 kFontEastEuropeanRomanScript = System::Int8(0x1d);
static constexpr System::Int8 kFontEnglishLanguage = System::Int8(0x0);
static constexpr System::Int8 kFontEsperantoLanguage = System::Int8(0x5e);
static constexpr System::Int8 kFontEstonianLanguage = System::Int8(0x1b);
static constexpr System::Int8 kFontEthiopicScript = System::Int8(0x1c);
static constexpr System::Int8 kFontExtendedArabicScript = System::Int8(0x1f);
static constexpr System::Int8 kFontFaeroeseLanguage = System::Int8(0x1e);
static constexpr System::Int8 kFontFamilyName = System::Int8(0x1);
static constexpr System::Int8 kFontFarsiLanguage = System::Int8(0x1f);
static constexpr System::Int8 kFontFinnishLanguage = System::Int8(0xd);
static constexpr System::Int8 kFontFlemishLanguage = System::Int8(0x22);
static constexpr System::Int8 kFontFrenchLanguage = System::Int8(0x1);
static constexpr System::Int8 kFontFullName = System::Int8(0x4);
static constexpr System::Int8 kFontGallaLanguage = System::Int8(0x57);
static constexpr System::Int8 kFontGeezScript = System::Int8(0x1c);
static constexpr System::Int8 kFontGeorgianLanguage = System::Int8(0x34);
static constexpr System::Int8 kFontGeorgianScript = System::Int8(0x17);
static constexpr System::Int8 kFontGermanLanguage = System::Int8(0x2);
static constexpr System::Int8 kFontGreekLanguage = System::Int8(0xe);
static constexpr System::Int8 kFontGreekScript = System::Int8(0x6);
static constexpr System::Byte kFontGuaraniLanguage = System::Byte(0x85);
static constexpr System::Int8 kFontGujaratiLanguage = System::Int8(0x45);
static constexpr System::Int8 kFontGujaratiScript = System::Int8(0xb);
static constexpr System::Int8 kFontGurmukhiScript = System::Int8(0xa);
static constexpr System::Int8 kFontHebrewLanguage = System::Int8(0xa);
static constexpr System::Int8 kFontHebrewScript = System::Int8(0x5);
static constexpr System::Int8 kFontHindiLanguage = System::Int8(0x15);
static constexpr System::Int8 kFontHungarianLanguage = System::Int8(0x1a);
static constexpr System::Int8 kFontISO10646_1993Semantics = System::Int8(0x2);
static constexpr System::Int8 kFontIcelandicLanguage = System::Int8(0xf);
static constexpr System::Int8 kFontIndonesianLanguage = System::Int8(0x51);
static constexpr System::Int8 kFontIrishLanguage = System::Int8(0x23);
static constexpr System::Int8 kFontItalianLanguage = System::Int8(0x3);
static constexpr System::Int8 kFontJapaneseLanguage = System::Int8(0xb);
static constexpr System::Int8 kFontJapaneseScript = System::Int8(0x1);
static constexpr System::Byte kFontJavaneseRomLanguage = System::Byte(0x8a);
static constexpr System::Int8 kFontKannadaLanguage = System::Int8(0x49);
static constexpr System::Int8 kFontKannadaScript = System::Int8(0x10);
static constexpr System::Int8 kFontKashmiriLanguage = System::Int8(0x3d);
static constexpr System::Int8 kFontKazakhLanguage = System::Int8(0x30);
static constexpr System::Int8 kFontKhmerLanguage = System::Int8(0x4e);
static constexpr System::Int8 kFontKhmerScript = System::Int8(0x14);
static constexpr System::Int8 kFontKirghizLanguage = System::Int8(0x36);
static constexpr System::Int8 kFontKoreanLanguage = System::Int8(0x17);
static constexpr System::Int8 kFontKoreanScript = System::Int8(0x3);
static constexpr System::Int8 kFontKurdishLanguage = System::Int8(0x3c);
static constexpr System::Int8 kFontLaoLanguage = System::Int8(0x4f);
static constexpr System::Int8 kFontLaotianScript = System::Int8(0x16);
static constexpr System::Int8 kFontLappishLanguage = System::Int8(0x1d);
static constexpr System::Byte kFontLastReservedName = System::Byte(0xff);
static constexpr System::Byte kFontLatinLanguage = System::Byte(0x83);
static constexpr System::Int8 kFontLatvianLanguage = System::Int8(0x1c);
static constexpr System::Int8 kFontLettishLanguage = System::Int8(0x1c);
static constexpr System::Int8 kFontLicenseDescriptionName = System::Int8(0xd);
static constexpr System::Int8 kFontLicenseInfoURLName = System::Int8(0xe);
static constexpr System::Int8 kFontLithuanianLanguage = System::Int8(0x18);
static constexpr System::Int8 kFontMacCompatibleFullName = System::Int8(0x12);
static constexpr System::Int8 kFontMacedonianLanguage = System::Int8(0x2b);
static constexpr System::Int8 kFontMacintoshPlatform = System::Int8(0x1);
static constexpr System::Int8 kFontMalagasyLanguage = System::Int8(0x5d);
static constexpr System::Int8 kFontMalayArabicLanguage = System::Int8(0x54);
static constexpr System::Int8 kFontMalayRomanLanguage = System::Int8(0x53);
static constexpr System::Int8 kFontMalayalamLanguage = System::Int8(0x48);
static constexpr System::Int8 kFontMalayalamScript = System::Int8(0x11);
static constexpr System::Int8 kFontMalteseLanguage = System::Int8(0x10);
static constexpr System::Int8 kFontManufacturerName = System::Int8(0x8);
static constexpr System::Int8 kFontMarathiLanguage = System::Int8(0x42);
static constexpr System::Int8 kFontMicrosoftPlatform = System::Int8(0x3);
static constexpr System::Int8 kFontMicrosoftStandardScript = System::Int8(0x1);
static constexpr System::Int8 kFontMicrosoftSymbolScript = System::Int8(0x0);
static constexpr System::Int8 kFontMicrosoftUCS4Script = System::Int8(0xa);
static constexpr System::Int8 kFontMoldavianLanguage = System::Int8(0x35);
static constexpr System::Int8 kFontMongolianCyrLanguage = System::Int8(0x3a);
static constexpr System::Int8 kFontMongolianLanguage = System::Int8(0x39);
static constexpr System::Int8 kFontMongolianScript = System::Int8(0x1b);
static constexpr System::Int8 kFontNepaliLanguage = System::Int8(0x40);
static constexpr unsigned kFontNoLanguageCode = unsigned(0xffffffff);
static constexpr unsigned kFontNoNameCode = unsigned(0xffffffff);
static constexpr unsigned kFontNoPlatformCode = unsigned(0xffffffff);
static constexpr unsigned kFontNoScriptCode = unsigned(0xffffffff);
static constexpr System::Int8 kFontNorwegianLanguage = System::Int8(0x9);
static constexpr System::Int8 kFontOriyaLanguage = System::Int8(0x47);
static constexpr System::Int8 kFontOriyaScript = System::Int8(0xc);
static constexpr System::Int8 kFontOromoLanguage = System::Int8(0x57);
static constexpr System::Int8 kFontPashtoLanguage = System::Int8(0x3b);
static constexpr System::Int8 kFontPersianLanguage = System::Int8(0x1f);
static constexpr System::Int8 kFontPolishLanguage = System::Int8(0x19);
static constexpr System::Int8 kFontPortugueseLanguage = System::Int8(0x8);
static constexpr System::Int8 kFontPostScriptCIDName = System::Int8(0x14);
static constexpr System::Int8 kFontPostscriptName = System::Int8(0x6);
static constexpr System::Int8 kFontPreferredFamilyName = System::Int8(0x10);
static constexpr System::Int8 kFontPreferredSubfamilyName = System::Int8(0x11);
static constexpr System::Int8 kFontPunjabiLanguage = System::Int8(0x46);
static constexpr System::Byte kFontQuechuaLanguage = System::Byte(0x84);
static constexpr System::Int8 kFontRSymbolScript = System::Int8(0x8);
static constexpr System::Int8 kFontReservedPlatform = System::Int8(0x2);
static constexpr System::Int8 kFontRomanScript = System::Int8(0x0);
static constexpr System::Int8 kFontRomanianLanguage = System::Int8(0x25);
static constexpr System::Int8 kFontRuandaLanguage = System::Int8(0x5a);
static constexpr System::Int8 kFontRundiLanguage = System::Int8(0x5b);
static constexpr System::Int8 kFontRussian = System::Int8(0x7);
static constexpr System::Int8 kFontRussianLanguage = System::Int8(0x20);
static constexpr System::Int8 kFontSaamiskLanguage = System::Int8(0x1d);
static constexpr System::Int8 kFontSampleTextName = System::Int8(0x13);
static constexpr System::Int8 kFontSanskritLanguage = System::Int8(0x41);
static constexpr System::Int8 kFontSerbianLanguage = System::Int8(0x2a);
static constexpr System::Int8 kFontSimpChineseLanguage = System::Int8(0x21);
static constexpr System::Int8 kFontSimpleChineseScript = System::Int8(0x19);
static constexpr System::Int8 kFontSindhiLanguage = System::Int8(0x3e);
static constexpr System::Int8 kFontSindhiScript = System::Int8(0x1f);
static constexpr System::Int8 kFontSinhaleseLanguage = System::Int8(0x4c);
static constexpr System::Int8 kFontSinhaleseScript = System::Int8(0x12);
static constexpr System::Int8 kFontSlavicScript = System::Int8(0x1d);
static constexpr System::Int8 kFontSlovakLanguage = System::Int8(0x27);
static constexpr System::Int8 kFontSlovenianLanguage = System::Int8(0x28);
static constexpr System::Int8 kFontSomaliLanguage = System::Int8(0x58);
static constexpr System::Int8 kFontSpanishLanguage = System::Int8(0x6);
static constexpr System::Int8 kFontStyleName = System::Int8(0x2);
static constexpr System::Byte kFontSundaneseRomLanguage = System::Byte(0x8b);
static constexpr System::Int8 kFontSwahiliLanguage = System::Int8(0x59);
static constexpr System::Int8 kFontSwedishLanguage = System::Int8(0x5);
static constexpr System::Int8 kFontTagalogLanguage = System::Int8(0x52);
static constexpr System::Int8 kFontTajikiLanguage = System::Int8(0x37);
static constexpr System::Int8 kFontTamilLanguage = System::Int8(0x4a);
static constexpr System::Int8 kFontTamilScript = System::Int8(0xe);
static constexpr System::Byte kFontTatarLanguage = System::Byte(0x87);
static constexpr System::Int8 kFontTeluguLanguage = System::Int8(0x4b);
static constexpr System::Int8 kFontTeluguScript = System::Int8(0xf);
static constexpr System::Int8 kFontThaiLanguage = System::Int8(0x16);
static constexpr System::Int8 kFontThaiScript = System::Int8(0x15);
static constexpr System::Int8 kFontTibetanLanguage = System::Int8(0x3f);
static constexpr System::Int8 kFontTibetanScript = System::Int8(0x1a);
static constexpr System::Int8 kFontTigrinyaLanguage = System::Int8(0x56);
static constexpr System::Int8 kFontTradChineseLanguage = System::Int8(0x13);
static constexpr System::Int8 kFontTrademarkName = System::Int8(0x7);
static constexpr System::Int8 kFontTraditionalChineseScript = System::Int8(0x2);
static constexpr System::Int8 kFontTurkishLanguage = System::Int8(0x11);
static constexpr System::Int8 kFontTurkmenLanguage = System::Int8(0x38);
static constexpr System::Byte kFontUighurLanguage = System::Byte(0x88);
static constexpr System::Int8 kFontUkrainianLanguage = System::Int8(0x2d);
static constexpr System::Int8 kFontUnicodeDefaultSemantics = System::Int8(0x0);
static constexpr System::Int8 kFontUnicodePlatform = System::Int8(0x0);
static constexpr System::Int8 kFontUnicodeV1_1Semantics = System::Int8(0x1);
static constexpr System::Int8 kFontUnicodeV2_0BMPOnlySemantics = System::Int8(0x3);
static constexpr System::Int8 kFontUnicodeV2_0FullCoverageSemantics = System::Int8(0x4);
static constexpr System::Int8 kFontUnicodeV4_0VariationSequenceSemantics = System::Int8(0x5);
static constexpr System::Int8 kFontUninterpretedScript = System::Int8(0x20);
static constexpr System::Int8 kFontUniqueName = System::Int8(0x3);
static constexpr System::Int8 kFontUrduLanguage = System::Int8(0x14);
static constexpr System::Int8 kFontUzbekLanguage = System::Int8(0x2f);
static constexpr System::Int8 kFontVendorURLName = System::Int8(0xb);
static constexpr System::Int8 kFontVersionName = System::Int8(0x5);
static constexpr System::Int8 kFontVietnameseLanguage = System::Int8(0x50);
static constexpr System::Int8 kFontVietnameseScript = System::Int8(0x1e);
static constexpr System::Byte kFontWelshLanguage = System::Byte(0x80);
static constexpr System::Int8 kFontYiddishLanguage = System::Int8(0x29);
static constexpr System::Int8 kFormInterrobangOffSelector = System::Int8(0x7);
static constexpr System::Int8 kFormInterrobangOnSelector = System::Int8(0x6);
static constexpr System::Int8 kFractionsType = System::Int8(0xb);
static constexpr System::Int8 kFullWidthCJKRomanSelector = System::Int8(0x3);
static constexpr System::Int8 kFullWidthIdeographsSelector = System::Int8(0x0);
static constexpr System::Int8 kFullWidthKanaSelector = System::Int8(0x0);
static constexpr System::Int8 kHalfWidthCJKRomanSelector = System::Int8(0x0);
static constexpr System::Int8 kHalfWidthIdeographsSelector = System::Int8(0x2);
static constexpr System::Int8 kHalfWidthTextSelector = System::Int8(0x2);
static constexpr System::Int8 kHanjaToHangulAltOneSelector = System::Int8(0x7);
static constexpr System::Int8 kHanjaToHangulAltThreeSelector = System::Int8(0x9);
static constexpr System::Int8 kHanjaToHangulAltTwoSelector = System::Int8(0x8);
static constexpr System::Int8 kHanjaToHangulSelector = System::Int8(0x1);
static constexpr System::Int8 kHideDiacriticsSelector = System::Int8(0x1);
static constexpr System::Int8 kHiraganaToKatakanaSelector = System::Int8(0x2);
static constexpr System::Int8 kHyphenToEnDashOffSelector = System::Int8(0x3);
static constexpr System::Int8 kHyphenToEnDashOnSelector = System::Int8(0x2);
static constexpr System::Int8 kHyphenToMinusOffSelector = System::Int8(0x1);
static constexpr System::Int8 kHyphenToMinusOnSelector = System::Int8(0x0);
static constexpr System::Int8 kHyphensToEmDashOffSelector = System::Int8(0x1);
static constexpr System::Int8 kHyphensToEmDashOnSelector = System::Int8(0x0);
static constexpr System::Int8 kIdeographicAltFiveSelector = System::Int8(0x5);
static constexpr System::Int8 kIdeographicAltFourSelector = System::Int8(0x4);
static constexpr System::Int8 kIdeographicAltOneSelector = System::Int8(0x1);
static constexpr System::Int8 kIdeographicAltThreeSelector = System::Int8(0x3);
static constexpr System::Int8 kIdeographicAltTwoSelector = System::Int8(0x2);
static constexpr System::Int8 kIdeographicAlternativesType = System::Int8(0x1e);
static constexpr System::Int8 kIdeographicSpacingType = System::Int8(0x1a);
static constexpr System::Int8 kIlluminatedCapsSelector = System::Int8(0x3);
static constexpr System::Int8 kInequalityLigaturesOffSelector = System::Int8(0x7);
static constexpr System::Int8 kInequalityLigaturesOnSelector = System::Int8(0x6);
static constexpr System::Int8 kInferiorsSelector = System::Int8(0x2);
static constexpr System::Int8 kInitialCapsAndSmallCapsSelector = System::Int8(0x5);
static constexpr System::Int8 kInitialCapsSelector = System::Int8(0x4);
static constexpr System::Int8 kInternationalSymbolsSelector = System::Int8(0x5);
static constexpr System::Int8 kInvertedBoxAnnotationSelector = System::Int8(0x9);
static constexpr System::Int8 kInvertedCircleAnnotationSelector = System::Int8(0x4);
static constexpr System::Int8 kInvertedRoundedBoxAnnotationSelector = System::Int8(0xa);
static constexpr System::Int8 kItalicCJKRomanType = System::Int8(0x20);
static constexpr System::Int8 kJIS1978CharactersSelector = System::Int8(0x2);
static constexpr System::Int8 kJIS1983CharactersSelector = System::Int8(0x3);
static constexpr System::Int8 kJIS1990CharactersSelector = System::Int8(0x4);
static constexpr int kJUSTCurrentVersion = int(0x10000);
static constexpr System::Int8 kJUSTKashidaPriority = System::Int8(0x0);
static constexpr System::Int8 kJUSTLetterPriority = System::Int8(0x2);
static constexpr System::Int8 kJUSTNullPriority = System::Int8(0x3);
static constexpr System::Word kJUSTOverrideLimits = System::Word(0x4000);
static constexpr System::Word kJUSTOverridePriority = System::Word(0x8000);
static constexpr System::Word kJUSTOverrideUnlimited = System::Word(0x2000);
static constexpr System::Int8 kJUSTPriorityCount = System::Int8(0x4);
static constexpr System::Int8 kJUSTPriorityMask = System::Int8(0x3);
static constexpr System::Int8 kJUSTSpacePriority = System::Int8(0x1);
static constexpr System::Int8 kJUSTStandardFormat = System::Int8(0x0);
static constexpr int kJUSTTag = int(0x6a757374);
static constexpr System::Word kJUSTUnlimited = System::Word(0x1000);
static constexpr System::Word kJUSTnoGlyphcode = System::Word(0xffff);
static constexpr System::Int8 kJUSTpcConditionalAddAction = System::Int8(0x2);
static constexpr System::Int8 kJUSTpcDecompositionAction = System::Int8(0x0);
static constexpr System::Int8 kJUSTpcDuctilityAction = System::Int8(0x4);
static constexpr System::Int8 kJUSTpcGlyphRepeatAddAction = System::Int8(0x5);
static constexpr System::Int8 kJUSTpcGlyphStretchAction = System::Int8(0x3);
static constexpr System::Int8 kJUSTpcUnconditionalAddAction = System::Int8(0x1);
static constexpr System::Word kKERNCrossStream = System::Word(0x4000);
static constexpr System::Int8 kKERNCrossStreamResetNote = System::Int8(0x2);
static constexpr int kKERNCurrentVersion = int(0x10000);
static constexpr System::Byte kKERNFormatMask = System::Byte(0xff);
static constexpr System::Int8 kKERNIndexArray = System::Int8(0x3);
static constexpr System::Int8 kKERNLineEndKerning = System::Int8(0x2);
static constexpr System::Int8 kKERNLineStart = System::Int8(0x1);
static constexpr System::Int8 kKERNNoCrossKerning = System::Int8(0x4);
static constexpr System::Int8 kKERNNoStakeNote = System::Int8(0x1);
static constexpr System::Int8 kKERNNotApplied = System::Int8(0x1);
static constexpr System::Int8 kKERNNotesRequested = System::Int8(0x8);
static constexpr System::Int8 kKERNOrderedList = System::Int8(0x0);
static constexpr System::Word kKERNResetCrossStream = System::Word(0x8000);
static constexpr System::Int8 kKERNSimpleArray = System::Int8(0x2);
static constexpr System::Int8 kKERNStateTable = System::Int8(0x1);
static constexpr int kKERNTag = int(0x6b65726e);
static constexpr System::Word kKERNUnusedBits = System::Word(0x1f00);
static constexpr System::Word kKERNVariation = System::Word(0x2000);
static constexpr System::Word kKERNVertical = System::Word(0x8000);
static constexpr int kKERXActionOffsetMask = int(0x7fffffff);
static constexpr System::Int8 kKERXControlPoint = System::Int8(0x4);
static constexpr int kKERXCrossStream = int(0x40000000);
static constexpr System::Int8 kKERXCrossStreamResetNote = System::Int8(0x2);
static constexpr int kKERXCurrentVersion = int(0x20000);
static constexpr System::Byte kKERXFormatMask = System::Byte(0xff);
static constexpr System::Int8 kKERXIndexArray = System::Int8(0x3);
static constexpr System::Int8 kKERXLineEndKerning = System::Int8(0x2);
static constexpr System::Int8 kKERXLineStart = System::Int8(0x1);
static constexpr System::Int8 kKERXNoCrossKerning = System::Int8(0x4);
static constexpr System::Int8 kKERXNoStakeNote = System::Int8(0x1);
static constexpr System::Int8 kKERXNotApplied = System::Int8(0x1);
static constexpr System::Int8 kKERXNotesRequested = System::Int8(0x8);
static constexpr System::Int8 kKERXOrderedList = System::Int8(0x0);
static constexpr System::Word kKERXResetCrossStream = System::Word(0x8000);
static constexpr System::Int8 kKERXSimpleArray = System::Int8(0x2);
static constexpr System::Int8 kKERXStateTable = System::Int8(0x1);
static constexpr int kKERXTag = int(0x6b657278);
static constexpr int kKERXUnusedBits = int(0x1fffff00);
static constexpr int kKERXUsesCoordinates = int(-2147483648);
static constexpr int kKERXVariation = int(0x20000000);
static constexpr int kKERXVertical = int(-2147483648);
static constexpr System::Int8 kKanaSpacingType = System::Int8(0x19);
static constexpr System::Int8 kKanaToRomanizationSelector = System::Int8(0x4);
static constexpr System::Int8 kKatakanaToHiraganaSelector = System::Int8(0x3);
static constexpr System::Int8 kLCARCtlPointFormat = System::Int8(0x1);
static constexpr int kLCARCurrentVersion = int(0x10000);
static constexpr System::Int8 kLCARLinearFormat = System::Int8(0x0);
static constexpr int kLCARTag = int(0x6c636172);
static constexpr System::Int8 kLastFeatureType = System::Int8(-1);
static constexpr System::Int8 kLetterCaseType = System::Int8(0x3);
static constexpr System::Int8 kLigaturesType = System::Int8(0x1);
static constexpr System::Int8 kLineFinalSwashesOffSelector = System::Int8(0x7);
static constexpr System::Int8 kLineFinalSwashesOnSelector = System::Int8(0x6);
static constexpr System::Int8 kLineInitialSwashesOffSelector = System::Int8(0x5);
static constexpr System::Int8 kLineInitialSwashesOnSelector = System::Int8(0x4);
static constexpr System::Int8 kLinguisticRearrangementOffSelector = System::Int8(0x1);
static constexpr System::Int8 kLinguisticRearrangementOnSelector = System::Int8(0x0);
static constexpr System::Int8 kLinguisticRearrangementType = System::Int8(0x5);
static constexpr System::Int8 kLogosOffSelector = System::Int8(0x7);
static constexpr System::Int8 kLogosOnSelector = System::Int8(0x6);
static constexpr System::Int8 kLowerCaseNumbersSelector = System::Int8(0x0);
static constexpr System::Int8 kMORTContextualType = System::Int8(0x1);
static constexpr System::Word kMORTCoverDescending = System::Word(0x4000);
static constexpr System::Word kMORTCoverIgnoreVertical = System::Word(0x2000);
static constexpr System::Int8 kMORTCoverTypeMask = System::Int8(0xf);
static constexpr System::Word kMORTCoverVertical = System::Word(0x8000);
static constexpr System::Word kMORTCurrInsertBefore = System::Word(0x800);
static constexpr System::Word kMORTCurrInsertCountMask = System::Word(0x3e0);
static constexpr System::Int8 kMORTCurrInsertCountShift = System::Int8(0x5);
static constexpr System::Word kMORTCurrInsertKashidaLike = System::Word(0x2000);
static constexpr System::Int8 kMORTCurrJustTableCountMask = System::Int8(0x7f);
static constexpr System::Int8 kMORTCurrJustTableCountShift = System::Int8(0x0);
static constexpr int kMORTCurrentVersion = int(0x10000);
static constexpr System::Byte kMORTDoInsertionsBefore = System::Byte(0x80);
static constexpr System::Int8 kMORTInsertionType = System::Int8(0x5);
static constexpr System::Int8 kMORTInsertionsCountMask = System::Int8(0x3f);
static constexpr System::Int8 kMORTIsSplitVowelPiece = System::Int8(0x40);
static constexpr int kMORTLigFormOffsetMask = int(0x3fffffff);
static constexpr System::Int8 kMORTLigFormOffsetShift = System::Int8(0x2);
static constexpr int kMORTLigLastAction = int(-2147483648);
static constexpr int kMORTLigStoreLigature = int(0x40000000);
static constexpr System::Int8 kMORTLigatureType = System::Int8(0x2);
static constexpr System::Word kMORTMarkInsertBefore = System::Word(0x400);
static constexpr System::Int8 kMORTMarkInsertCountMask = System::Int8(0x1f);
static constexpr System::Int8 kMORTMarkInsertCountShift = System::Int8(0x0);
static constexpr System::Word kMORTMarkInsertKashidaLike = System::Word(0x1000);
static constexpr System::Word kMORTMarkJustTableCountMask = System::Word(0x3f80);
static constexpr System::Int8 kMORTMarkJustTableCountShift = System::Int8(0x7);
static constexpr System::Int8 kMORTRearrangementType = System::Int8(0x0);
static constexpr System::Int8 kMORTSwashType = System::Int8(0x4);
static constexpr int kMORTTag = int(0x6d6f7274);
static constexpr System::Int8 kMORTraCDx = System::Int8(0x6);
static constexpr System::Int8 kMORTraCDxA = System::Int8(0x8);
static constexpr System::Int8 kMORTraCDxAB = System::Int8(0xc);
static constexpr System::Int8 kMORTraCDxBA = System::Int8(0xd);
static constexpr System::Int8 kMORTraDCx = System::Int8(0x7);
static constexpr System::Int8 kMORTraDCxA = System::Int8(0x9);
static constexpr System::Int8 kMORTraDCxAB = System::Int8(0xe);
static constexpr System::Int8 kMORTraDCxBA = System::Int8(0xf);
static constexpr System::Int8 kMORTraDx = System::Int8(0x2);
static constexpr System::Int8 kMORTraDxA = System::Int8(0x3);
static constexpr System::Int8 kMORTraDxAB = System::Int8(0xa);
static constexpr System::Int8 kMORTraDxBA = System::Int8(0xb);
static constexpr System::Int8 kMORTraNoAction = System::Int8(0x0);
static constexpr System::Int8 kMORTraxA = System::Int8(0x1);
static constexpr System::Int8 kMORTraxAB = System::Int8(0x4);
static constexpr System::Int8 kMORTraxBA = System::Int8(0x5);
static constexpr int kMORXCoverDescending = int(0x40000000);
static constexpr int kMORXCoverIgnoreVertical = int(0x20000000);
static constexpr System::Byte kMORXCoverTypeMask = System::Byte(0xff);
static constexpr int kMORXCoverVertical = int(-2147483648);
static constexpr int kMORXCurrentVersion = int(0x20000);
static constexpr int kMORXTag = int(0x6d6f7278);
static constexpr System::Int8 kMathSymbolsSelector = System::Int8(0x6);
static constexpr System::Int8 kMathematicalExtrasType = System::Int8(0xf);
static constexpr System::Int8 kMonospacedNumbersSelector = System::Int8(0x0);
static constexpr System::Int8 kMonospacedTextSelector = System::Int8(0x1);
static constexpr System::Int8 kNoAlternatesSelector = System::Int8(0x0);
static constexpr System::Int8 kNoAnnotationSelector = System::Int8(0x0);
static constexpr System::Int8 kNoCJKItalicRomanSelector = System::Int8(0x0);
static constexpr System::Int8 kNoCJKSymbolAlternativesSelector = System::Int8(0x0);
static constexpr System::Int8 kNoFractionsSelector = System::Int8(0x0);
static constexpr System::Int8 kNoIdeographicAlternativesSelector = System::Int8(0x0);
static constexpr System::Int8 kNoOrnamentsSelector = System::Int8(0x0);
static constexpr System::Int8 kNoRubyKanaSelector = System::Int8(0x0);
static constexpr System::Int8 kNoStyleOptionsSelector = System::Int8(0x0);
static constexpr System::Int8 kNoTransliterationSelector = System::Int8(0x0);
static constexpr System::Int8 kNonFinalSwashesOffSelector = System::Int8(0x9);
static constexpr System::Int8 kNonFinalSwashesOnSelector = System::Int8(0x8);
static constexpr System::Int8 kNormalPositionSelector = System::Int8(0x0);
static constexpr System::Int8 kNumberCaseType = System::Int8(0x15);
static constexpr System::Int8 kNumberSpacingType = System::Int8(0x6);
static constexpr System::Int8 kOrdinalsSelector = System::Int8(0x3);
static constexpr System::Int8 kOrnamentSetsType = System::Int8(0x10);
static constexpr System::Int8 kOverlappingCharactersType = System::Int8(0xd);
static constexpr System::Int8 kPROPALDirectionClass = System::Int8(0x2);
static constexpr System::Int8 kPROPANDirectionClass = System::Int8(0x6);
static constexpr System::Int8 kPROPBNDirectionClass = System::Int8(0x13);
static constexpr System::Int8 kPROPCSDirectionClass = System::Int8(0x7);
static constexpr System::Word kPROPCanHangLTMask = System::Word(0x4000);
static constexpr System::Word kPROPCanHangRBMask = System::Word(0x2000);
static constexpr int kPROPCurrentVersion = int(0x30000);
static constexpr System::Int8 kPROPDirectionMask = System::Int8(0x1f);
static constexpr System::Int8 kPROPENDirectionClass = System::Int8(0x3);
static constexpr System::Int8 kPROPESDirectionClass = System::Int8(0x4);
static constexpr System::Int8 kPROPETDirectionClass = System::Int8(0x5);
static constexpr System::Word kPROPIsFloaterMask = System::Word(0x8000);
static constexpr System::Int8 kPROPLDirectionClass = System::Int8(0x0);
static constexpr System::Int8 kPROPLREDirectionClass = System::Int8(0xd);
static constexpr System::Int8 kPROPLRODirectionClass = System::Int8(0xe);
static constexpr System::Int8 kPROPNSMDirectionClass = System::Int8(0x12);
static constexpr System::Int8 kPROPNumDirectionClasses = System::Int8(0x14);
static constexpr System::Int8 kPROPONDirectionClass = System::Int8(0xb);
static constexpr System::Int8 kPROPPDFDirectionClass = System::Int8(0x11);
static constexpr System::Int8 kPROPPSDirectionClass = System::Int8(0x8);
static constexpr System::Word kPROPPairOffsetMask = System::Word(0xf00);
static constexpr System::Int8 kPROPPairOffsetShift = System::Int8(0x8);
static constexpr System::Int8 kPROPPairOffsetSign = System::Int8(0x7);
static constexpr System::Int8 kPROPRDirectionClass = System::Int8(0x1);
static constexpr System::Int8 kPROPRLEDirectionClass = System::Int8(0xf);
static constexpr System::Int8 kPROPRLODirectionClass = System::Int8(0x10);
static constexpr System::Byte kPROPRightConnectMask = System::Byte(0x80);
static constexpr System::Int8 kPROPSDirectionClass = System::Int8(0x9);
static constexpr System::Int8 kPROPSENDirectionClass = System::Int8(0xc);
static constexpr int kPROPTag = int(0x70726f70);
static constexpr System::Word kPROPUseRLPairMask = System::Word(0x1000);
static constexpr System::Int8 kPROPWSDirectionClass = System::Int8(0xa);
static constexpr System::Int8 kPROPZeroReserved = System::Int8(0x60);
static constexpr System::Int8 kParenthesisAnnotationSelector = System::Int8(0x5);
static constexpr System::Int8 kPartiallyConnectedSelector = System::Int8(0x1);
static constexpr System::Int8 kPeriodAnnotationSelector = System::Int8(0x6);
static constexpr System::Int8 kPeriodsToEllipsisOffSelector = System::Int8(0xb);
static constexpr System::Int8 kPeriodsToEllipsisOnSelector = System::Int8(0xa);
static constexpr System::Int8 kPiCharactersSelector = System::Int8(0x2);
static constexpr System::Int8 kPreventOverlapOffSelector = System::Int8(0x1);
static constexpr System::Int8 kPreventOverlapOnSelector = System::Int8(0x0);
static constexpr System::Int8 kProportionalCJKRomanSelector = System::Int8(0x1);
static constexpr System::Int8 kProportionalIdeographsSelector = System::Int8(0x1);
static constexpr System::Int8 kProportionalKanaSelector = System::Int8(0x1);
static constexpr System::Int8 kProportionalNumbersSelector = System::Int8(0x1);
static constexpr System::Int8 kProportionalTextSelector = System::Int8(0x0);
static constexpr System::Int8 kQuarterWidthNumbersSelector = System::Int8(0x3);
static constexpr System::Int8 kRareLigaturesOffSelector = System::Int8(0x5);
static constexpr System::Int8 kRareLigaturesOnSelector = System::Int8(0x4);
static constexpr System::Int8 kRebusPicturesOffSelector = System::Int8(0x9);
static constexpr System::Int8 kRebusPicturesOnSelector = System::Int8(0x8);
static constexpr System::Int8 kRequiredLigaturesOffSelector = System::Int8(0x1);
static constexpr System::Int8 kRequiredLigaturesOnSelector = System::Int8(0x0);
static constexpr System::Int8 kRomanNumeralAnnotationSelector = System::Int8(0x7);
static constexpr System::Int8 kRomanizationToHiraganaSelector = System::Int8(0x5);
static constexpr System::Int8 kRomanizationToKatakanaSelector = System::Int8(0x6);
static constexpr System::Int8 kRoundedBoxAnnotationSelector = System::Int8(0x2);
static constexpr System::Int8 kRubyKanaOffSelector = System::Int8(0x3);
static constexpr System::Int8 kRubyKanaOnSelector = System::Int8(0x2);
static constexpr System::Int8 kRubyKanaSelector = System::Int8(0x1);
static constexpr System::Int8 kRubyKanaType = System::Int8(0x1c);
static constexpr System::Int8 kSFNTLookupSegmentArray = System::Int8(0x4);
static constexpr System::Int8 kSFNTLookupSegmentSingle = System::Int8(0x2);
static constexpr System::Int8 kSFNTLookupSimpleArray = System::Int8(0x0);
static constexpr System::Int8 kSFNTLookupSingleTable = System::Int8(0x6);
static constexpr System::Int8 kSFNTLookupTrimmedArray = System::Int8(0x8);
static constexpr System::Int8 kSTClassDeletedGlyph = System::Int8(0x2);
static constexpr System::Int8 kSTClassEndOfLine = System::Int8(0x3);
static constexpr System::Int8 kSTClassEndOfText = System::Int8(0x0);
static constexpr System::Int8 kSTClassOutOfBounds = System::Int8(0x1);
static constexpr System::Word kSTLigActionMask = System::Word(0x3fff);
static constexpr System::Word kSTMarkEnd = System::Word(0x2000);
static constexpr System::Word kSTNoAdvance = System::Word(0x4000);
static constexpr System::Int8 kSTRearrVerbMask = System::Int8(0xf);
static constexpr System::Word kSTSetMark = System::Word(0x8000);
static constexpr System::Word kSTXHasLigAction = System::Word(0x2000);
static constexpr System::Int8 kShowDiacriticsSelector = System::Int8(0x0);
static constexpr System::Int8 kSimplifiedCharactersSelector = System::Int8(0x1);
static constexpr System::Int8 kSlashToDivideOffSelector = System::Int8(0x5);
static constexpr System::Int8 kSlashToDivideOnSelector = System::Int8(0x4);
static constexpr System::Int8 kSlashedZeroOffSelector = System::Int8(0x5);
static constexpr System::Int8 kSlashedZeroOnSelector = System::Int8(0x4);
static constexpr System::Int8 kSmallCapsSelector = System::Int8(0x3);
static constexpr System::Int8 kSmartQuotesOffSelector = System::Int8(0x9);
static constexpr System::Int8 kSmartQuotesOnSelector = System::Int8(0x8);
static constexpr System::Int8 kSmartSwashType = System::Int8(0x8);
static constexpr System::Int8 kSquaredLigaturesOffSelector = System::Int8(0xd);
static constexpr System::Int8 kSquaredLigaturesOnSelector = System::Int8(0xc);
static constexpr System::Int8 kStyleOptionsType = System::Int8(0x13);
static constexpr System::Int8 kSubstituteVerticalFormsOffSelector = System::Int8(0x1);
static constexpr System::Int8 kSubstituteVerticalFormsOnSelector = System::Int8(0x0);
static constexpr System::Int8 kSuperiorsSelector = System::Int8(0x1);
static constexpr System::Int8 kSymbolLigaturesOffSelector = System::Int8(0x11);
static constexpr System::Int8 kSymbolLigaturesOnSelector = System::Int8(0x10);
static constexpr System::Int8 kTallCapsSelector = System::Int8(0x5);
static constexpr System::Int8 kTextSpacingType = System::Int8(0x16);
static constexpr System::Int8 kThirdWidthNumbersSelector = System::Int8(0x2);
static constexpr System::Int8 kTitlingCapsSelector = System::Int8(0x4);
static constexpr System::Int8 kTraditionalAltFiveSelector = System::Int8(0x9);
static constexpr System::Int8 kTraditionalAltFourSelector = System::Int8(0x8);
static constexpr System::Int8 kTraditionalAltOneSelector = System::Int8(0x5);
static constexpr System::Int8 kTraditionalAltThreeSelector = System::Int8(0x7);
static constexpr System::Int8 kTraditionalAltTwoSelector = System::Int8(0x6);
static constexpr System::Int8 kTraditionalCharactersSelector = System::Int8(0x0);
static constexpr System::Int8 kTranscodingCompositionOffSelector = System::Int8(0x5);
static constexpr System::Int8 kTranscodingCompositionOnSelector = System::Int8(0x4);
static constexpr System::Int8 kTransliterationType = System::Int8(0x17);
static constexpr System::Int8 kTypographicExtrasType = System::Int8(0xe);
static constexpr System::Int8 kUnconnectedSelector = System::Int8(0x0);
static constexpr System::Int8 kUnicodeDecompositionType = System::Int8(0x1b);
static constexpr System::Int8 kUpperAndLowerCaseSelector = System::Int8(0x0);
static constexpr System::Int8 kUpperCaseNumbersSelector = System::Int8(0x1);
static constexpr System::Int8 kVerticalFractionsSelector = System::Int8(0x1);
static constexpr System::Int8 kVerticalPositionType = System::Int8(0xa);
static constexpr System::Int8 kVerticalSubstitutionType = System::Int8(0x4);
static constexpr System::Int8 kWordFinalSwashesOffSelector = System::Int8(0x3);
static constexpr System::Int8 kWordFinalSwashesOnSelector = System::Int8(0x2);
static constexpr System::Int8 kWordInitialSwashesOffSelector = System::Int8(0x1);
static constexpr System::Int8 kWordInitialSwashesOnSelector = System::Int8(0x0);
static constexpr int nameFontTableTag = int(0x6e616d65);
static constexpr System::Int8 sizeof_sfntCMapEncoding = System::Int8(0x8);
static constexpr System::Int8 sizeof_sfntCMapExtendedSubHeader = System::Int8(0xc);
static constexpr System::Int8 sizeof_sfntCMapHeader = System::Int8(0x4);
static constexpr System::Int8 sizeof_sfntCMapSubHeader = System::Int8(0x6);
static constexpr System::Int8 sizeof_sfntDirectory = System::Int8(0xc);
static constexpr System::Int8 sizeof_sfntInstance = System::Int8(0x4);
static constexpr System::Int8 sizeof_sfntNameHeader = System::Int8(0x6);
static constexpr System::Int8 sizeof_sfntNameRecord = System::Int8(0xc);
static constexpr System::Int8 sizeof_sfntVariationAxis = System::Int8(0x14);
static constexpr System::Int8 sizeof_sfntVariationHeader = System::Int8(0x10);
static constexpr int variationFontTableTag = int(0x66766172);
#define libCoreText u"/System/Library/Frameworks/CoreText.framework/CoreText"
extern "C" CFArrayRef __cdecl CTFontCollectionCopyExclusionDescriptors(void * collection);
extern "C" CFArrayRef __cdecl CTFontCollectionCopyQueryDescriptors(void * collection);
extern "C" void * __cdecl CTFontCollectionCreateCopyWithFontDescriptors(void * original, CFArrayRef queryDescriptors, CFDictionaryRef options);
extern "C" void * __cdecl CTFontCollectionCreateFromAvailableFonts(CFDictionaryRef options);
extern "C" CFArrayRef __cdecl CTFontCollectionCreateMatchingFontDescriptors(void * collection);
extern "C" CFArrayRef __cdecl CTFontCollectionCreateMatchingFontDescriptorsForFamily(void * collection, CFStringRef familyName, CFDictionaryRef options);
extern "C" CFArrayRef __cdecl CTFontCollectionCreateMatchingFontDescriptorsSortedWithCallback(void * collection, CTFontCollectionSortDescriptorsCallback sortCallback, void * refCon);
extern "C" CFArrayRef __cdecl CTFontCollectionCreateMatchingFontDescriptorsWithOptions(void * collection, CFDictionaryRef options);
extern "C" void * __cdecl CTFontCollectionCreateWithFontDescriptors(CFArrayRef queryDescriptors, CFDictionaryRef options);
extern "C" unsigned long __cdecl CTFontCollectionGetTypeID(void);
extern "C" void * __cdecl CTFontCopyAttribute(void * font, CFStringRef attribute);
extern "C" CFArrayRef __cdecl CTFontCopyAvailableTables(void * font, unsigned options);
extern "C" CFCharacterSetRef __cdecl CTFontCopyCharacterSet(void * font);
extern "C" CFStringRef __cdecl CTFontCopyDisplayName(void * font);
extern "C" CFStringRef __cdecl CTFontCopyFamilyName(void * font);
extern "C" CFArrayRef __cdecl CTFontCopyFeatureSettings(void * font);
extern "C" CFArrayRef __cdecl CTFontCopyFeatures(void * font);
extern "C" void * __cdecl CTFontCopyFontDescriptor(void * font);
extern "C" CFStringRef __cdecl CTFontCopyFullName(void * font);
extern "C" void * __cdecl CTFontCopyGraphicsFont(void * font, PCTFontDescriptorRef attributes);
extern "C" CFStringRef __cdecl CTFontCopyLocalizedName(void * font, CFStringRef nameKey, Macapi::Corefoundation::PCFStringRef language);
extern "C" CFStringRef __cdecl CTFontCopyName(void * font, CFStringRef nameKey);
extern "C" CFStringRef __cdecl CTFontCopyPostScriptName(void * font);
extern "C" CFArrayRef __cdecl CTFontCopySupportedLanguages(void * font);
extern "C" CFDataRef __cdecl CTFontCopyTable(void * font, unsigned table, unsigned options);
extern "C" CFDictionaryRef __cdecl CTFontCopyTraits(void * font);
extern "C" CFDictionaryRef __cdecl CTFontCopyVariation(void * font);
extern "C" CFArrayRef __cdecl CTFontCopyVariationAxes(void * font);
extern "C" void * __cdecl CTFontCreateCopyWithAttributes(void * font, double size, Iosapi::Coregraphics::PCGAffineTransform matrix, void * attributes);
extern "C" void * __cdecl CTFontCreateCopyWithFamily(void * font, double size, Iosapi::Coregraphics::PCGAffineTransform matrix, CFStringRef family);
extern "C" void * __cdecl CTFontCreateCopyWithSymbolicTraits(void * font, double size, Iosapi::Coregraphics::PCGAffineTransform matrix, unsigned symTraitValue, unsigned symTraitMask);
extern "C" void * __cdecl CTFontCreateForString(void * currentFont, CFStringRef string_, CFRange range);
extern "C" void * __cdecl CTFontCreatePathForGlyph(void * font, System::Word glyph, Iosapi::Coregraphics::PCGAffineTransform transform);
extern "C" void * __cdecl CTFontCreateUIFontForLanguage(unsigned uiType, double size, CFStringRef language);
extern "C" void * __cdecl CTFontCreateWithFontDescriptor(void * descriptor, double size, Iosapi::Coregraphics::PCGAffineTransform matrix);
extern "C" void * __cdecl CTFontCreateWithFontDescriptorAndOptions(void * descriptor, double size, Iosapi::Coregraphics::PCGAffineTransform matrix, unsigned long options);
extern "C" void * __cdecl CTFontCreateWithGraphicsFont(void * graphicsFont, double size, Iosapi::Coregraphics::PCGAffineTransform matrix, void * attributes);
extern "C" void * __cdecl CTFontCreateWithName(CFStringRef name, double size, Iosapi::Coregraphics::PCGAffineTransform matrix);
extern "C" void * __cdecl CTFontCreateWithNameAndOptions(CFStringRef name, double size, Iosapi::Coregraphics::PCGAffineTransform matrix, unsigned long options);
extern "C" void * __cdecl CTFontDescriptorCopyAttribute(void * descriptor, CFStringRef attribute);
extern "C" CFDictionaryRef __cdecl CTFontDescriptorCopyAttributes(void * descriptor);
extern "C" void * __cdecl CTFontDescriptorCopyLocalizedAttribute(void * descriptor, CFStringRef attribute, Macapi::Corefoundation::PCFStringRef language);
extern "C" void * __cdecl CTFontDescriptorCreateCopyWithAttributes(void * original, CFDictionaryRef attributes);
extern "C" void * __cdecl CTFontDescriptorCreateCopyWithFeature(void * original, CFNumberRef featureTypeIdentifier, CFNumberRef featureSelectorIdentifier);
extern "C" void * __cdecl CTFontDescriptorCreateCopyWithVariation(void * original, CFNumberRef variationIdentifier, double variationValue);
extern "C" void * __cdecl CTFontDescriptorCreateMatchingFontDescriptor(void * descriptor, CFSetRef mandatoryAttributes);
extern "C" CFArrayRef __cdecl CTFontDescriptorCreateMatchingFontDescriptors(void * descriptor, CFSetRef mandatoryAttributes);
extern "C" void * __cdecl CTFontDescriptorCreateWithAttributes(CFDictionaryRef attributes);
extern "C" void * __cdecl CTFontDescriptorCreateWithNameAndSize(CFStringRef name, double size);
extern "C" unsigned long __cdecl CTFontDescriptorGetTypeID(void);
extern "C" void __cdecl CTFontDrawGlyphs(void * font, Iosapi::Coregraphics::PCGGlyph glyphs, Iosapi::Coregraphics::PCGPoint positions, unsigned long count, void * context);
extern "C" double __cdecl CTFontGetAdvancesForGlyphs(void * font, unsigned orientation, Iosapi::Coregraphics::PCGGlyph glyphs, Iosapi::Coregraphics::PCGSize advances, long count);
extern "C" double __cdecl CTFontGetAscent(void * font);
extern "C" Iosapi::Foundation::NSRect __cdecl CTFontGetBoundingBox(void * font);
extern "C" Iosapi::Foundation::NSRect __cdecl CTFontGetBoundingRectsForGlyphs(void * font, unsigned orientation, Iosapi::Coregraphics::PCGGlyph glyphs, Iosapi::Coregraphics::PCGRect boundingRects, long count);
extern "C" double __cdecl CTFontGetCapHeight(void * font);
extern "C" double __cdecl CTFontGetDescent(void * font);
extern "C" long __cdecl CTFontGetGlyphCount(void * font);
extern "C" System::Word __cdecl CTFontGetGlyphWithName(void * font, CFStringRef glyphName);
extern "C" int __cdecl CTFontGetGlyphsForCharacters(void * font, System::WideChar * characters, Iosapi::Coregraphics::PCGGlyph glyphs, long count);
extern "C" double __cdecl CTFontGetLeading(void * font);
extern "C" long __cdecl CTFontGetLigatureCaretPositions(void * font, System::Word glyph, Iosapi::Cocoatypes::PCGFloat positions, long maxPositions);
extern "C" Iosapi::Coregraphics::CGAffineTransform __cdecl CTFontGetMatrix(void * font);
extern "C" double __cdecl CTFontGetSize(void * font);
extern "C" double __cdecl CTFontGetSlantAngle(void * font);
extern "C" unsigned __cdecl CTFontGetStringEncoding(void * font);
extern "C" unsigned __cdecl CTFontGetSymbolicTraits(void * font);
extern "C" unsigned long __cdecl CTFontGetTypeID(void);
extern "C" double __cdecl CTFontGetUnderlinePosition(void * font);
extern "C" double __cdecl CTFontGetUnderlineThickness(void * font);
extern "C" unsigned __cdecl CTFontGetUnitsPerEm(void * font);
extern "C" void __cdecl CTFontGetVerticalTranslationsForGlyphs(void * font, Iosapi::Coregraphics::PCGGlyph glyphs, Iosapi::Coregraphics::PCGSize translations, long count);
extern "C" double __cdecl CTFontGetXHeight(void * font);
extern "C" long __cdecl CTFontManagerCompareFontFamilyNames(void * family1, void * family2, void * context);
extern "C" CFArrayRef __cdecl CTFontManagerCopyAvailableFontFamilyNames(void);
extern "C" CFArrayRef __cdecl CTFontManagerCopyAvailableFontURLs(void);
extern "C" CFArrayRef __cdecl CTFontManagerCopyAvailablePostScriptNames(void);
extern "C" CFArrayRef __cdecl CTFontManagerCreateFontDescriptorsFromURL(CFURLRef fileURL);
extern "C" void __cdecl CTFontManagerEnableFontDescriptors(CFArrayRef descriptors, int enable);
extern "C" unsigned __cdecl CTFontManagerGetAutoActivationSetting(CFStringRef bundleIdentifier);
extern "C" unsigned __cdecl CTFontManagerGetScopeForURL(CFURLRef fontURL);
extern "C" int __cdecl CTFontManagerIsSupportedFont(CFURLRef fontURL);
extern "C" int __cdecl CTFontManagerRegisterFontsForURL(CFURLRef fontURL, unsigned scope, Macapi::Corefoundation::PCFErrorRef error);
extern "C" int __cdecl CTFontManagerRegisterFontsForURLs(CFArrayRef fontURLs, unsigned scope, Macapi::Corefoundation::PCFArrayRef errors);
extern "C" int __cdecl CTFontManagerRegisterGraphicsFont(void * font, Macapi::Corefoundation::PCFErrorRef error);
extern "C" void __cdecl CTFontManagerSetAutoActivationSetting(CFStringRef bundleIdentifier, unsigned setting);
extern "C" int __cdecl CTFontManagerUnregisterFontsForURL(CFURLRef fontURL, unsigned scope, Macapi::Corefoundation::PCFErrorRef error);
extern "C" int __cdecl CTFontManagerUnregisterFontsForURLs(CFArrayRef fontURLs, unsigned scope, Macapi::Corefoundation::PCFArrayRef errors);
extern "C" int __cdecl CTFontManagerUnregisterGraphicsFont(void * font, Macapi::Corefoundation::PCFErrorRef error);
extern "C" void __cdecl CTFrameDraw(void * frame, void * context);
extern "C" CFDictionaryRef __cdecl CTFrameGetFrameAttributes(void * frame);
extern "C" void __cdecl CTFrameGetLineOrigins(void * frame, CFRange range, Iosapi::Coregraphics::PCGPoint origins);
extern "C" CFArrayRef __cdecl CTFrameGetLines(void * frame);
extern "C" void * __cdecl CTFrameGetPath(void * frame);
extern "C" CFRange __cdecl CTFrameGetStringRange(void * frame);
extern "C" unsigned long __cdecl CTFrameGetTypeID(void);
extern "C" CFRange __cdecl CTFrameGetVisibleStringRange(void * frame);
extern "C" void * __cdecl CTFramesetterCreateFrame(void * framesetter, CFRange stringRange, void * path, CFDictionaryRef frameAttributes);
extern "C" void * __cdecl CTFramesetterCreateWithAttributedString(CFAttributedStringRef string_);
extern "C" unsigned long __cdecl CTFramesetterGetTypeID(void);
extern "C" void * __cdecl CTFramesetterGetTypesetter(void * framesetter);
extern "C" Iosapi::Foundation::NSSize __cdecl CTFramesetterSuggestFrameSizeWithConstraints(void * framesetter, CFRange stringRange, CFDictionaryRef frameAttributes, Iosapi::Foundation::NSSize constraints, Macapi::Corefoundation::PCFRange fitRange);
extern "C" unsigned __cdecl CTGetCoreTextVersion(void);
extern "C" void * __cdecl CTGlyphInfoCreateWithCharacterIdentifier(System::Word cid, System::Word collection, CFStringRef baseString);
extern "C" void * __cdecl CTGlyphInfoCreateWithGlyph(System::Word glyph, void * font, CFStringRef baseString);
extern "C" void * __cdecl CTGlyphInfoCreateWithGlyphName(CFStringRef glyphName, void * font, CFStringRef baseString);
extern "C" System::Word __cdecl CTGlyphInfoGetCharacterCollection(void * glyphInfo);
extern "C" System::Word __cdecl CTGlyphInfoGetCharacterIdentifier(void * glyphInfo);
extern "C" CFStringRef __cdecl CTGlyphInfoGetGlyphName(void * glyphInfo);
extern "C" unsigned long __cdecl CTGlyphInfoGetTypeID(void);
extern "C" void * __cdecl CTLineCreateJustifiedLine(void * line, double justificationFactor, double justificationWidth);
extern "C" void * __cdecl CTLineCreateTruncatedLine(void * line, double width, unsigned truncationType, void * truncationToken);
extern "C" void * __cdecl CTLineCreateWithAttributedString(CFAttributedStringRef string_);
extern "C" void __cdecl CTLineDraw(void * line, void * context);
extern "C" long __cdecl CTLineGetGlyphCount(void * line);
extern "C" CFArrayRef __cdecl CTLineGetGlyphRuns(void * line);
extern "C" Iosapi::Foundation::NSRect __cdecl CTLineGetImageBounds(void * line, void * context);
extern "C" double __cdecl CTLineGetOffsetForStringIndex(void * line, long charIndex, Iosapi::Cocoatypes::PCGFloat secondaryOffset);
extern "C" double __cdecl CTLineGetPenOffsetForFlush(void * line, double flushFactor, double flushWidth);
extern "C" long __cdecl CTLineGetStringIndexForPosition(void * line, Iosapi::Foundation::NSPoint position);
extern "C" CFRange __cdecl CTLineGetStringRange(void * line);
extern "C" double __cdecl CTLineGetTrailingWhitespaceWidth(void * line);
extern "C" unsigned long __cdecl CTLineGetTypeID(void);
extern "C" double __cdecl CTLineGetTypographicBounds(void * line, Iosapi::Cocoatypes::PCGFloat ascent, Iosapi::Cocoatypes::PCGFloat descent, Iosapi::Cocoatypes::PCGFloat leading);
extern "C" void * __cdecl CTParagraphStyleCreate(PCTParagraphStyleSetting settings, long settingCount);
extern "C" void * __cdecl CTParagraphStyleCreateCopy(void * paragraphStyle);
extern "C" unsigned long __cdecl CTParagraphStyleGetTypeID(void);
extern "C" int __cdecl CTParagraphStyleGetValueForSpecifier(void * paragraphStyle, unsigned spec, unsigned long valueBufferSize, void * valueBuffer);
extern "C" void * __cdecl CTRunDelegateCreate(PCTRunDelegateCallbacks callbacks, void * refCon);
extern "C" void * __cdecl CTRunDelegateGetRefCon(void * runDelegate);
extern "C" unsigned long __cdecl CTRunDelegateGetTypeID(void);
extern "C" void __cdecl CTRunDraw(void * run, void * context, CFRange range);
extern "C" void __cdecl CTRunGetAdvances(void * run, CFRange range, Iosapi::Coregraphics::PCGSize buffer);
extern "C" Iosapi::Coregraphics::PCGSize __cdecl CTRunGetAdvancesPtr(void * run);
extern "C" CFDictionaryRef __cdecl CTRunGetAttributes(void * run);
extern "C" long __cdecl CTRunGetGlyphCount(void * run);
extern "C" void __cdecl CTRunGetGlyphs(void * run, CFRange range, Iosapi::Coregraphics::PCGGlyph buffer);
extern "C" Iosapi::Coregraphics::PCGGlyph __cdecl CTRunGetGlyphsPtr(void * run);
extern "C" Iosapi::Foundation::NSRect __cdecl CTRunGetImageBounds(void * run, void * context, CFRange range);
extern "C" void __cdecl CTRunGetPositions(void * run, CFRange range, Iosapi::Coregraphics::PCGPoint buffer);
extern "C" Iosapi::Coregraphics::PCGPoint __cdecl CTRunGetPositionsPtr(void * run);
extern "C" unsigned __cdecl CTRunGetStatus(void * run);
extern "C" void __cdecl CTRunGetStringIndices(void * run, CFRange range, Macapi::Corefoundation::PCFIndex buffer);
extern "C" Macapi::Corefoundation::PCFIndex __cdecl CTRunGetStringIndicesPtr(void * run);
extern "C" CFRange __cdecl CTRunGetStringRange(void * run);
extern "C" Iosapi::Coregraphics::CGAffineTransform __cdecl CTRunGetTextMatrix(void * run);
extern "C" unsigned long __cdecl CTRunGetTypeID(void);
extern "C" double __cdecl CTRunGetTypographicBounds(void * run, CFRange range, Iosapi::Cocoatypes::PCGFloat ascent, Iosapi::Cocoatypes::PCGFloat descent, Iosapi::Cocoatypes::PCGFloat leading);
extern "C" void * __cdecl CTTextTabCreate(System::Byte alignment, double location, CFDictionaryRef options);
extern "C" System::Byte __cdecl CTTextTabGetAlignment(void * tab);
extern "C" double __cdecl CTTextTabGetLocation(void * tab);
extern "C" CFDictionaryRef __cdecl CTTextTabGetOptions(void * tab);
extern "C" unsigned long __cdecl CTTextTabGetTypeID(void);
extern "C" void * __cdecl CTTypesetterCreateLine(void * typesetter, CFRange stringRange);
extern "C" void * __cdecl CTTypesetterCreateLineWithOffset(void * typesetter, CFRange stringRange, double offset);
extern "C" void * __cdecl CTTypesetterCreateWithAttributedString(CFAttributedStringRef string_);
extern "C" void * __cdecl CTTypesetterCreateWithAttributedStringAndOptions(CFAttributedStringRef string_, CFDictionaryRef options);
extern "C" unsigned long __cdecl CTTypesetterGetTypeID(void);
extern "C" long __cdecl CTTypesetterSuggestClusterBreak(void * typesetter, long startIndex, double width);
extern "C" long __cdecl CTTypesetterSuggestClusterBreakWithOffset(void * typesetter, long startIndex, double width, double offset);
extern "C" long __cdecl CTTypesetterSuggestLineBreak(void * typesetter, long startIndex, double width);
extern "C" long __cdecl CTTypesetterSuggestLineBreakWithOffset(void * typesetter, long startIndex, double width, double offset);
extern DELPHI_PACKAGE void * __fastcall kCTCharacterShapeAttributeName(void);
extern DELPHI_PACKAGE void * __fastcall kCTFontAttributeName(void);
extern DELPHI_PACKAGE void * __fastcall kCTKernAttributeName(void);
extern DELPHI_PACKAGE void * __fastcall kCTLigatureAttributeName(void);
extern DELPHI_PACKAGE void * __fastcall kCTForegroundColorAttributeName(void);
extern DELPHI_PACKAGE void * __fastcall kCTForegroundColorFromContextAttributeName(void);
extern DELPHI_PACKAGE void * __fastcall kCTParagraphStyleAttributeName(void);
extern DELPHI_PACKAGE void * __fastcall kCTStrokeWidthAttributeName(void);
extern DELPHI_PACKAGE void * __fastcall kCTStrokeColorAttributeName(void);
extern DELPHI_PACKAGE void * __fastcall kCTSuperscriptAttributeName(void);
extern DELPHI_PACKAGE void * __fastcall kCTUnderlineColorAttributeName(void);
extern DELPHI_PACKAGE void * __fastcall kCTUnderlineStyleAttributeName(void);
extern DELPHI_PACKAGE void * __fastcall kCTVerticalFormsAttributeName(void);
extern DELPHI_PACKAGE void * __fastcall kCTGlyphInfoAttributeName(void);
}	/* namespace Coretext */
}	/* namespace Iosapi */
#if !defined(DELPHIHEADER_NO_IMPLICIT_NAMESPACE_USE) && !defined(NO_USING_NAMESPACE_IOSAPI_CORETEXT)
using namespace Iosapi::Coretext;
#endif
#if !defined(DELPHIHEADER_NO_IMPLICIT_NAMESPACE_USE) && !defined(NO_USING_NAMESPACE_IOSAPI)
using namespace Iosapi;
#endif
#pragma pack(pop)
#pragma option pop

#pragma delphiheader end.
//-- end unit ----------------------------------------------------------------
#endif	// Iosapi_CoretextHPP
